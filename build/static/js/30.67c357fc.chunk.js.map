{"version":3,"sources":["routes/Tables/Carefolders/Components/PreViewDialog.js","../node_modules/dom-to-image/src/dom-to-image.js","routes/Tables/PatientsTable/index.js"],"names":["PreviewDialgo","props","state","open","instance","title","content","this","setState","isTrue","logo","split","onClose","closeDialog","bind","aria-labelledby","className","onClick","onCloseDialog","id","selectedDocumentList","map","element","index","key","variant","dangerouslySetInnerHTML","__html","React","Component","global","util","escape","string","replace","parseExtension","mimeType","url","extension","toLowerCase","WOFF","mimes","dataAsUrl","type","isDataUrl","search","canvasToBlob","canvas","toBlob","Promise","resolve","binaryString","window","atob","toDataURL","length","binaryArray","Uint8Array","i","charCodeAt","Blob","resolveUrl","baseUrl","doc","document","implementation","createHTMLDocument","base","createElement","head","appendChild","a","body","href","getAndEncode","domtoimage","impl","options","cacheBust","test","Date","getTime","placeholder","request","XMLHttpRequest","onreadystatechange","readyState","status","fail","encoder","FileReader","onloadend","result","readAsDataURL","response","ontimeout","responseType","timeout","send","imagePlaceholder","message","console","error","uid","Math","random","pow","toString","slice","delay","ms","arg","setTimeout","asArray","arrayLike","array","push","escapeXhtml","makeImage","uri","reject","image","Image","onload","onerror","src","width","node","leftBorder","px","rightBorder","scrollWidth","height","topBorder","bottomBorder","scrollHeight","match","exec","styleProperty","value","getComputedStyle","getPropertyValue","parseFloat","newUtil","inliner","URL_REGEX","inlineAll","get","shouldProcess","nothingToInline","then","readUrls","urls","done","forEach","inline","filter","data","dataUrl","RegExp","urlAsRegex","newInliner","fontFaces","resolveAll","readAll","webFonts","all","webFont","cssStrings","join","styleSheets","cssRules","sheet","e","log","rule","CSSRule","FONT_FACE_RULE","style","rules","newWebFont","webFontRule","parentStyleSheet","cssText","newFontFaces","images","Element","background","inlined","setProperty","getPropertyPriority","inlineBackground","HTMLImageElement","newImage","childNodes","child","newImages","defaultOptions","undefined","toSvg","toPng","draw","toJpeg","quality","toPixelData","getContext","getImageData","copyOptions","cloneNode","root","HTMLCanvasElement","clone","cloneChildren","original","cloneStyle","clonePseudoElements","copyUserInput","fixSvg","source","target","name","copyProperties","styleElement","selector","formatCssText","formatCssProperties","createTextNode","formatPseudoElementStyle","clonePseudoElement","HTMLTextAreaElement","innerHTML","HTMLInputElement","setAttribute","SVGElement","SVGRectElement","attribute","getAttribute","processClone","children","cloneChildrenInOrder","parent","childClone","embedFonts","inlineImages","bgcolor","backgroundColor","Object","keys","property","XMLSerializer","serializeToString","xhtml","foreignObject","svg","makeSvgDataUri","domNode","ctx","fillStyle","fillRect","newCanvas","drawImage","styleNode","module","exports","insuranceList","pharmaciesList","salutationList","Herr","Frau","degreeList","1","2","3","4","5","statusList","Aktiv","Inaktiv","Unvollst√§ndig","family_doctorsList","resourcesList","servicesList","usersList","PatientsTable","handleChangeDate","event","birthday","onChangeDoctor","familyDoctor","onChangePharmacies","pharmacy","onChangeInsurance","insurance","onChangeResources","selected","onChangeUsers","selectedUsers","onChangeServices","selectedservice","columns","field","render","rowData","picture","defaultUrl","editComponent","onChange","files","lookup","defaultValue","InputLabelProps","shrink","selectedResources","JSON","parse","resources","isEditResources","selectedServices","services","previewDocument","currentService","isEditServices","userGroup","isEditUsers","size","color","checked","serviceplan","isEditServiceplan","documentsList","folders","downloadDocs","preViewDialog","createRef","relationDocs","folder","indexOf","service","folderDocs","documents","relationDocsTemps","concat","Set","current","openDialog","generatePdf","documentsLen","formate","div","getElementById","HTML_Height","clientHeight","pdf","jsPDF","canvas_image_height","totalPDFPages","ceil","addImage","canvas_image_width","addPage","top_left_margin","save","pageHight","ipageHight","paddingBottom","user","localStorage","getItem","instance_id","userService","showPatients","pagination","res","ele","users","family_doctors","doctorName","insurances","pharmacies","pharmacyName","prevState","patients","center","maxWidth","xs","lg","editable","onRowAdd","newData","stringify","firstName","lastName","phone1","phone2","formData","FormData","append","addPatients","catch","alert","onRowUpdate","oldData","editPatients","onRowDelete","deletePatients","splice","ref"],"mappings":"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","file":"static/js/30.67c357fc.chunk.js","sourcesContent":["/**\r\n * Confirmation dialog component\r\n*/\r\n/* eslint-disable */\r\nimport React from 'react';\r\nimport { Button, Box, Typography, Dialog, Container, DialogActions, DialogContent, TextField, FormControl, InputLabel, Select, MenuItem } from '@material-ui/core';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nimport { SmallTitleBar } from '../../../../components/GlobalComponents';\r\nimport IntlMessages from 'util/IntlMessages';\r\n\r\nclass PreviewDialgo extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t}\r\n\tstate = {\r\n\t\topen: false,\r\n\t\tinstance: null,\r\n\t\ttitle: '',\r\n\t\tcontent: ''\r\n\t};\r\n\r\n\t//Define function for open confirmation dialog box\r\n\topenDialog() {\r\n\t\tthis.setState({ open: true });\r\n\t};\r\n\r\n\t//Define function for close confirmation dialog box \r\n\tcloseDialog() {\r\n\t\tthis.setState({ open: false });\r\n\t};\r\n\r\n\t//Define function for close confirmation dialog box and callback for delete item \r\n\tonCloseDialog(isTrue) {\r\n\t\tthis.setState({ open: false });\r\n\t};\r\n\tgetUrl(logo) {\r\n\t\tlet url = '/backend_latest/file_storage/' + logo.split('/')[5];\r\n\t\tlet defaultUrl = \"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcSTbZrzTIuXAe01k5wgrhWGzPRPRliQygmBCA&usqp=CAU\";\r\n\t\treturn defaultUrl\r\n\t}\r\n\trender() {\r\n\t\treturn (\r\n\r\n\t\t\t<Dialog\r\n\t\t\t\topen={this.state.open}\r\n\t\t\t\tonClose={this.closeDialog.bind(this)}\r\n\t\t\t\taria-labelledby=\"responsive-dialog-title\"\r\n\t\t\t\tclassName=\"confirmation-dialog\"\r\n\r\n\t\t\t>\r\n\t\t\t\t<DialogContent className=\"p-10 downloadPaper\">\r\n\t\t\t\t\t<Box>\r\n\t\t\t\t\t\t<CloseIcon className=\"closeBtn\" onClick={() => this.onCloseDialog(false)}></CloseIcon>\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t\t<div id=\"downloadArea\">\r\n\t\t\t\t\t\t{this.props.selectedDocumentList.map((element, index) => {\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<Box key={index} className=\"pageContainer\" id={`page-${index}`}>\r\n\t\t\t\t\t\t\t\t\t{/* <Box textAlign=\"center\" className=\"headerBar\">\r\n\t\t\t\t\t\t\t\t\t\t<Box pt={1} fontSize=\"body2.fontSize\">\r\n\t\t\t\t\t\t\t\t\t\t\t<img src={this.getUrl(element.instanceLogo)} />\r\n\t\t\t\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t\t\t\t<Typography variant=\"h4\">\r\n\t\t\t\t\t\t\t\t\t\t\t{element.instanceName}\r\n\t\t\t\t\t\t\t\t\t\t</Typography>\r\n\r\n\t\t\t\t\t\t\t\t\t</Box> */}\r\n\t\t\t\t\t\t\t\t\t<Box className=\"p-10\">\r\n\t\t\t\t\t\t\t\t\t\t<Typography variant=\"h4\" className=\"title\">\r\n\t\t\t\t\t\t\t\t\t\t\t{element.title}\r\n\t\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t\t\t<Box className=\"p-10 contentHtml\">\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div dangerouslySetInnerHTML={{\r\n\t\t\t\t\t\t\t\t\t\t\t__html: element.content\r\n\t\t\t\t\t\t\t\t\t\t}}>\r\n\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t\t\t{/* <Box bgcolor=\"background.paper\"  >\r\n\t\t\t\t\t\t\t\t\t\t<Box className=\"footerBar\" >\r\n\t\t\t\t\t\t\t\t\t\t\t<div textAlign=\"left\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Box pt={1} fontSize=\"body2.fontSize\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tinstance Name : {element.instanceName}\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Box pt={1} fontSize=\"body2.fontSize\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tContact Email : {element.email}\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<Box>\r\n\t\t\t\t\t\t\t\t\t\t\t\tSeilte 3 von 3\r\n\t\t\t\t\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t\t\t\t</Box>\r\n\r\n\t\t\t\t\t\t\t\t\t</Box> */}\r\n\t\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t})\r\n\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t</DialogContent>\r\n\r\n\t\t\t</Dialog>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default PreviewDialgo;","(function (global) {\n    'use strict';\n\n    var util = newUtil();\n    var inliner = newInliner();\n    var fontFaces = newFontFaces();\n    var images = newImages();\n\n    // Default impl options\n    var defaultOptions = {\n        // Default is to fail on error, no placeholder\n        imagePlaceholder: undefined,\n        // Default cache bust is false, it will use the cache\n        cacheBust: false\n    };\n\n    var domtoimage = {\n        toSvg: toSvg,\n        toPng: toPng,\n        toJpeg: toJpeg,\n        toBlob: toBlob,\n        toPixelData: toPixelData,\n        impl: {\n            fontFaces: fontFaces,\n            images: images,\n            util: util,\n            inliner: inliner,\n            options: {}\n        }\n    };\n\n    if (typeof module !== 'undefined')\n        module.exports = domtoimage;\n    else\n        global.domtoimage = domtoimage;\n\n\n    /**\n     * @param {Node} node - The DOM Node object to render\n     * @param {Object} options - Rendering options\n     * @param {Function} options.filter - Should return true if passed node should be included in the output\n     *          (excluding node means excluding it's children as well). Not called on the root node.\n     * @param {String} options.bgcolor - color for the background, any valid CSS color value.\n     * @param {Number} options.width - width to be applied to node before rendering.\n     * @param {Number} options.height - height to be applied to node before rendering.\n     * @param {Object} options.style - an object whose properties to be copied to node's style before rendering.\n     * @param {Number} options.quality - a Number between 0 and 1 indicating image quality (applicable to JPEG only),\n                defaults to 1.0.\n     * @param {String} options.imagePlaceholder - dataURL to use as a placeholder for failed images, default behaviour is to fail fast on images we can't fetch\n     * @param {Boolean} options.cacheBust - set to true to cache bust by appending the time to the request url\n     * @return {Promise} - A promise that is fulfilled with a SVG image data URL\n     * */\n    function toSvg(node, options) {\n        options = options || {};\n        copyOptions(options);\n        return Promise.resolve(node)\n            .then(function (node) {\n                return cloneNode(node, options.filter, true);\n            })\n            .then(embedFonts)\n            .then(inlineImages)\n            .then(applyOptions)\n            .then(function (clone) {\n                return makeSvgDataUri(clone,\n                    options.width || util.width(node),\n                    options.height || util.height(node)\n                );\n            });\n\n        function applyOptions(clone) {\n            if (options.bgcolor) clone.style.backgroundColor = options.bgcolor;\n\n            if (options.width) clone.style.width = options.width + 'px';\n            if (options.height) clone.style.height = options.height + 'px';\n\n            if (options.style)\n                Object.keys(options.style).forEach(function (property) {\n                    clone.style[property] = options.style[property];\n                });\n\n            return clone;\n        }\n    }\n\n    /**\n     * @param {Node} node - The DOM Node object to render\n     * @param {Object} options - Rendering options, @see {@link toSvg}\n     * @return {Promise} - A promise that is fulfilled with a Uint8Array containing RGBA pixel data.\n     * */\n    function toPixelData(node, options) {\n        return draw(node, options || {})\n            .then(function (canvas) {\n                return canvas.getContext('2d').getImageData(\n                    0,\n                    0,\n                    util.width(node),\n                    util.height(node)\n                ).data;\n            });\n    }\n\n    /**\n     * @param {Node} node - The DOM Node object to render\n     * @param {Object} options - Rendering options, @see {@link toSvg}\n     * @return {Promise} - A promise that is fulfilled with a PNG image data URL\n     * */\n    function toPng(node, options) {\n        return draw(node, options || {})\n            .then(function (canvas) {\n                return canvas.toDataURL();\n            });\n    }\n\n    /**\n     * @param {Node} node - The DOM Node object to render\n     * @param {Object} options - Rendering options, @see {@link toSvg}\n     * @return {Promise} - A promise that is fulfilled with a JPEG image data URL\n     * */\n    function toJpeg(node, options) {\n        options = options || {};\n        return draw(node, options)\n            .then(function (canvas) {\n                return canvas.toDataURL('image/jpeg', options.quality || 1.0);\n            });\n    }\n\n    /**\n     * @param {Node} node - The DOM Node object to render\n     * @param {Object} options - Rendering options, @see {@link toSvg}\n     * @return {Promise} - A promise that is fulfilled with a PNG image blob\n     * */\n    function toBlob(node, options) {\n        return draw(node, options || {})\n            .then(util.canvasToBlob);\n    }\n\n    function copyOptions(options) {\n        // Copy options to impl options for use in impl\n        if(typeof(options.imagePlaceholder) === 'undefined') {\n            domtoimage.impl.options.imagePlaceholder = defaultOptions.imagePlaceholder;\n        } else {\n            domtoimage.impl.options.imagePlaceholder = options.imagePlaceholder;\n        }\n\n        if(typeof(options.cacheBust) === 'undefined') {\n            domtoimage.impl.options.cacheBust = defaultOptions.cacheBust;\n        } else {\n            domtoimage.impl.options.cacheBust = options.cacheBust;\n        }\n    }\n\n    function draw(domNode, options) {\n        return toSvg(domNode, options)\n            .then(util.makeImage)\n            .then(util.delay(100))\n            .then(function (image) {\n                var canvas = newCanvas(domNode);\n                canvas.getContext('2d').drawImage(image, 0, 0);\n                return canvas;\n            });\n\n        function newCanvas(domNode) {\n            var canvas = document.createElement('canvas');\n            canvas.width = options.width || util.width(domNode);\n            canvas.height = options.height || util.height(domNode);\n\n            if (options.bgcolor) {\n                var ctx = canvas.getContext('2d');\n                ctx.fillStyle = options.bgcolor;\n                ctx.fillRect(0, 0, canvas.width, canvas.height);\n            }\n\n            return canvas;\n        }\n    }\n\n    function cloneNode(node, filter, root) {\n        if (!root && filter && !filter(node)) return Promise.resolve();\n\n        return Promise.resolve(node)\n            .then(makeNodeCopy)\n            .then(function (clone) {\n                return cloneChildren(node, clone, filter);\n            })\n            .then(function (clone) {\n                return processClone(node, clone);\n            });\n\n        function makeNodeCopy(node) {\n            if (node instanceof HTMLCanvasElement) return util.makeImage(node.toDataURL());\n            return node.cloneNode(false);\n        }\n\n        function cloneChildren(original, clone, filter) {\n            var children = original.childNodes;\n            if (children.length === 0) return Promise.resolve(clone);\n\n            return cloneChildrenInOrder(clone, util.asArray(children), filter)\n                .then(function () {\n                    return clone;\n                });\n\n            function cloneChildrenInOrder(parent, children, filter) {\n                var done = Promise.resolve();\n                children.forEach(function (child) {\n                    done = done\n                        .then(function () {\n                            return cloneNode(child, filter);\n                        })\n                        .then(function (childClone) {\n                            if (childClone) parent.appendChild(childClone);\n                        });\n                });\n                return done;\n            }\n        }\n\n        function processClone(original, clone) {\n            if (!(clone instanceof Element)) return clone;\n\n            return Promise.resolve()\n                .then(cloneStyle)\n                .then(clonePseudoElements)\n                .then(copyUserInput)\n                .then(fixSvg)\n                .then(function () {\n                    return clone;\n                });\n\n            function cloneStyle() {\n                copyStyle(window.getComputedStyle(original), clone.style);\n\n                function copyStyle(source, target) {\n                    if (source.cssText) target.cssText = source.cssText;\n                    else copyProperties(source, target);\n\n                    function copyProperties(source, target) {\n                        util.asArray(source).forEach(function (name) {\n                            target.setProperty(\n                                name,\n                                source.getPropertyValue(name),\n                                source.getPropertyPriority(name)\n                            );\n                        });\n                    }\n                }\n            }\n\n            function clonePseudoElements() {\n                [':before', ':after'].forEach(function (element) {\n                    clonePseudoElement(element);\n                });\n\n                function clonePseudoElement(element) {\n                    var style = window.getComputedStyle(original, element);\n                    var content = style.getPropertyValue('content');\n\n                    if (content === '' || content === 'none') return;\n\n                    var className = util.uid();\n                    clone.className = clone.className + ' ' + className;\n                    var styleElement = document.createElement('style');\n                    styleElement.appendChild(formatPseudoElementStyle(className, element, style));\n                    clone.appendChild(styleElement);\n\n                    function formatPseudoElementStyle(className, element, style) {\n                        var selector = '.' + className + ':' + element;\n                        var cssText = style.cssText ? formatCssText(style) : formatCssProperties(style);\n                        return document.createTextNode(selector + '{' + cssText + '}');\n\n                        function formatCssText(style) {\n                            var content = style.getPropertyValue('content');\n                            return style.cssText + ' content: ' + content + ';';\n                        }\n\n                        function formatCssProperties(style) {\n\n                            return util.asArray(style)\n                                .map(formatProperty)\n                                .join('; ') + ';';\n\n                            function formatProperty(name) {\n                                return name + ': ' +\n                                    style.getPropertyValue(name) +\n                                    (style.getPropertyPriority(name) ? ' !important' : '');\n                            }\n                        }\n                    }\n                }\n            }\n\n            function copyUserInput() {\n                if (original instanceof HTMLTextAreaElement) clone.innerHTML = original.value;\n                if (original instanceof HTMLInputElement) clone.setAttribute(\"value\", original.value);\n            }\n\n            function fixSvg() {\n                if (!(clone instanceof SVGElement)) return;\n                clone.setAttribute('xmlns', 'http://www.w3.org/2000/svg');\n\n                if (!(clone instanceof SVGRectElement)) return;\n                ['width', 'height'].forEach(function (attribute) {\n                    var value = clone.getAttribute(attribute);\n                    if (!value) return;\n\n                    clone.style.setProperty(attribute, value);\n                });\n            }\n        }\n    }\n\n    function embedFonts(node) {\n        return fontFaces.resolveAll()\n            .then(function (cssText) {\n                var styleNode = document.createElement('style');\n                node.appendChild(styleNode);\n                styleNode.appendChild(document.createTextNode(cssText));\n                return node;\n            });\n    }\n\n    function inlineImages(node) {\n        return images.inlineAll(node)\n            .then(function () {\n                return node;\n            });\n    }\n\n    function makeSvgDataUri(node, width, height) {\n        return Promise.resolve(node)\n            .then(function (node) {\n                node.setAttribute('xmlns', 'http://www.w3.org/1999/xhtml');\n                return new XMLSerializer().serializeToString(node);\n            })\n            .then(util.escapeXhtml)\n            .then(function (xhtml) {\n                return '<foreignObject x=\"0\" y=\"0\" width=\"100%\" height=\"100%\">' + xhtml + '</foreignObject>';\n            })\n            .then(function (foreignObject) {\n                return '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"' + width + '\" height=\"' + height + '\">' +\n                    foreignObject + '</svg>';\n            })\n            .then(function (svg) {\n                return 'data:image/svg+xml;charset=utf-8,' + svg;\n            });\n    }\n\n    function newUtil() {\n        return {\n            escape: escape,\n            parseExtension: parseExtension,\n            mimeType: mimeType,\n            dataAsUrl: dataAsUrl,\n            isDataUrl: isDataUrl,\n            canvasToBlob: canvasToBlob,\n            resolveUrl: resolveUrl,\n            getAndEncode: getAndEncode,\n            uid: uid(),\n            delay: delay,\n            asArray: asArray,\n            escapeXhtml: escapeXhtml,\n            makeImage: makeImage,\n            width: width,\n            height: height\n        };\n\n        function mimes() {\n            /*\n             * Only WOFF and EOT mime types for fonts are 'real'\n             * see http://www.iana.org/assignments/media-types/media-types.xhtml\n             */\n            var WOFF = 'application/font-woff';\n            var JPEG = 'image/jpeg';\n\n            return {\n                'woff': WOFF,\n                'woff2': WOFF,\n                'ttf': 'application/font-truetype',\n                'eot': 'application/vnd.ms-fontobject',\n                'png': 'image/png',\n                'jpg': JPEG,\n                'jpeg': JPEG,\n                'gif': 'image/gif',\n                'tiff': 'image/tiff',\n                'svg': 'image/svg+xml'\n            };\n        }\n\n        function parseExtension(url) {\n            var match = /\\.([^\\.\\/]*?)$/g.exec(url);\n            if (match) return match[1];\n            else return '';\n        }\n\n        function mimeType(url) {\n            var extension = parseExtension(url).toLowerCase();\n            return mimes()[extension] || '';\n        }\n\n        function isDataUrl(url) {\n            return url.search(/^(data:)/) !== -1;\n        }\n\n        function toBlob(canvas) {\n            return new Promise(function (resolve) {\n                var binaryString = window.atob(canvas.toDataURL().split(',')[1]);\n                var length = binaryString.length;\n                var binaryArray = new Uint8Array(length);\n\n                for (var i = 0; i < length; i++)\n                    binaryArray[i] = binaryString.charCodeAt(i);\n\n                resolve(new Blob([binaryArray], {\n                    type: 'image/png'\n                }));\n            });\n        }\n\n        function canvasToBlob(canvas) {\n            if (canvas.toBlob)\n                return new Promise(function (resolve) {\n                    canvas.toBlob(resolve);\n                });\n\n            return toBlob(canvas);\n        }\n\n        function resolveUrl(url, baseUrl) {\n            var doc = document.implementation.createHTMLDocument();\n            var base = doc.createElement('base');\n            doc.head.appendChild(base);\n            var a = doc.createElement('a');\n            doc.body.appendChild(a);\n            base.href = baseUrl;\n            a.href = url;\n            return a.href;\n        }\n\n        function uid() {\n            var index = 0;\n\n            return function () {\n                return 'u' + fourRandomChars() + index++;\n\n                function fourRandomChars() {\n                    /* see http://stackoverflow.com/a/6248722/2519373 */\n                    return ('0000' + (Math.random() * Math.pow(36, 4) << 0).toString(36)).slice(-4);\n                }\n            };\n        }\n\n        function makeImage(uri) {\n            return new Promise(function (resolve, reject) {\n                var image = new Image();\n                image.onload = function () {\n                    resolve(image);\n                };\n                image.onerror = reject;\n                image.src = uri;\n            });\n        }\n\n        function getAndEncode(url) {\n            var TIMEOUT = 30000;\n            if(domtoimage.impl.options.cacheBust) {\n                // Cache bypass so we dont have CORS issues with cached images\n                // Source: https://developer.mozilla.org/en/docs/Web/API/XMLHttpRequest/Using_XMLHttpRequest#Bypassing_the_cache\n                url += ((/\\?/).test(url) ? \"&\" : \"?\") + (new Date()).getTime();\n            }\n\n            return new Promise(function (resolve) {\n                var request = new XMLHttpRequest();\n\n                request.onreadystatechange = done;\n                request.ontimeout = timeout;\n                request.responseType = 'blob';\n                request.timeout = TIMEOUT;\n                request.open('GET', url, true);\n                request.send();\n\n                var placeholder;\n                if(domtoimage.impl.options.imagePlaceholder) {\n                    var split = domtoimage.impl.options.imagePlaceholder.split(/,/);\n                    if(split && split[1]) {\n                        placeholder = split[1];\n                    }\n                }\n\n                function done() {\n                    if (request.readyState !== 4) return;\n\n                    if (request.status !== 200) {\n                        if(placeholder) {\n                            resolve(placeholder);\n                        } else {\n                            fail('cannot fetch resource: ' + url + ', status: ' + request.status);\n                        }\n\n                        return;\n                    }\n\n                    var encoder = new FileReader();\n                    encoder.onloadend = function () {\n                        var content = encoder.result.split(/,/)[1];\n                        resolve(content);\n                    };\n                    encoder.readAsDataURL(request.response);\n                }\n\n                function timeout() {\n                    if(placeholder) {\n                        resolve(placeholder);\n                    } else {\n                        fail('timeout of ' + TIMEOUT + 'ms occured while fetching resource: ' + url);\n                    }\n                }\n\n                function fail(message) {\n                    console.error(message);\n                    resolve('');\n                }\n            });\n        }\n\n        function dataAsUrl(content, type) {\n            return 'data:' + type + ';base64,' + content;\n        }\n\n        function escape(string) {\n            return string.replace(/([.*+?^${}()|\\[\\]\\/\\\\])/g, '\\\\$1');\n        }\n\n        function delay(ms) {\n            return function (arg) {\n                return new Promise(function (resolve) {\n                    setTimeout(function () {\n                        resolve(arg);\n                    }, ms);\n                });\n            };\n        }\n\n        function asArray(arrayLike) {\n            var array = [];\n            var length = arrayLike.length;\n            for (var i = 0; i < length; i++) array.push(arrayLike[i]);\n            return array;\n        }\n\n        function escapeXhtml(string) {\n            return string.replace(/#/g, '%23').replace(/\\n/g, '%0A');\n        }\n\n        function width(node) {\n            var leftBorder = px(node, 'border-left-width');\n            var rightBorder = px(node, 'border-right-width');\n            return node.scrollWidth + leftBorder + rightBorder;\n        }\n\n        function height(node) {\n            var topBorder = px(node, 'border-top-width');\n            var bottomBorder = px(node, 'border-bottom-width');\n            return node.scrollHeight + topBorder + bottomBorder;\n        }\n\n        function px(node, styleProperty) {\n            var value = window.getComputedStyle(node).getPropertyValue(styleProperty);\n            return parseFloat(value.replace('px', ''));\n        }\n    }\n\n    function newInliner() {\n        var URL_REGEX = /url\\(['\"]?([^'\"]+?)['\"]?\\)/g;\n\n        return {\n            inlineAll: inlineAll,\n            shouldProcess: shouldProcess,\n            impl: {\n                readUrls: readUrls,\n                inline: inline\n            }\n        };\n\n        function shouldProcess(string) {\n            return string.search(URL_REGEX) !== -1;\n        }\n\n        function readUrls(string) {\n            var result = [];\n            var match;\n            while ((match = URL_REGEX.exec(string)) !== null) {\n                result.push(match[1]);\n            }\n            return result.filter(function (url) {\n                return !util.isDataUrl(url);\n            });\n        }\n\n        function inline(string, url, baseUrl, get) {\n            return Promise.resolve(url)\n                .then(function (url) {\n                    return baseUrl ? util.resolveUrl(url, baseUrl) : url;\n                })\n                .then(get || util.getAndEncode)\n                .then(function (data) {\n                    return util.dataAsUrl(data, util.mimeType(url));\n                })\n                .then(function (dataUrl) {\n                    return string.replace(urlAsRegex(url), '$1' + dataUrl + '$3');\n                });\n\n            function urlAsRegex(url) {\n                return new RegExp('(url\\\\([\\'\"]?)(' + util.escape(url) + ')([\\'\"]?\\\\))', 'g');\n            }\n        }\n\n        function inlineAll(string, baseUrl, get) {\n            if (nothingToInline()) return Promise.resolve(string);\n\n            return Promise.resolve(string)\n                .then(readUrls)\n                .then(function (urls) {\n                    var done = Promise.resolve(string);\n                    urls.forEach(function (url) {\n                        done = done.then(function (string) {\n                            return inline(string, url, baseUrl, get);\n                        });\n                    });\n                    return done;\n                });\n\n            function nothingToInline() {\n                return !shouldProcess(string);\n            }\n        }\n    }\n\n    function newFontFaces() {\n        return {\n            resolveAll: resolveAll,\n            impl: {\n                readAll: readAll\n            }\n        };\n\n        function resolveAll() {\n            return readAll(document)\n                .then(function (webFonts) {\n                    return Promise.all(\n                        webFonts.map(function (webFont) {\n                            return webFont.resolve();\n                        })\n                    );\n                })\n                .then(function (cssStrings) {\n                    return cssStrings.join('\\n');\n                });\n        }\n\n        function readAll() {\n            return Promise.resolve(util.asArray(document.styleSheets))\n                .then(getCssRules)\n                .then(selectWebFontRules)\n                .then(function (rules) {\n                    return rules.map(newWebFont);\n                });\n\n            function selectWebFontRules(cssRules) {\n                return cssRules\n                    .filter(function (rule) {\n                        return rule.type === CSSRule.FONT_FACE_RULE;\n                    })\n                    .filter(function (rule) {\n                        return inliner.shouldProcess(rule.style.getPropertyValue('src'));\n                    });\n            }\n\n            function getCssRules(styleSheets) {\n                var cssRules = [];\n                styleSheets.forEach(function (sheet) {\n                    try {\n                        util.asArray(sheet.cssRules || []).forEach(cssRules.push.bind(cssRules));\n                    } catch (e) {\n                        console.log('Error while reading CSS rules from ' + sheet.href, e.toString());\n                    }\n                });\n                return cssRules;\n            }\n\n            function newWebFont(webFontRule) {\n                return {\n                    resolve: function resolve() {\n                        var baseUrl = (webFontRule.parentStyleSheet || {}).href;\n                        return inliner.inlineAll(webFontRule.cssText, baseUrl);\n                    },\n                    src: function () {\n                        return webFontRule.style.getPropertyValue('src');\n                    }\n                };\n            }\n        }\n    }\n\n    function newImages() {\n        return {\n            inlineAll: inlineAll,\n            impl: {\n                newImage: newImage\n            }\n        };\n\n        function newImage(element) {\n            return {\n                inline: inline\n            };\n\n            function inline(get) {\n                if (util.isDataUrl(element.src)) return Promise.resolve();\n\n                return Promise.resolve(element.src)\n                    .then(get || util.getAndEncode)\n                    .then(function (data) {\n                        return util.dataAsUrl(data, util.mimeType(element.src));\n                    })\n                    .then(function (dataUrl) {\n                        return new Promise(function (resolve, reject) {\n                            element.onload = resolve;\n                            element.onerror = reject;\n                            element.src = dataUrl;\n                        });\n                    });\n            }\n        }\n\n        function inlineAll(node) {\n            if (!(node instanceof Element)) return Promise.resolve(node);\n\n            return inlineBackground(node)\n                .then(function () {\n                    if (node instanceof HTMLImageElement)\n                        return newImage(node).inline();\n                    else\n                        return Promise.all(\n                            util.asArray(node.childNodes).map(function (child) {\n                                return inlineAll(child);\n                            })\n                        );\n                });\n\n            function inlineBackground(node) {\n                var background = node.style.getPropertyValue('background');\n\n                if (!background) return Promise.resolve(node);\n\n                return inliner.inlineAll(background)\n                    .then(function (inlined) {\n                        node.style.setProperty(\n                            'background',\n                            inlined,\n                            node.style.getPropertyPriority('background')\n                        );\n                    })\n                    .then(function () {\n                        return node;\n                    });\n            }\n        }\n    }\n})(this);\n","/**\r\n * Search Table\r\n*/\r\nimport React, { Component } from 'react';\r\nimport MaterialTable from 'material-table';\r\nimport { Container, Box, Switch, FormControl, InputLabel, TextField } from '@material-ui/core';\r\nimport { AutoComplete, MultiSelect } from '@progress/kendo-react-dropdowns';\r\nimport { userService } from '../../../_services';\r\n//Components\r\nimport { SmallTitleBar } from 'components/GlobalComponents';\r\nimport IntlMessages from 'util/IntlMessages';\r\nimport FolderOutlinedIcon from '@material-ui/icons/FolderOutlined';\r\nimport { jsPDF } from \"jspdf\";\r\nimport domtoimage from 'dom-to-image';\r\nimport PreViewDialog from '../Carefolders/Components/PreViewDialog';\r\n\r\n\r\nlet insuranceList = [];\r\nlet pharmaciesList = [];\r\nlet salutationList = { Herr: 'Herr', Frau: 'Frau' };\r\nlet degreeList = { 1: 1, 2: 2, 3: 3, 4: 4, 5: 5 };\r\nlet statusList = { Aktiv: 'Aktiv', Inaktiv: 'Inaktiv', Unvollst√§ndig: 'Unvollst√§ndig' };\r\nlet family_doctorsList = {};\r\nlet resourcesList = [];\r\nlet servicesList = [];\r\nlet usersList = [];\r\n\r\nclass PatientsTable extends Component {\r\n   constructor(props) {\r\n      super(props)\r\n      this.state = {\r\n         columns: [\r\n            {\r\n               title: 'Picture', field: 'picture', render: rowData => <img src={rowData.picture ? rowData.picture : this.defaultUrl} className=\"logo-td bdr-rad-50\" />,\r\n               editComponent: props => {\r\n                  return (\r\n                     <input\r\n                        type='file'\r\n                        onChange={e => props.onChange(e.target.files[0])}\r\n                     />\r\n                  )\r\n\r\n               }\r\n            },\r\n            { title: 'Salutation', field: 'salutation', lookup: salutationList },\r\n            { title: '*First Name', field: 'firstName' },\r\n            { title: '*Last Name', field: 'lastName' },\r\n            { title: 'Street nr', field: 'streetNr' },\r\n            { title: 'zip code', field: 'zipCode' },\r\n            { title: 'City', field: 'city' },\r\n\r\n            {\r\n               title: 'Birthday', field: 'birthday', render: rowData => {\r\n                  return (<div>\r\n                     {rowData.birthday}\r\n                  </div>)\r\n               },\r\n               editComponent: rowData => {\r\n                  return (\r\n                     <TextField\r\n                        className=\"full-width\"\r\n                        id=\"date\"\r\n                        type=\"date\"\r\n                        defaultValue=\"2017-05-24\"\r\n                        InputLabelProps={{\r\n                           shrink: true,\r\n                        }}\r\n                        value={this.state.birthday}\r\n                        onChange={this.handleChangeDate}\r\n                     />)\r\n               }\r\n            },\r\n            { title: '*Phone 1', field: 'phone1' },\r\n            { title: '*Phone 2', field: 'phone2' },\r\n            { title: 'E-Mail', field: 'email' },\r\n\r\n            {\r\n               title: 'Resources', field: 'resources', render: props => {\r\n                  let selectedResources = [];\r\n                  selectedResources = JSON.parse(props.resources);\r\n                  if (!selectedResources) {\r\n                     selectedResources = [];\r\n                  }\r\n                  return (\r\n                     <div>\r\n                        {\r\n                           selectedResources.map((value, index) => {\r\n                              return (<div key={index}>{value}</div>)\r\n                           })\r\n                        }\r\n                     </div>\r\n\r\n                  )\r\n\r\n\r\n               },\r\n               editComponent: rowData => {\r\n                  if (rowData.rowData.id) {\r\n                     let selected = JSON.parse(rowData.rowData.resources);\r\n                     if (!selected) {\r\n                        selected = [];\r\n                     }\r\n                     if (this.state.isEditResources) {\r\n                        this.setState({ selected: selected, isEditResources: false })\r\n                     }\r\n                  }\r\n\r\n                  return (\r\n                     <MultiSelect\r\n                        data={resourcesList}\r\n                        value={this.state.selected}\r\n                        onChange={this.onChangeResources}\r\n                     />\r\n                  )\r\n\r\n               }\r\n\r\n            },\r\n\r\n            {\r\n               title: '*Insurance', field: 'insurance', editComponent: rowData => {\r\n                  return (<AutoComplete data={insuranceList} placeholder=\"Select Insurance\" onChange={this.onChangeInsurance} />)\r\n               }\r\n            },\r\n            {\r\n               title: '*Insurance Nr', field: 'insuranceNr'\r\n            },\r\n            {\r\n               title: 'Services', field: 'services', render: props => {\r\n                  let selectedServices = JSON.parse(props.services);\r\n                  if (!selectedServices) {\r\n                     selectedServices = [];\r\n                  }\r\n                  return (\r\n                     <div className=\"serviceContainer\">\r\n                        <div>\r\n                           {\r\n                              servicesList.map((value, index) => {\r\n                                 return (<div key={index}>{value}</div>)\r\n                              })\r\n                           }\r\n                        </div>\r\n                        <div>\r\n                           <FolderOutlinedIcon onClick={() => this.previewDocument(servicesList)} />\r\n                        </div>\r\n                     </div>\r\n\r\n                  )\r\n\r\n               },\r\n               editComponent: rowData => {\r\n                  console.log('rowData.rowData.id', rowData.rowData.id);\r\n                  if (rowData.rowData.id) {\r\n                     let currentService = JSON.parse(rowData.rowData.services);\r\n                     console.log('currentService', currentService);\r\n                     if (!currentService) {\r\n                        currentService = [];\r\n                     }\r\n                     if (this.state.isEditServices) {\r\n                        this.setState({ selectedservice: currentService, isEditServices: false })\r\n                     }\r\n                  }\r\n                  return (\r\n                     <MultiSelect\r\n                        data={servicesList}\r\n                        value={this.state.selectedservice}\r\n                        onChange={this.onChangeServices}\r\n                     />\r\n                  )\r\n\r\n               }\r\n            },\r\n            {\r\n               title: '*Family Doctor', field: 'familyDoctor', editComponent: rowData => {\r\n                  return (<AutoComplete data={family_doctorsList} placeholder=\"Select Family doctor\" onChange={this.onChangeDoctor} />)\r\n               }\r\n            },\r\n            { title: 'Key number', field: 'keyNumber', type: 'numeric' },\r\n            { title: 'Floor', field: 'floor', type: 'numeric' },\r\n            {\r\n               title: 'Degree of care', field: 'degreeCare', lookup: degreeList\r\n            },\r\n            {\r\n               title: '*Pharmacy', field: 'pharmacy', editComponent: rowData => {\r\n                  return (<AutoComplete data={pharmaciesList} placeholder=\"Select Pharmacy\" onChange={this.onChangePharmacies} />)\r\n               }\r\n            },\r\n            {\r\n               title: 'User group', field: 'userGroup', render: props => {\r\n                  let selectedUsers = [];\r\n                  selectedUsers = JSON.parse(props.userGroup);\r\n                  if (!selectedUsers) {\r\n                     selectedUsers = [];\r\n                  }\r\n                  return (\r\n                     <div>\r\n                        {\r\n                           selectedUsers.map((value, index) => {\r\n                              return (<div key={index}>{value}</div>)\r\n                           })\r\n                        }\r\n                     </div>\r\n\r\n                  )\r\n\r\n\r\n               },\r\n               editComponent: rowData => {\r\n                  if (rowData.rowData.id) {\r\n                     let selectedUsers = JSON.parse(rowData.rowData.userGroup);\r\n                     if (!selectedUsers) {\r\n                        selectedUsers = [];\r\n                     }\r\n                     if (this.state.isEditUsers) {\r\n                        this.setState({ selectedUsers: selectedUsers, isEditUsers: false })\r\n                     }\r\n                  }\r\n\r\n                  return (\r\n                     <MultiSelect\r\n                        data={usersList}\r\n                        value={this.state.selectedUsers}\r\n                        onChange={this.onChangeUsers}\r\n                     />\r\n                  )\r\n\r\n               }\r\n            },\r\n            { title: 'Status', field: 'status', lookup: statusList },\r\n            {\r\n               title: 'Serviceplan', field: 'serviceplan', render: rowData => {\r\n                  return (<Switch\r\n                     size=\"small\"\r\n                     color=\"primary\"\r\n                     checked={rowData.serviceplan ? true : false}\r\n                  />)\r\n\r\n               },\r\n               editComponent: rowData => {\r\n\r\n                  if (this.state.isEditServiceplan && rowData.rowData.id) {\r\n                     this.setState({ serviceplan: rowData.rowData.serviceplan ? true : false, isEditServiceplan: false });\r\n                  }\r\n                  return (<Switch\r\n                     size=\"small\"\r\n                     color=\"primary\"\r\n                     checked={this.state.serviceplan}\r\n                     onChange={e => this.setState({ serviceplan: e.target.checked })}\r\n                  />)\r\n\r\n               }\r\n            },\r\n         ],\r\n         data: [],\r\n         selected: [],\r\n         selectedservice: [],\r\n         selectedUsers: [],\r\n         isEditServices: true,\r\n         isEditResources: true,\r\n         isEditUsers: true,\r\n         isEditServiceplan: true,\r\n         serviceplan: true,\r\n         insurance: '',\r\n         pharmacy: '',\r\n         birthday: '',\r\n         documentsList: [],\r\n         folders: [],\r\n         downloadDocs: []\r\n      };\r\n\r\n      this.preViewDialog = React.createRef();\r\n   }\r\n   previewDocument(services) {\r\n      console.log('previewDocument', services);\r\n\r\n\r\n\r\n      let relationDocs = [];\r\n      this.state.folders.forEach(folder => {\r\n         if (services.indexOf(folder.service) > -1) {\r\n            let folderDocs = JSON.parse(folder.documents);\r\n            let relationDocsTemps = [...relationDocs];\r\n            console.log('folderDocs', folderDocs, relationDocsTemps);\r\n            relationDocs = relationDocsTemps.concat(folderDocs);\r\n         }\r\n      });\r\n      relationDocs = [...new Set(relationDocs)];\r\n      if (relationDocs) {\r\n         let downloadDocs = this.state.documentsList.filter((a) => {\r\n            return relationDocs.indexOf(a.id) > -1;\r\n         })\r\n         this.setState({ downloadDocs: [...downloadDocs] });\r\n         this.preViewDialog.current.openDialog();\r\n         setTimeout(() => {\r\n            // let pdfDiv = document.getElementById('downloadArea');\r\n            // console.log('pdf' , pdfDiv);\r\n            this.generatePdf(this.state.downloadDocs.length);\r\n         }, 2000);\r\n      }\r\n   }\r\n   generatePdf(documentsLen) {\t\r\n\t\tvar pageHight = 1123;\r\n\t\tthis.formate(documentsLen, pageHight);\r\n\t\tsetTimeout(() => {\r\n\t\t\tconst div = document.getElementById(\"downloadArea\");\r\n\t\t\tdomtoimage.toPng(div).then((dataUrl) => {\t\t\t\t\r\n\t\t\t\tlet HTML_Height = document.getElementById(\"downloadArea\").clientHeight;\r\n\t\t\t\tvar pdf = new jsPDF(\"p\", \"pt\", [794 , 1123]);\t\t\t\r\n\t\t\t\tvar canvas_image_width = 794;\t\t\t\r\n\t\t\t\tvar canvas_image_height = HTML_Height;\t\t\t\t\r\n\t\t\t\tvar totalPDFPages = Math.ceil(canvas_image_height / pageHight) - 1;\r\n\t\t\t\tlet top_left_margin = 10;\r\n\t\t\t\tpdf.addImage(dataUrl, 'JPG', top_left_margin, top_left_margin, canvas_image_width - 3 * top_left_margin, canvas_image_height);\r\n\r\n\t\t\t\tfor (var i = 1; i <= totalPDFPages; i++) {\r\n\t\t\t\t\tpdf.addPage();\r\n\t\t\t\t\tpdf.addImage(dataUrl, 'JPG', top_left_margin, -(pageHight * i) + (top_left_margin * 2), canvas_image_width - 2 * top_left_margin, canvas_image_height - 2 * top_left_margin);\r\n\t\t\t\t}\r\n\t\t\t\tpdf.save(\"HTML-Document.pdf\");\r\n\t\t\t})\r\n\t\t}, 1000);\r\n\r\n\r\n\t}\r\n\tformate(documentsLen, pageHight ) {\t\r\n\t\tfor (let i = 0; i < documentsLen; i++) {\r\n\t\t\tlet ipageHight = document.getElementById(\"page-\" + i).clientHeight;\t\t\t\t\r\n\t\t\tif (ipageHight > pageHight) {\t\r\n\t\t\t\tdocument.getElementById(\"page-\" + i).style.paddingBottom = (pageHight - (ipageHight % pageHight)) + 'px';\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n   handleChangeDate = (event) => {\r\n      this.setState({ birthday: event.target.value });\r\n   }\r\n   onChangeDoctor = (event) => {\r\n      this.setState({ familyDoctor: event.target.value })\r\n   }\r\n   onChangePharmacies = (event) => {\r\n      this.setState({ pharmacy: event.target.value })\r\n   }\r\n\r\n   onChangeInsurance = (event) => {\r\n      this.setState({ insurance: event.target.value });\r\n   }\r\n   onChangeResources = (event) => {\r\n      this.setState({\r\n         selected: [...event.target.value]\r\n      });\r\n   }\r\n   onChangeUsers = (event) => {\r\n      this.setState({\r\n         selectedUsers: [...event.target.value]\r\n      });\r\n   }\r\n   onChangeServices = (event) => {\r\n      this.setState({\r\n         selectedservice: [...event.target.value]\r\n      });\r\n   }\r\n   componentWillMount() {\r\n      this.defaultUrl = \"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcSTbZrzTIuXAe01k5wgrhWGzPRPRliQygmBCA&usqp=CAU\";\r\n      let user = JSON.parse(localStorage.getItem('user'));\r\n      this.instance_id = user.instance_id;\r\n      console.log('res', this.instance_id);\r\n      userService.showPatients({ instance_id: this.instance_id, pagination: 1 }).then(res => {\r\n         resourcesList = [];\r\n         servicesList = [];\r\n         servicesList = res.services.map(ele => {\r\n            return ele.services\r\n         });\r\n\r\n         resourcesList = res.resources.map(ele => {\r\n            return ele.resources;\r\n         })\r\n         usersList = res.users.map(ele => {\r\n            return ele.name;\r\n         })\r\n         family_doctorsList = res.family_doctors.map(ele => {\r\n            return ele.doctorName;\r\n         })\r\n\r\n\r\n         insuranceList = res.insurances.map(ele => {\r\n            return ele.insurances;\r\n         })\r\n         pharmaciesList = res.pharmacies.map(ele => {\r\n            return ele.pharmacyName;\r\n         })\r\n\r\n\r\n         // res.insurances.map(ele => {\r\n         //    insuranceList[ele.insurances] = ele.insurances;\r\n         // })\r\n\r\n\r\n         // res.pharmacies.map(ele => {\r\n         //    pharmaciesList[ele.pharmacyName] = ele.pharmacyName;\r\n         // })\r\n         // console.log('this.insta' , this.insurances);  \r\n\r\n\r\n         this.setState(prevState => {\r\n            const data = res.patients;\r\n            const documentsList = res.documents;\r\n            const folders = res.folders;\r\n            return { ...prevState, data, documentsList, folders };\r\n         });\r\n\r\n      })\r\n\r\n   }\r\n\r\n   render() {\r\n\r\n      return (\r\n         <div className=\"tables-wrapper search-table-wrap\">\r\n            <SmallTitleBar\r\n               title={<IntlMessages id=\"sidebar.patients\" />}\r\n               center\r\n            />\r\n            <Container maxWidth=\"lg\">\r\n               <Box px={{ xs: '12px', lg: 0 }} className=\"page-space\">\r\n                  <MaterialTable\r\n                     title={<IntlMessages id=\"sidebar.patients\" />}\r\n                     columns={this.state.columns}\r\n                     data={this.state.data}\r\n\r\n                     editable={{\r\n                        onRowAdd: newData =>\r\n                           new Promise(resolve => {\r\n                              setTimeout(() => {\r\n                                 resolve();\r\n\r\n                                 newData.instance_id = this.instance_id;\r\n                                 newData.resources = JSON.stringify(this.state.selected);\r\n                                 newData.services = JSON.stringify(this.state.selectedservice);\r\n                                 newData.userGroup = JSON.stringify(this.state.selectedUsers);\r\n                                 newData.insurance = this.state.insurance;\r\n                                 newData.familyDoctor = this.state.familyDoctor;\r\n                                 newData.pharmacy = this.state.pharmacy;\r\n                                 newData.birthday = this.state.birthday;\r\n                                 if (this.state.pharmacy && this.state.familyDoctor && newData.firstName && newData.lastName && newData.phone1 && newData.phone2) {\r\n                                    const formData = new FormData()\r\n                                    formData.append('file', newData.picture);\r\n                                    newData.picture = '';\r\n                                    formData.append('data', JSON.stringify(newData));\r\n                                    userService.addPatients(formData).then(res => {\r\n                                       const selected = [];\r\n                                       const selectedservice = [];\r\n                                       this.setState(prevState => {\r\n                                          let data = [...prevState.data];\r\n                                          data.push(res);\r\n                                          return { ...prevState, data: [...data] };\r\n                                       });\r\n\r\n                                       this.setState({ selected: selected, selectedservice: selectedservice, isEditServices: true, isEditResources: true, isEditServiceplan: true, isEditUsers: true, insurance: \"\", familyDoctor: \"\", pharmacy: '', birthday: '', selectedUsers: [] });\r\n                                    }).catch(error => {\r\n                                       console.log('erro', error);\r\n                                       alert(error.message);\r\n                                    });\r\n                                 }\r\n                                 else {\r\n                                    alert(\"Bitte f√ºllen Sie die erforderlichen Felder aus.\");\r\n                                 }\r\n\r\n                              }, 600);\r\n                           }),\r\n                        onRowUpdate: (newData, oldData) =>\r\n                           new Promise(resolve => {\r\n                              setTimeout(() => {\r\n                                 resolve();\r\n                                 const formData = new FormData()\r\n                                 if (typeof newData.picture == 'object') {\r\n                                    formData.append('file', newData.picture);\r\n                                    newData.picture = '';\r\n                                 }\r\n                                 if (this.state.selected.length) newData.resources = JSON.stringify(this.state.selected);\r\n                                 if (this.state.selectedservice.length) newData.services = JSON.stringify(this.state.selectedservice);\r\n                                 if (this.state.selectedUsers.length) newData.userGroup = JSON.stringify(this.state.selectedUsers);\r\n                                 if (this.state.insurance) newData.insurance = this.state.insurance;\r\n                                 if (this.state.familyDoctor) newData.familyDoctor = this.state.familyDoctor;\r\n                                 if (this.state.pharmacy) newData.pharmacy = this.state.pharmacy;\r\n                                 if (this.state.birthday) newData.birthday = this.state.birthday;\r\n                                 formData.append('data', JSON.stringify(newData));\r\n                                 if (newData.pharmacy && newData.familyDoctor && newData.firstName && newData.lastName && newData.phone1 && newData.phone2) {\r\n                                    userService.editPatients(formData).then(res => {\r\n                                       if (oldData) {\r\n                                          this.setState(prevState => {\r\n                                             const data = [...prevState.data];\r\n                                             data[data.indexOf(oldData)] = res;\r\n                                             return { ...prevState, data };\r\n                                          });\r\n                                          const selected = [];\r\n                                          const selectedservice = [];\r\n                                          this.setState({ selected: selected, selectedservice: selectedservice, isEditServices: true, isEditResources: true, isEditServiceplan: true, isEditUsers: true, insurance: \"\", familyDoctor: \"\", pharmacy: '', birthday: '', selectedUsers: [] });\r\n                                       }\r\n                                    })\r\n                                 } else {\r\n                                    alert(\"Bitte f√ºllen Sie die erforderlichen Felder aus.\");\r\n                                 }\r\n\r\n                              }, 600);\r\n                           }),\r\n                        onRowDelete: oldData =>\r\n                           new Promise(resolve => {\r\n                              setTimeout(() => {\r\n                                 resolve();\r\n                                 console.log(';oldData', oldData.id);\r\n                                 userService.deletePatients({ id: oldData.id }).then(res => {\r\n                                    console.log('res', res);\r\n                                    this.setState(prevState => {\r\n                                       const data = [...prevState.data];\r\n                                       data.splice(data.indexOf(oldData), 1);\r\n                                       return { ...prevState, data };\r\n                                    });\r\n                                 })\r\n                              }, 600);\r\n                           }),\r\n                     }}\r\n                  />\r\n               </Box>\r\n            </Container>\r\n            <PreViewDialog\r\n               ref={this.preViewDialog}\r\n               selectedDocumentList={this.state.downloadDocs}\r\n            />\r\n         </div>\r\n      );\r\n   }\r\n}\r\nexport default PatientsTable;\r\n\r\n\r\n"],"sourceRoot":""}