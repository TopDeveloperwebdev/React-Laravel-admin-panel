{"version":3,"sources":["routes/Tables/Orders/index.js"],"names":["statusList","YES","NO","Orders","props","onChange","event","setState","selectedMedications","target","value","handleChangePatients","patient_id","patient","state","patients","filter","a","id","pharmacy","doctor","familyDoctor","handleChangeNote","note","handleChangeDate","date","columns","title","field","render","rowData","to","orderId","editComponent","JSON","parse","orderMedications","map","index","key","console","log","isEditMedications","data","medications","firstName","lastName","labelId","className","res","style","marginBottom","placeholder","InputProps","readOnly","formate_date","now","Date","type","defaultValue","InputLabelProps","shrink","label","multiline","rows","variant","lookup","dateString","split","this","defaultUrl","user","localStorage","getItem","instance_id","user_id","userService","showOrders","pagination","then","ele","medicationName","orders","EditableData","onRowAdd","newData","Promise","resolve","stringify","length","addOrders","prevState","push","alert","onRowDelete","oldData","setTimeout","deleteOrders","splice","indexOf","center","maxWidth","px","xs","lg","editable","Component"],"mappings":"+RAaIA,EAAa,CAAEC,IAAK,MAAOC,GAAI,MAC7BC,E,kDACL,WAAYC,GAAQ,IAAD,8BAClB,cAAMA,IAmMPC,SAAW,SAACC,GACX,EAAKC,SAAS,CACbC,oBAAoB,YAAKF,EAAMG,OAAOC,UAtMrB,EAoNnBC,qBAAuB,SAACL,GACvB,IAAIM,EAAaN,EAAMG,OAAOC,MAC1BG,EAAU,EAAKC,MAAMC,SAASC,QAAO,SAACC,GAAD,OAAOA,EAAEC,IAAMN,KACpDO,EAAWN,EAAQ,GAAGM,SACtBC,EAASP,EAAQ,GAAGQ,aACxB,EAAKd,SAAS,CAAEM,QAASP,EAAMG,OAAOC,MAAOS,SAAUA,EAAUC,OAAQA,KAzNvD,EA6NnBE,iBAAmB,SAAChB,GACnB,EAAKC,SAAS,CAAEgB,KAAMjB,EAAMG,OAAOC,SA9NjB,EAgOnBc,iBAAmB,SAAClB,GACnB,EAAKC,SAAS,CAAEkB,KAAMnB,EAAMG,OAAOC,SA/NnC,EAAKI,MAAQ,CACZY,QAAS,CACR,CACCC,MAAO,WAAYC,MAAO,UAAWC,OAAQ,SAAAC,GAAO,OAAI,6BACvD,kBAAC,IAAD,CAAMC,GAAE,wBAAmBD,EAAQE,SAAWvB,OAAO,UAAUqB,EAAQE,WAGxEC,cAAe,SAAAH,GAAO,OAAI,6BACxBA,EAAQZ,MAGX,CAECS,MAAO,cAAeC,MAAO,mBAAoBC,OAAQ,SAAAC,GACxD,IAAItB,EAAsB0B,KAAKC,MAAML,EAAQM,kBAC7C,OACC,6BAEE5B,EAAoB6B,KAAI,SAAC3B,EAAO4B,GAC/B,OAAQ,yBAAKC,IAAKD,GAAQ5B,QAQ/BuB,cAAe,SAAAH,GACd,GAAIA,EAAQA,QAAQZ,GAAI,CACvBsB,QAAQC,IAAI,UAAWX,GACvB,IAAItB,EAAsB0B,KAAKC,MAAML,EAAQA,QAAQM,kBAChD5B,IACJA,EAAsB,IAEnB,EAAKM,MAAM4B,mBACd,EAAKnC,SAAS,CAAEC,oBAAqBA,EAAqBkC,mBAAmB,IAG/E,OACC,kBAAC,IAAD,CACCC,KAAM,EAAK7B,MAAM8B,YACjBvC,SAAU,EAAKA,SACfK,MAAO,EAAKI,MAAMN,wBAMtB,CACCmB,MAAO,UAAWC,MAAO,UAAWC,OAAQ,SAAAC,GAC3C,IAAIjB,EAAU,EAAKC,MAAMC,SAASC,QAAO,SAACC,GAAD,OAAOA,EAAEC,IAAMY,EAAQjB,WAChE,OAAO,6BACLA,EAAQ,GAAGgC,UADN,IACkBhC,EAAQ,GAAGiC,WAGrCb,cAAe,SAAAH,GACd,OACC,kBAAC,IAAD,CACCiB,QAAQ,2BACR7B,GAAG,qBACH8B,UAAU,aACVtC,MAAO,EAAKI,MAAMD,QAClBR,SAAU,EAAKM,sBAEd,EAAKG,MAAMC,SAASsB,KAAI,SAACY,EAAKX,GAC7B,OAAQ,kBAAC,IAAD,CAAUC,IAAKD,EAAO5B,MAAOuC,EAAI/B,IAAK+B,EAAIJ,iBAOxD,CACClB,MAAO,WAAYC,MAAO,WAAYC,OAAQ,SAAAC,GAC7C,OAAQ,6BACNA,EAAQX,WAGXc,cAAe,SAAAH,GACd,OACC,kBAAC,IAAD,CACCZ,GAAG,WACHgC,MAAO,CAAEC,aAAc,GACvBC,YAAY,WACZ1C,MAAO,EAAKI,MAAMK,SAClBkC,WAAY,CACXC,UAAU,OAKf,CACC3B,MAAO,gBAAiBC,MAAO,SAAUC,OAAQ,SAAAC,GAChD,OAAQ,6BACNA,EAAQV,SAGXa,cAAe,SAAAH,GACd,OACC,kBAAC,IAAD,CACCZ,GAAG,SACHgC,MAAO,CAAEC,aAAc,GACvBC,YAAY,SACZ1C,MAAO,EAAKI,MAAMM,OAClBiC,WAAY,CACXC,UAAU,OAMf,CACC3B,MAAO,WAAYC,MAAO,OAAQC,OAAQ,SAAAC,GACzC,OAAQ,6BACN,EAAKyB,aAAazB,EAAQL,QAI7BQ,cAAe,SAAAH,GAEd,IAAI0B,EAAMC,KAAKD,MAEf,OADAhB,QAAQC,IAAI,MAAOe,GAElB,kBAAC,IAAD,CACCR,UAAU,aACV9B,GAAG,iBACHwC,KAAK,OACLC,aAAcH,EACdI,gBAAiB,CAChBC,QAAQ,GAETnD,MAAO,EAAKI,MAAMW,KAClBpB,SAAU,EAAKmB,qBAKnB,CACCG,MAAO,OAAQC,MAAO,OAAQC,OAAQ,SAAAC,GACrC,OAAQ,6BACNA,EAAQP,OAGXU,cAAe,SAAAH,GACd,OACC,kBAAC,IAAD,CACCkB,UAAU,aACV9B,GAAG,4BACH4C,MAAM,WACNC,WAAS,EACTC,KAAM,EACNL,aAAa,gBACbM,QAAQ,WACRvD,MAAO,EAAKI,MAAMS,KAClBlB,SAAU,EAAKiB,qBAInB,CAAEK,MAAO,YAAaC,MAAO,SAAUsC,OAAQlE,IAwBhDmB,SAAU,GACVN,QAAS,GACTO,OAAQ,GACRG,KAAM,GACNoB,KAAM,GACNnC,oBAAqB,GACrBoC,YAAa,GACbF,mBAAmB,EACnB3B,SAAU,IAhMO,E,yDAyMNoD,GACZ,IAAI1C,EACA0C,IAGH1C,GADAA,EADU0C,EAAWC,MAAM,KAChB,GAAGA,MAAM,MACR,GAAK,IAAM3C,EAAK,GAAK,IAAMA,EAAK,IAG7C,OAAOA,I,2CAoBc,IAAD,OACpB4C,KAAKC,WAAa,wGAClB,IAAIC,EAAOrC,KAAKC,MAAMqC,aAAaC,QAAQ,SAC3CJ,KAAKK,YAAcH,EAAKG,YACxBL,KAAKM,QAAUJ,EAAKrD,GAGpBsB,QAAQC,IAAI,QAAS4B,KAAKM,SAC1BC,IAAYC,WAAW,CAAEH,YAAaL,KAAKK,YAAaI,WAAY,IAAKC,MAAK,SAAA9B,GAAQ,IAAD,EAChFL,EAAcK,EAAIL,YAAYP,KAAI,SAAA2C,GACrC,OAAOA,EAAIC,kBAERlE,EAAWkC,EAAIlC,SAEnByB,QAAQC,IAAI,MAAOQ,EAAIiC,QACvB,EAAK3E,UAAL,GACCqC,eADD,4BACcA,GADd,qBAEOK,EAAIiC,QAFX,yBAGWnE,GAHX,S,+BAUQ,IAAD,OACJoE,EAAed,KAAKK,YAAc,CACrCU,SAAU,SAAAC,GAAO,OAChB,IAAIC,SAAQ,SAAAC,GACXA,IAEAF,EAAQV,QAAU,EAAKD,YAEvBW,EAAQjD,iBAAmBF,KAAKsD,UAAU,EAAK1E,MAAMN,qBACrD6E,EAAQxE,QAAU,EAAKC,MAAMD,QAC7BwE,EAAQ5D,KAAO,EAAKX,MAAMW,KAC1B4D,EAAQ9D,KAAO,EAAKT,MAAMS,KAC1B8D,EAAQlE,SAAW,EAAKL,MAAMK,SAC9BkE,EAAQjE,OAAS,EAAKN,MAAMM,OACxB,EAAKN,MAAMN,oBAAoBiF,QAAUJ,EAAQxE,SAAWwE,EAAQ9D,MAAQ8D,EAAQ5D,MAAQ4D,EAAQlE,UAAYkE,EAAQjE,OAC3HwD,IAAYc,UAAUL,GAASN,MAAK,SAAA9B,GACnCT,QAAQC,IAAI,MAAOQ,GACnB,EAAK1C,UAAS,SAAAoF,GACb,IAAMhD,EAAI,YAAOgD,EAAUhD,MAC3BA,EAAKiD,KAAK3C,GAGV,OAAO,2BAAK0C,GAAZ,IAAuBhD,OAAMnC,oBAFD,GAEsBkC,mBADxB,UAK5BmD,MAAM,0DAITC,YAAa,SAAAC,GAAO,OACnB,IAAIT,SAAQ,SAAAC,GACXS,YAAW,WACVT,IACA/C,QAAQC,IAAI,WAAYsD,EAAQ7E,IAChC0D,IAAYqB,aAAa,CAAE/E,GAAI6E,EAAQ7E,KAAM6D,MAAK,SAAA9B,GACjDT,QAAQC,IAAI,MAAOQ,GACnB,EAAK1C,UAAS,SAAAoF,GACb,IAAMhD,EAAI,YAAOgD,EAAUhD,MAE3B,OADAA,EAAKuD,OAAOvD,EAAKwD,QAAQJ,GAAU,GAC5B,2BAAKJ,GAAZ,IAAuBhD,iBAGvB,UAEF,CACFmD,YAAa,SAAAC,GAAO,OACnB,IAAIT,SAAQ,SAAAC,GACXS,YAAW,WACVT,IACA/C,QAAQC,IAAI,WAAYsD,EAAQ7E,IAChC0D,IAAYqB,aAAa,CAAE/E,GAAI6E,EAAQ7E,KAAM6D,MAAK,SAAA9B,GACjDT,QAAQC,IAAI,MAAOQ,GACnB,EAAK1C,UAAS,SAAAoF,GACb,IAAMhD,EAAI,YAAOgD,EAAUhD,MAE3B,OADAA,EAAKuD,OAAOvD,EAAKwD,QAAQJ,GAAU,GAC5B,2BAAKJ,GAAZ,IAAuBhD,iBAGvB,UAIP,OACC,yBAAKK,UAAU,+CACd,kBAAC,IAAD,CACCrB,MAAO,kBAAC,IAAD,CAAcT,GAAG,kBACxBkF,QAAM,IAEP,kBAAC,IAAD,CAAWC,SAAS,MACnB,kBAAC,IAAD,CAAKC,GAAI,CAAEC,GAAI,OAAQC,GAAI,GAAKxD,UAAU,cACzC,kBAAC,IAAD,CACCrB,MAAO,kBAAC,IAAD,CAAcT,GAAG,kBACxBQ,QAAS2C,KAAKvD,MAAMY,QACpBiB,KAAM0B,KAAKvD,MAAM6B,KACjB8D,SAAUtB,W,GA1UIuB,aAkVNvG","file":"static/js/62.f2a40d36.chunk.js","sourcesContent":["/**\r\n * Search Table\r\n*/\r\nimport React, { Component } from 'react';\r\nimport MaterialTable from 'material-table';\r\nimport { Box, Grid, Button, Switch, Container, InputLabel, FormHelperText, NativeSelect, TextField, FormControl, Select, MenuItem } from '@material-ui/core';\r\nimport { userService } from '../../../_services';\r\n//Components\r\nimport { SmallTitleBar } from 'components/GlobalComponents';\r\nimport IntlMessages from 'util/IntlMessages';\r\nimport { MultiSelect } from '@progress/kendo-react-dropdowns';\r\nimport { Link } from 'react-router-dom';\r\n\r\nlet statusList = { YES: \"YES\", NO: \"NO\" };\r\nclass Orders extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props)\r\n\t\tthis.state = {\r\n\t\t\tcolumns: [\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: 'Order ID', field: 'orderId', render: rowData => <div>\r\n\t\t\t\t\t\t<Link to={`/order-detail/${rowData.orderId}`} target=\"_blank\">{rowData.orderId}</Link>\r\n\r\n\t\t\t\t\t</div>,\r\n\t\t\t\t\teditComponent: rowData => <div>\r\n\t\t\t\t\t\t{rowData.id}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\r\n\t\t\t\t\ttitle: 'Medications', field: 'orderMedications', render: rowData => {\r\n\t\t\t\t\t\tlet selectedMedications = JSON.parse(rowData.orderMedications);\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tselectedMedications.map((value, index) => {\r\n\t\t\t\t\t\t\t\t\t\treturn (<div key={index}>{value}</div>)\r\n\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t)\r\n\r\n\t\t\t\t\t},\r\n\t\t\t\t\teditComponent: rowData => {\r\n\t\t\t\t\t\tif (rowData.rowData.id) {\r\n\t\t\t\t\t\t\tconsole.log('rowData', rowData);\r\n\t\t\t\t\t\t\tlet selectedMedications = JSON.parse(rowData.rowData.orderMedications);\r\n\t\t\t\t\t\t\tif (!selectedMedications) {\r\n\t\t\t\t\t\t\t\tselectedMedications = [];\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif (this.state.isEditMedications) {\r\n\t\t\t\t\t\t\t\tthis.setState({ selectedMedications: selectedMedications, isEditMedications: false })\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<MultiSelect\r\n\t\t\t\t\t\t\t\tdata={this.state.medications}\r\n\t\t\t\t\t\t\t\tonChange={this.onChange}\r\n\t\t\t\t\t\t\t\tvalue={this.state.selectedMedications}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t)\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: 'Patient', field: 'patient', render: rowData => {\r\n\t\t\t\t\t\tlet patient = this.state.patients.filter((a) => a.id == rowData.patient);\r\n\t\t\t\t\t\treturn <div>\r\n\t\t\t\t\t\t\t{patient[0].firstName} {patient[0].lastName}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t},\r\n\t\t\t\t\teditComponent: rowData => {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\tlabelId=\"demo-simple-select-label\"\r\n\t\t\t\t\t\t\t\tid=\"demo-simple-select\"\r\n\t\t\t\t\t\t\t\tclassName=\"full-width\"\r\n\t\t\t\t\t\t\t\tvalue={this.state.patient}\r\n\t\t\t\t\t\t\t\tonChange={this.handleChangePatients}\r\n\t\t\t\t\t\t\t>{\r\n\t\t\t\t\t\t\t\t\tthis.state.patients.map((res, index) => {\r\n\t\t\t\t\t\t\t\t\t\treturn (<MenuItem key={index} value={res.id}>{res.firstName}</MenuItem>)\r\n\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t</Select>)\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: 'Pharmacy', field: 'pharmacy', render: rowData => {\r\n\t\t\t\t\t\treturn (<div>\r\n\t\t\t\t\t\t\t{rowData.pharmacy}\r\n\t\t\t\t\t\t</div>)\r\n\t\t\t\t\t},\r\n\t\t\t\t\teditComponent: rowData => {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\tid=\"pharmacy\"\r\n\t\t\t\t\t\t\t\tstyle={{ marginBottom: 8 }}\r\n\t\t\t\t\t\t\t\tplaceholder=\"pharmacy\"\r\n\t\t\t\t\t\t\t\tvalue={this.state.pharmacy}\r\n\t\t\t\t\t\t\t\tInputProps={{\r\n\t\t\t\t\t\t\t\t\treadOnly: true,\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>)\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: 'Family Doctor', field: 'doctor', render: rowData => {\r\n\t\t\t\t\t\treturn (<div>\r\n\t\t\t\t\t\t\t{rowData.doctor}\r\n\t\t\t\t\t\t</div>)\r\n\t\t\t\t\t},\r\n\t\t\t\t\teditComponent: rowData => {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\tid=\"doctor\"\r\n\t\t\t\t\t\t\t\tstyle={{ marginBottom: 8 }}\r\n\t\t\t\t\t\t\t\tplaceholder=\"doctor\"\r\n\t\t\t\t\t\t\t\tvalue={this.state.doctor}\r\n\t\t\t\t\t\t\t\tInputProps={{\r\n\t\t\t\t\t\t\t\t\treadOnly: true,\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>)\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: 'Due Date', field: 'date', render: rowData => {\r\n\t\t\t\t\t\treturn (<div>\r\n\t\t\t\t\t\t\t{this.formate_date(rowData.date)}\r\n\r\n\t\t\t\t\t\t</div>)\r\n\t\t\t\t\t},\r\n\t\t\t\t\teditComponent: rowData => {\r\n\r\n\t\t\t\t\t\tlet now = Date.now();\r\n\t\t\t\t\t\tconsole.log('now', now);\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\tclassName=\"full-width\"\r\n\t\t\t\t\t\t\t\tid=\"datetime-local\"\r\n\t\t\t\t\t\t\t\ttype=\"date\"\r\n\t\t\t\t\t\t\t\tdefaultValue={now}\r\n\t\t\t\t\t\t\t\tInputLabelProps={{\r\n\t\t\t\t\t\t\t\t\tshrink: true,\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tvalue={this.state.date}\r\n\t\t\t\t\t\t\t\tonChange={this.handleChangeDate}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: 'Note', field: 'note', render: rowData => {\r\n\t\t\t\t\t\treturn (<div>\r\n\t\t\t\t\t\t\t{rowData.note}\r\n\t\t\t\t\t\t</div>)\r\n\t\t\t\t\t},\r\n\t\t\t\t\teditComponent: rowData => {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\tclassName=\"full-width\"\r\n\t\t\t\t\t\t\t\tid=\"outlined-multiline-static\"\r\n\t\t\t\t\t\t\t\tlabel=\"Add Note\"\r\n\t\t\t\t\t\t\t\tmultiline\r\n\t\t\t\t\t\t\t\trows={4}\r\n\t\t\t\t\t\t\t\tdefaultValue=\"Default Value\"\r\n\t\t\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\t\t\tvalue={this.state.note}\r\n\t\t\t\t\t\t\t\tonChange={this.handleChangeNote}\r\n\t\t\t\t\t\t\t/>)\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\t{ title: 'Delivered', field: 'status', lookup: statusList }\r\n\r\n\t\t\t\t// {\r\n\t\t\t\t// \ttitle: 'Delivered', field: 'status', render: rowData => {\r\n\t\t\t\t// \t\treturn (\r\n\t\t\t\t// \t\t\trowData.status ? <div className=\"send\">\r\n\t\t\t\t// \t\t\t\tYES\r\n\t\t\t\t// \t\t</div> :\r\n\t\t\t\t// \t\t\t\t<div className=\"notsend\">\r\n\t\t\t\t// \t\t\t\t\tNO\r\n\t\t\t\t// \t</div>)\r\n\t\t\t\t// \t},\r\n\t\t\t\t// \teditComponent: rowData => {\r\n\t\t\t\t// \t\treturn (\r\n\t\t\t\t// \t\t\trowData.rowData.status ? <div className=\"send\">\r\n\t\t\t\t// \t\t\t\tYES\r\n\t\t\t\t// \t\t</div> :\r\n\t\t\t\t// \t\t\t\t<div className=\"notsend\">\r\n\t\t\t\t// \t\t\t\t\tNO\r\n\t\t\t\t// \t</div>)\r\n\t\t\t\t// \t},\r\n\t\t\t\t// }\r\n\t\t\t],\r\n\r\n\t\t\tpharmacy: '',\r\n\t\t\tpatient: '',\r\n\t\t\tdoctor: '',\r\n\t\t\tnote: '',\r\n\t\t\tdata: [],\r\n\t\t\tselectedMedications: [],\r\n\t\t\tmedications: [],\r\n\t\t\tisEditMedications: true,\r\n\t\t\tpatients: [],\r\n\t\t};\r\n\r\n\t}\r\n\tonChange = (event) => {\r\n\t\tthis.setState({\r\n\t\t\tselectedMedications: [...event.target.value]\r\n\t\t});\r\n\t}\r\n\tformate_date(dateString) {\r\n\t\tlet date;\r\n\t\tif (dateString) {\r\n\t\t\tlet str = dateString.split(\" \");\r\n\t\t\tdate = str[0].split('-');\r\n\t\t\tdate = date[2] + '.' + date[1] + '.' + date[0];\r\n\t\t}\r\n\r\n\t\treturn date;\r\n\t}\r\n\r\n\thandleChangePatients = (event) => {\r\n\t\tlet patient_id = event.target.value;\r\n\t\tlet patient = this.state.patients.filter((a) => a.id == patient_id);\r\n\t\tlet pharmacy = patient[0].pharmacy;\r\n\t\tlet doctor = patient[0].familyDoctor;\r\n\t\tthis.setState({ patient: event.target.value, pharmacy: pharmacy, doctor: doctor });\r\n\r\n\r\n\t}\r\n\thandleChangeNote = (event) => {\r\n\t\tthis.setState({ note: event.target.value });\r\n\t}\r\n\thandleChangeDate = (event) => {\r\n\t\tthis.setState({ date: event.target.value });\r\n\t}\r\n\r\n\r\n\tcomponentWillMount() {\r\n\t\tthis.defaultUrl = \"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcSTbZrzTIuXAe01k5wgrhWGzPRPRliQygmBCA&usqp=CAU\";\r\n\t\tlet user = JSON.parse(localStorage.getItem('user'));\r\n\t\tthis.instance_id = user.instance_id;\r\n\t\tthis.user_id = user.id;\r\n\r\n\r\n\t\tconsole.log('res-1', this.user_id);\r\n\t\tuserService.showOrders({ instance_id: this.instance_id, pagination: 1 }).then(res => {\r\n\t\t\tlet medications = res.medications.map(ele => {\r\n\t\t\t\treturn ele.medicationName;\r\n\t\t\t});\r\n\t\t\tlet patients = res.patients;\r\n\r\n\t\t\tconsole.log('res', res.orders);\r\n\t\t\tthis.setState({\r\n\t\t\t\tmedications, medications,\r\n\t\t\t\tdata: res.orders,\r\n\t\t\t\tpatients: patients\r\n\t\t\t})\r\n\r\n\t\t})\r\n\r\n\t}\r\n\r\n\trender() {\r\n\t\tlet EditableData = this.instance_id ? {\r\n\t\t\tonRowAdd: newData =>\r\n\t\t\t\tnew Promise(resolve => {\r\n\t\t\t\t\tresolve();\r\n\r\n\t\t\t\t\tnewData.user_id = this.instance_id;\r\n\r\n\t\t\t\t\tnewData.orderMedications = JSON.stringify(this.state.selectedMedications);\r\n\t\t\t\t\tnewData.patient = this.state.patient;\r\n\t\t\t\t\tnewData.date = this.state.date;\r\n\t\t\t\t\tnewData.note = this.state.note;\r\n\t\t\t\t\tnewData.pharmacy = this.state.pharmacy;\r\n\t\t\t\t\tnewData.doctor = this.state.doctor;\r\n\t\t\t\t\tif (this.state.selectedMedications.length && newData.patient && newData.note && newData.date && newData.pharmacy && newData.doctor) {\r\n\t\t\t\t\t\tuserService.addOrders(newData).then(res => {\r\n\t\t\t\t\t\t\tconsole.log('res', res);\r\n\t\t\t\t\t\t\tthis.setState(prevState => {\r\n\t\t\t\t\t\t\t\tconst data = [...prevState.data];\r\n\t\t\t\t\t\t\t\tdata.push(res);\r\n\t\t\t\t\t\t\t\tconst selectedMedications = [];\r\n\t\t\t\t\t\t\t\tconst isEditMedications = true;\r\n\t\t\t\t\t\t\t\treturn { ...prevState, data, selectedMedications, isEditMedications };\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\talert(\"Bitte füllen Sie die erforderlichen Felder aus.\");\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}),\r\n\t\t\tonRowDelete: oldData =>\r\n\t\t\t\tnew Promise(resolve => {\r\n\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\tresolve();\r\n\t\t\t\t\t\tconsole.log(';oldData', oldData.id);\r\n\t\t\t\t\t\tuserService.deleteOrders({ id: oldData.id }).then(res => {\r\n\t\t\t\t\t\t\tconsole.log('res', res);\r\n\t\t\t\t\t\t\tthis.setState(prevState => {\r\n\t\t\t\t\t\t\t\tconst data = [...prevState.data];\r\n\t\t\t\t\t\t\t\tdata.splice(data.indexOf(oldData), 1);\r\n\t\t\t\t\t\t\t\treturn { ...prevState, data };\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}, 600);\r\n\t\t\t\t})\r\n\t\t} : {\r\n\t\t\t\tonRowDelete: oldData =>\r\n\t\t\t\t\tnew Promise(resolve => {\r\n\t\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\t\tresolve();\r\n\t\t\t\t\t\t\tconsole.log(';oldData', oldData.id);\r\n\t\t\t\t\t\t\tuserService.deleteOrders({ id: oldData.id }).then(res => {\r\n\t\t\t\t\t\t\t\tconsole.log('res', res);\r\n\t\t\t\t\t\t\t\tthis.setState(prevState => {\r\n\t\t\t\t\t\t\t\t\tconst data = [...prevState.data];\r\n\t\t\t\t\t\t\t\t\tdata.splice(data.indexOf(oldData), 1);\r\n\t\t\t\t\t\t\t\t\treturn { ...prevState, data };\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}, 600);\r\n\t\t\t\t\t})\r\n\t\t\t};\r\n\r\n\t\treturn (\r\n\t\t\t<div className=\"tables-wrapper search-table-wrap order-page\">\r\n\t\t\t\t<SmallTitleBar\r\n\t\t\t\t\ttitle={<IntlMessages id=\"sidebar.order\" />}\r\n\t\t\t\t\tcenter\r\n\t\t\t\t/>\r\n\t\t\t\t<Container maxWidth=\"lg\">\r\n\t\t\t\t\t<Box px={{ xs: '12px', lg: 0 }} className=\"page-space\">\r\n\t\t\t\t\t\t<MaterialTable\r\n\t\t\t\t\t\t\ttitle={<IntlMessages id=\"sidebar.order\" />}\r\n\t\t\t\t\t\t\tcolumns={this.state.columns}\r\n\t\t\t\t\t\t\tdata={this.state.data}\r\n\t\t\t\t\t\t\teditable={EditableData}\t\t\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t</Container>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\nexport default Orders;\r\n\r\n\r\n"],"sourceRoot":""}