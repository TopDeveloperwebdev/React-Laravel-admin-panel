{"version":3,"sources":["routes/Tables/Instances/index.js"],"names":["rolesList","Instances","props","state","columns","title","field","editComponent","rowData","id","render","src","instanceLogo","defaultUrl","className","type","onChange","e","target","files","lookup","size","color","checked","status","console","log","isEdit","setState","data","this","user","JSON","parse","localStorage","getItem","instance_id","userService","showInstances","pagination","then","res","instances","roles","map","ele","role","prevState","center","maxWidth","px","xs","lg","editable","onRowAdd","newData","Promise","resolve","setTimeout","formData","FormData","append","stringify","instanceName","name","email","password","addInstances","push","catch","error","alert","onRowUpdate","oldData","editInstances","indexOf","onRowDelete","deleteInstances","splice","Component"],"mappings":"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","file":"static/js/51.66d98b0d.chunk.js","sourcesContent":["/**\r\n * Search Table\r\n*/\r\nimport React, { Component } from 'react';\r\nimport MaterialTable from 'material-table';\r\nimport { Container, Box, Switch } from '@material-ui/core';\r\nimport { userService } from '../../../_services';\r\n//Components\r\nimport { SmallTitleBar } from 'components/GlobalComponents';\r\nimport IntlMessages from 'util/IntlMessages';\r\nlet rolesList = {};\r\nclass Instances extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props)\r\n\t\tthis.state = {\r\n\t\t\tcolumns: [\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: 'ID', field: 'id', editComponent: rowData => <div>\r\n\t\t\t\t\t\t{rowData.id}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: 'Instance logo', field: 'instanceLogo', render: rowData => <img src={rowData.instanceLogo ? rowData.instanceLogo : this.defaultUrl} className=\"logo-td bdr-rad-50\" />,\r\n\t\t\t\t\teditComponent: props => {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\ttype='file'\r\n\t\t\t\t\t\t\t\tonChange={e => props.onChange(e.target.files[0])}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t)\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\t{ title: 'Instance Name', field: 'instanceName' },\r\n\t\t\t\t{ title: 'Admin Name', field: 'name' },\r\n\t\t\t\t{ title: 'Email', field: 'email' },\r\n\t\t\t\t{ title: 'Password', field: 'password' },\r\n\t\t\t\t{ title: 'Role', field: 'role', lookup: rolesList },\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: 'Status', field: 'status', render: rowData => {\r\n\t\t\t\t\t\treturn (<Switch\r\n\t\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\tchecked={rowData.status ? true : false}\r\n\t\t\t\t\t\t/>)\r\n\r\n\t\t\t\t\t},\r\n\t\t\t\t\teditComponent: rowData => {\r\n\t\t\t\t\t\tconsole.log('rowData', rowData);\r\n\t\t\t\t\t\tif (this.state.isEdit && rowData.rowData.id) {\r\n\t\t\t\t\t\t\tthis.setState({ status: rowData.rowData.status ? true : false, isEdit: false });\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn (<Switch\r\n\t\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\tchecked={this.state.status}\r\n\t\t\t\t\t\t\tonChange={e => this.setState({ status: e.target.checked })}\r\n\t\t\t\t\t\t/>)\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t\tdata: [],\r\n\t\t\tstatus: true,\r\n\t\t\tisEdit: true\r\n\r\n\t\t};\r\n\r\n\t}\r\n\r\n\tcomponentWillMount() {\r\n\t\tthis.defaultUrl = \"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcSTbZrzTIuXAe01k5wgrhWGzPRPRliQygmBCA&usqp=CAU\";\r\n\t\tlet user = JSON.parse(localStorage.getItem('user'));\r\n\t\tthis.instance_id = user.instance_id;\r\n\t\tconsole.log('res', this.instance_id);\r\n\t\tuserService.showInstances({ instance_id: this.instance_id, pagination: 1 }).then(res => {\r\n\t\t\tconsole.log('res.instances',res.instances);\r\n\t\t\tres.roles.map(ele => {\r\n\t\t\t\trolesList[ele.role] = ele.role;\r\n\t\t\t})\r\n\t\t\tthis.setState(prevState => {\r\n\t\t\t\tconst data = res.instances\r\n\t\t\t\treturn { ...prevState, data };\r\n\t\t\t});\r\n\r\n\t\t})\r\n\r\n\t}\r\n\r\n\trender() {\r\n\r\n\t\treturn (\r\n\t\t\t<div className=\"tables-wrapper search-table-wrap\">\r\n\t\t\t\t<SmallTitleBar\r\n\t\t\t\t\ttitle={<IntlMessages id=\"sidebar.Instance\" />}\r\n\t\t\t\t\tcenter\r\n\t\t\t\t/>\r\n\t\t\t\t<Container maxWidth=\"lg\">\r\n\t\t\t\t\t<Box px={{ xs: '12px', lg: 0 }} className=\"page-space\">\r\n\t\t\t\t\t\t<MaterialTable\r\n\t\t\t\t\t\t\ttitle={<IntlMessages id=\"sidebar.Instance\" />}\r\n\t\t\t\t\t\t\tcolumns={this.state.columns}\r\n\t\t\t\t\t\t\tdata={this.state.data}\r\n\t\t\t\t\t\t\teditable={{\r\n\t\t\t\t\t\t\t\tonRowAdd: newData =>\r\n\t\t\t\t\t\t\t\t\tnew Promise(resolve => {\r\n\t\t\t\t\t\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\t\t\t\t\t\tresolve();\r\n\r\n\t\t\t\t\t\t\t\t\t\t\tnewData.instance_id = this.instance_id;\r\n\t\t\t\t\t\t\t\t\t\t\tnewData.status = this.state.status ? 1 : 0;\r\n\t\t\t\t\t\t\t\t\t\t\tconst formData = new FormData()\r\n\t\t\t\t\t\t\t\t\t\t\tformData.append('file', newData.instanceLogo);\r\n\t\t\t\t\t\t\t\t\t\t\tnewData.instanceLogo = '';\r\n\t\t\t\t\t\t\t\t\t\t\tformData.append('data', JSON.stringify(newData));\r\n\t\t\t\t\t\t\t\t\t\t\tif (newData.instanceName && newData.name && newData.email && newData.password && newData.role) {\r\n\t\t\t\t\t\t\t\t\t\t\t\tuserService.addInstances(formData).then(res => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log('res', res);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tthis.setState(prevState => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst data = [...prevState.data];\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.push(res);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst status = true;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn { ...prevState, data, status };\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t\t\t\t}).catch(error => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\talert(\"Diese E-Mail existiert bereits oder ist ein Netzwerkfehler.\");\r\n\t\t\t\t\t\t\t\t\t\t\t\t});;\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\t\t\t\talert(\"Bitte fÃ¼llen Sie die erforderlichen Felder aus.\");\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t}, 600);\r\n\t\t\t\t\t\t\t\t\t}),\r\n\t\t\t\t\t\t\t\tonRowUpdate: (newData, oldData) =>\r\n\t\t\t\t\t\t\t\t\tnew Promise(resolve => {\r\n\t\t\t\t\t\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\t\t\t\t\t\tresolve();\r\n\t\t\t\t\t\t\t\t\t\t\tconsole.log('newdata', newData.id);\r\n\t\t\t\t\t\t\t\t\t\t\tnewData.status = this.state.status ? 1 : 0;\r\n\r\n\t\t\t\t\t\t\t\t\t\t\tconst formData = new FormData()\r\n\t\t\t\t\t\t\t\t\t\t\tif (typeof newData.instanceLogo == 'object') {\r\n\t\t\t\t\t\t\t\t\t\t\t\tformData.append('file', newData.instanceLogo);\r\n\t\t\t\t\t\t\t\t\t\t\t\tnewData.instanceLogo = '';\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\tformData.append('data', JSON.stringify(newData));\r\n\t\t\t\t\t\t\t\t\t\t\tuserService.editInstances(formData).then(res => {\r\n\t\t\t\t\t\t\t\t\t\t\t\tif (oldData) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tthis.setState(prevState => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst data = [...prevState.data];\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tnewData.instanceLogo = res.instanceLogo;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata[data.indexOf(oldData)] = newData;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst status = true;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst isEdit = true;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn { ...prevState, data, status, isEdit };\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t}).catch(error => {\r\n\t\t\t\t\t\t\t\t\t\t\t\talert(\"Diese E-Mail existiert bereits oder ist ein Netzwerkfehler.\");\r\n\t\t\t\t\t\t\t\t\t\t\t});;\r\n\t\t\t\t\t\t\t\t\t\t}, 600);\r\n\t\t\t\t\t\t\t\t\t}),\r\n\t\t\t\t\t\t\t\tonRowDelete: oldData =>\r\n\t\t\t\t\t\t\t\t\tnew Promise(resolve => {\r\n\t\t\t\t\t\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\t\t\t\t\t\tresolve();\r\n\t\t\t\t\t\t\t\t\t\t\tconsole.log(';oldData', oldData.id);\r\n\t\t\t\t\t\t\t\t\t\t\tuserService.deleteInstances({ id: oldData.id }).then(res => {\r\n\t\t\t\t\t\t\t\t\t\t\t\tconsole.log('res', res);\r\n\t\t\t\t\t\t\t\t\t\t\t\tthis.setState(prevState => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tconst data = [...prevState.data];\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tdata.splice(data.indexOf(oldData), 1);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn { ...prevState, data };\r\n\t\t\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t\t}, 600);\r\n\t\t\t\t\t\t\t\t\t}),\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t</Container>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\nexport default Instances;\r\n\r\n\r\n"],"sourceRoot":""}