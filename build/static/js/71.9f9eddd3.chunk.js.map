{"version":3,"sources":["routes/Tables/Roles/index.js"],"names":["Roles","props","onChange","event","setState","selectedPermissions","target","value","state","columns","title","field","editComponent","rowData","id","render","JSON","parse","permissions","map","index","key","console","log","isEditPermissions","data","permissionsList","user","localStorage","getItem","this","instance_id","userService","showRoles","pagination","then","res","ele","prevState","roles","className","center","maxWidth","px","xs","lg","localization","header","actions","editable","onRowAdd","newData","Promise","resolve","stringify","addRoles","push","onRowUpdate","oldData","setTimeout","editRoles","indexOf","onRowDelete","deleteRoles","splice","Component"],"mappings":"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","file":"static/js/71.9f9eddd3.chunk.js","sourcesContent":["/**\r\n * Search Table\r\n*/\r\nimport React, { Component } from 'react';\r\nimport MaterialTable from 'material-table';\r\nimport { Container, Box, Switch, FormControl, InputLabel, Select } from '@material-ui/core';\r\nimport { userService } from '../../../_services';\r\n//Components\r\nimport { SmallTitleBar } from 'components/GlobalComponents';\r\nimport IntlMessages from 'util/IntlMessages';\r\nimport { MultiSelect } from '@progress/kendo-react-dropdowns';\r\n\r\nclass Roles extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props)\r\n\t\tthis.state = {\r\n\t\t\tcolumns: [\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: 'ID', field: 'id', editComponent: rowData => <div>\r\n\t\t\t\t\t\t{rowData.id}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t},\r\n\t\t\t\t{ title: 'Role', field: 'role' },\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: 'Permissions', field: 'permissions', render: rowData => {\r\n\t\t\t\t\t\tlet selectedPermissions = JSON.parse(rowData.permissions);\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tselectedPermissions.map((value, index) => {\r\n\t\t\t\t\t\t\t\t\t\treturn (<div key={index}>{value}</div>)\r\n\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t)\r\n\r\n\t\t\t\t\t},\r\n\t\t\t\t\teditComponent: rowData => {\r\n\t\t\t\t\t\tif (rowData.rowData.id) {\r\n\t\t\t\t\t\t\tconsole.log('rowData', rowData);\r\n\t\t\t\t\t\t\tlet selectedPermissions = JSON.parse(rowData.rowData.permissions);\r\n\t\t\t\t\t\t\tif (!selectedPermissions) {\r\n\t\t\t\t\t\t\t\tselectedPermissions = [];\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif (this.state.isEditPermissions) {\r\n\t\t\t\t\t\t\t\tthis.setState({ selectedPermissions: selectedPermissions, isEditPermissions: false })\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<MultiSelect\r\n\t\t\t\t\t\t\t\tdata={this.state.permissionsList}\r\n\t\t\t\t\t\t\t\tonChange={this.onChange}\r\n\t\t\t\t\t\t\t\tvalue={this.state.selectedPermissions}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t)\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t],\r\n\r\n\t\t\tdata: [],\r\n\t\t\tselectedPermissions: [],\r\n\t\t\tpermissionsList: [],\r\n\t\t\tisEditPermissions: true\r\n\r\n\t\t};\r\n\r\n\t}\r\n\tonChange = (event) => {\r\n\t\tthis.setState({\r\n\t\t\tselectedPermissions: [...event.target.value]\r\n\t\t});\r\n\t}\r\n\tcomponentWillMount() {\r\n\t\tlet user = JSON.parse(localStorage.getItem('user'));\r\n\t\tthis.instance_id = user.instance_id;\r\n\t\tconsole.log('res', this.instance_id);\r\n\t\tuserService.showRoles({ instance_id: this.instance_id, pagination: 1 }).then(res => {\r\n\r\n\t\t\tlet permissionsList = res.permissions.map(ele => { return ele.permissions })\r\n\t\t\tthis.setState({ permissionsList: permissionsList })\r\n\t\t\tthis.setState(prevState => {\r\n\t\t\t\tconst data = res.roles;\r\n\t\t\t\treturn { ...prevState, data };\r\n\t\t\t});\r\n\r\n\t\t})\r\n\r\n\t}\r\n\r\n\trender() {\r\n\r\n\t\treturn (\r\n\t\t\t<div className=\"tables-wrapper search-table-wrap\">\r\n\t\t\t\t<SmallTitleBar\r\n\t\t\t\t\ttitle={<IntlMessages id=\"sidebar.roles\" />}\r\n\t\t\t\t\tcenter\r\n\t\t\t\t/>\r\n\t\t\t\t<Container maxWidth=\"lg\">\r\n\t\t\t\t\t<Box px={{ xs: '12px', lg: 0 }} className=\"page-space\">\r\n\t\t\t\t\t\t<MaterialTable\r\n\t\t\t\t\t\t\ttitle={<IntlMessages id=\"sidebar.roles\" />}\r\n\t\t\t\t\t\t\tcolumns={this.state.columns}\r\n\t\t\t\t\t\t\tdata={this.state.data}\r\n\t\t\t\t\t\t\tlocalization={{\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\theader: {\r\n\t\t\t\t\t\t\t\t\tactions: 'Funktionen'\r\n\t\t\t\t\t\t\t\t},\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\teditable={{\r\n\t\t\t\t\t\t\t\tonRowAdd: newData =>\r\n\t\t\t\t\t\t\t\t\tnew Promise(resolve => {\r\n\t\t\t\t\t\t\t\t\t\tresolve();\r\n\t\t\t\t\t\t\t\t\t\tconsole.log('newData', newData);\r\n\t\t\t\t\t\t\t\t\t\tnewData.instance_id = this.instance_id;\r\n\t\t\t\t\t\t\t\t\t\tnewData.permissions = JSON.stringify(this.state.selectedPermissions);\r\n\t\t\t\t\t\t\t\t\t\tuserService.addRoles(newData).then(res => {\r\n\t\t\t\t\t\t\t\t\t\t\tconsole.log('res', res);\r\n\t\t\t\t\t\t\t\t\t\t\tthis.setState(prevState => {\r\n\t\t\t\t\t\t\t\t\t\t\t\tconst data = [...prevState.data];\r\n\t\t\t\t\t\t\t\t\t\t\t\tdata.push(res);\r\n\t\t\t\t\t\t\t\t\t\t\t\tconst selectedPermissions = [];\r\n\t\t\t\t\t\t\t\t\t\t\t\tconst isEditPermissions = true;\r\n\t\t\t\t\t\t\t\t\t\t\t\treturn { ...prevState, data, selectedPermissions, isEditPermissions };\r\n\t\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t}),\r\n\t\t\t\t\t\t\t\tonRowUpdate: (newData, oldData) =>\r\n\t\t\t\t\t\t\t\t\tnew Promise(resolve => {\r\n\t\t\t\t\t\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\t\t\t\t\t\tresolve();\r\n\t\t\t\t\t\t\t\t\t\t\tconsole.log('newdata', newData.id);\r\n\t\t\t\t\t\t\t\t\t\t\tnewData.permissions = JSON.stringify(this.state.selectedPermissions);\r\n\t\t\t\t\t\t\t\t\t\t\tuserService.editRoles(newData).then(res => {\r\n\t\t\t\t\t\t\t\t\t\t\t\tif (oldData) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tthis.setState(prevState => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst data = [...prevState.data];\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata[data.indexOf(oldData)] = newData;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst selectedPermissions = [];\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst isEditPermissions = true;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn { ...prevState, data, selectedPermissions, isEditPermissions };\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t\t}, 600);\r\n\t\t\t\t\t\t\t\t\t}),\r\n\t\t\t\t\t\t\t\tonRowDelete: oldData =>\r\n\t\t\t\t\t\t\t\t\tnew Promise(resolve => {\r\n\t\t\t\t\t\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\t\t\t\t\t\tresolve();\r\n\t\t\t\t\t\t\t\t\t\t\tconsole.log(';oldData', oldData.id);\r\n\t\t\t\t\t\t\t\t\t\t\tuserService.deleteRoles({ id: oldData.id }).then(res => {\r\n\t\t\t\t\t\t\t\t\t\t\t\tconsole.log('res', res);\r\n\t\t\t\t\t\t\t\t\t\t\t\tthis.setState(prevState => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tconst data = [...prevState.data];\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tdata.splice(data.indexOf(oldData), 1);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn { ...prevState, data };\r\n\t\t\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t\t}, 600);\r\n\t\t\t\t\t\t\t\t\t}),\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t</Container>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\nexport default Roles;\r\n\r\n\r\n"],"sourceRoot":""}