{"version":3,"sources":["routes/Tables/Orders/index.js"],"names":["Orders","props","onChange","event","setState","selectedMedications","target","value","handleChangePatients","patient_id","patient","state","patients","filter","a","id","pharmacy","doctor","familyDoctor","handleChangeNote","note","handleChangeDate","date","columns","title","field","editComponent","rowData","render","JSON","parse","orderMedications","map","index","key","console","log","isEditMedications","data","medications","firstName","lastName","labelId","className","res","style","marginBottom","placeholder","InputProps","readOnly","type","defaultValue","InputLabelProps","shrink","label","multiline","rows","variant","this","defaultUrl","user","localStorage","getItem","instance_id","user_id","userService","showOrders","pagination","then","ele","medicationName","orders","center","maxWidth","px","xs","lg","editable","onRowAdd","newData","Promise","resolve","stringify","length","addOrders","prevState","push","alert","onRowDelete","oldData","setTimeout","deleteOrders","splice","indexOf","Component"],"mappings":"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","file":"static/js/61.c9ff5f57.chunk.js","sourcesContent":["/**\r\n * Search Table\r\n*/\r\nimport React, { Component } from 'react';\r\nimport MaterialTable from 'material-table';\r\nimport { Box, Grid, Button, Switch, Container, InputLabel, FormHelperText, NativeSelect, TextField, FormControl, Select, MenuItem } from '@material-ui/core';\r\nimport { userService } from '../../../_services';\r\n//Components\r\nimport { SmallTitleBar } from 'components/GlobalComponents';\r\nimport IntlMessages from 'util/IntlMessages';\r\nimport { MultiSelect } from '@progress/kendo-react-dropdowns';\r\n\r\nclass Orders extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props)\r\n\t\tthis.state = {\r\n\t\t\tcolumns: [\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: 'Order ID', field: 'orderId', editComponent: rowData => <div>\r\n\t\t\t\t\t\t{rowData.id}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\r\n\t\t\t\t\ttitle: 'Medications', field: 'orderMedications', render: rowData => {\r\n\t\t\t\t\t\tlet selectedMedications = JSON.parse(rowData.orderMedications);\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tselectedMedications.map((value, index) => {\r\n\t\t\t\t\t\t\t\t\t\treturn (<div key={index}>{value}</div>)\r\n\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t)\r\n\r\n\t\t\t\t\t},\r\n\t\t\t\t\teditComponent: rowData => {\r\n\t\t\t\t\t\tif (rowData.rowData.id) {\r\n\t\t\t\t\t\t\tconsole.log('rowData', rowData);\r\n\t\t\t\t\t\t\tlet selectedMedications = JSON.parse(rowData.rowData.orderMedications);\r\n\t\t\t\t\t\t\tif (!selectedMedications) {\r\n\t\t\t\t\t\t\t\tselectedMedications = [];\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif (this.state.isEditMedications) {\r\n\t\t\t\t\t\t\t\tthis.setState({ selectedMedications: selectedMedications, isEditMedications: false })\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<MultiSelect\r\n\t\t\t\t\t\t\t\tdata={this.state.medications}\r\n\t\t\t\t\t\t\t\tonChange={this.onChange}\r\n\t\t\t\t\t\t\t\tvalue={this.state.selectedMedications}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t)\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: 'Patient', field: 'patient', render: rowData => {\r\n\t\t\t\t\t\tlet patient = this.state.patients.filter((a) => a.id == rowData.patient);\r\n\r\n\t\t\t\t\t\treturn (<div>\r\n\t\t\t\t\t\t\t{patient[0].firstName} {patient[0].lastName}\r\n\t\t\t\t\t\t</div>)\r\n\t\t\t\t\t},\r\n\t\t\t\t\teditComponent: rowData => {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\tlabelId=\"demo-simple-select-label\"\r\n\t\t\t\t\t\t\t\tid=\"demo-simple-select\"\r\n\t\t\t\t\t\t\t\tclassName=\"full-width\"\r\n\t\t\t\t\t\t\t\tvalue={this.state.patient}\r\n\t\t\t\t\t\t\t\tonChange={this.handleChangePatients}\r\n\t\t\t\t\t\t\t>{\r\n\t\t\t\t\t\t\t\t\tthis.state.patients.map((res, index) => {\r\n\t\t\t\t\t\t\t\t\t\treturn (<MenuItem key={index} value={res.id}>{res.firstName}</MenuItem>)\r\n\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t</Select>)\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: 'Pharmacy', field: 'pharmacy', render: rowData => {\r\n\t\t\t\t\t\treturn (<div>\r\n\t\t\t\t\t\t\t{rowData.pharmacy}\r\n\t\t\t\t\t\t</div>)\r\n\t\t\t\t\t},\r\n\t\t\t\t\teditComponent: rowData => {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\tid=\"pharmacy\"\r\n\t\t\t\t\t\t\t\tstyle={{ marginBottom: 8 }}\r\n\t\t\t\t\t\t\t\tplaceholder=\"pharmacy\"\r\n\t\t\t\t\t\t\t\tvalue={this.state.pharmacy}\r\n\t\t\t\t\t\t\t\tInputProps={{\r\n\t\t\t\t\t\t\t\t\treadOnly: true,\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>)\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: 'Family Doctor', field: 'doctor', render: rowData => {\r\n\t\t\t\t\t\treturn (<div>\r\n\t\t\t\t\t\t\t{rowData.doctor}\r\n\t\t\t\t\t\t</div>)\r\n\t\t\t\t\t},\r\n\t\t\t\t\teditComponent: rowData => {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\tid=\"doctor\"\r\n\t\t\t\t\t\t\t\tstyle={{ marginBottom: 8 }}\r\n\t\t\t\t\t\t\t\tplaceholder=\"doctor\"\r\n\t\t\t\t\t\t\t\tvalue={this.state.doctor}\r\n\t\t\t\t\t\t\t\tInputProps={{\r\n\t\t\t\t\t\t\t\t\treadOnly: true,\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>)\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: 'Due Date', field: 'date', render: rowData => {\r\n\t\t\t\t\t\treturn (<div>\r\n\t\t\t\t\t\t\t{rowData.date}\r\n\t\t\t\t\t\t</div>)\r\n\t\t\t\t\t},\r\n\t\t\t\t\teditComponent: rowData => {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\tclassName=\"full-width\"\r\n\t\t\t\t\t\t\t\tid=\"datetime-local\"\r\n\t\t\t\t\t\t\t\ttype=\"datetime-local\"\r\n\t\t\t\t\t\t\t\tdefaultValue=\"2017-05-24T10:30\"\r\n\t\t\t\t\t\t\t\tInputLabelProps={{\r\n\t\t\t\t\t\t\t\t\tshrink: true,\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tvalue={this.state.date}\r\n\t\t\t\t\t\t\t\tonChange={this.handleChangeDate}\r\n\t\t\t\t\t\t\t/>)\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: 'Note', field: 'note', render: rowData => {\r\n\t\t\t\t\t\treturn (<div>\r\n\t\t\t\t\t\t\t{rowData.note}\r\n\t\t\t\t\t\t</div>)\r\n\t\t\t\t\t},\r\n\t\t\t\t\teditComponent: rowData => {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\tclassName=\"full-width\"\r\n\t\t\t\t\t\t\t\tid=\"outlined-multiline-static\"\r\n\t\t\t\t\t\t\t\tlabel=\"Add Note\"\r\n\t\t\t\t\t\t\t\tmultiline\r\n\t\t\t\t\t\t\t\trows={4}\r\n\t\t\t\t\t\t\t\tdefaultValue=\"Default Value\"\r\n\t\t\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\t\t\tvalue={this.state.note}\r\n\t\t\t\t\t\t\t\tonChange={this.handleChangeNote}\r\n\t\t\t\t\t\t\t/>)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t],\r\n\r\n\t\t\tpharmacy: '',\r\n\t\t\tpatient: '',\r\n\t\t\tdoctor: '',\r\n\t\t\tnote: '',\r\n\t\t\tdata: [],\r\n\t\t\tselectedMedications: [],\r\n\t\t\tmedications: [],\r\n\t\t\tisEditMedications: true,\r\n\t\t\tpatients: [],\r\n\t\t};\r\n\r\n\t}\r\n\tonChange = (event) => {\r\n\t\tthis.setState({\r\n\t\t\tselectedMedications: [...event.target.value]\r\n\t\t});\r\n\t}\r\n\r\n\r\n\thandleChangePatients = (event) => {\r\n\t\tlet patient_id = event.target.value;\r\n\t\tlet patient = this.state.patients.filter((a) => a.id == patient_id);\r\n\t\tlet pharmacy = patient[0].pharmacy;\r\n\t\tlet doctor = patient[0].familyDoctor;\r\n\t\tthis.setState({ patient: event.target.value, pharmacy: pharmacy, doctor: doctor });\r\n\r\n\r\n\t}\r\n\thandleChangeNote = (event) => {\r\n\t\tthis.setState({ note: event.target.value });\r\n\t}\r\n\thandleChangeDate = (event) => {\r\n\t\tthis.setState({ date: event.target.value });\r\n\t}\r\n\r\n\r\n\tcomponentWillMount() {\r\n\t\tthis.defaultUrl = \"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcSTbZrzTIuXAe01k5wgrhWGzPRPRliQygmBCA&usqp=CAU\";\r\n\t\tlet user = JSON.parse(localStorage.getItem('user'));\r\n\t\tthis.instance_id = user.instance_id;\r\n\t\tthis.user_id = user.id;\r\n\t\r\n\r\n\t\tconsole.log('res-1', this.user_id);\r\n\t\tuserService.showOrders({ instance_id: this.instance_id, pagination: 1, user_id: this.user_id }).then(res => {\r\n\t\t\tlet medications = res.medications.map(ele => {\r\n\t\t\t\treturn ele.medicationName;\r\n\t\t\t});\r\n\t\t\tlet patients = res.patients;\r\n\r\n\t\t\tconsole.log('res', res.orders);\r\n\t\t\tthis.setState({\r\n\t\t\t\tmedications, medications,\r\n\t\t\t\tdata: res.orders,\r\n\t\t\t\tpatients: patients\r\n\t\t\t})\r\n\r\n\t\t})\r\n\r\n\t}\r\n\r\n\trender() {\r\n\t\tconsole.log('this.stae', this.state.doctor, this.state.pharmacy)\r\n\t\treturn (\r\n\t\t\t<div className=\"tables-wrapper search-table-wrap\">\r\n\t\t\t\t<SmallTitleBar\r\n\t\t\t\t\ttitle={<IntlMessages id=\"sidebar.order\" />}\r\n\t\t\t\t\tcenter\r\n\t\t\t\t/>\r\n\t\t\t\t<Container maxWidth=\"lg\">\r\n\t\t\t\t\t<Box px={{ xs: '12px', lg: 0 }} className=\"page-space\">\r\n\t\t\t\t\t\t<MaterialTable\r\n\t\t\t\t\t\t\ttitle={<IntlMessages id=\"sidebar.order\" />}\r\n\t\t\t\t\t\t\tcolumns={this.state.columns}\r\n\t\t\t\t\t\t\tdata={this.state.data}\r\n\t\t\t\t\t\t\teditable={{\r\n\r\n\t\t\t\t\t\t\t\tonRowAdd: newData =>\r\n\t\t\t\t\t\t\t\t\tnew Promise(resolve => {\r\n\t\t\t\t\t\t\t\t\t\tresolve();\r\n\r\n\t\t\t\t\t\t\t\t\t\tnewData.instance_id = this.instance_id;\r\n\t\t\t\t\t\t\t\t\t\tnewData.user_id = this.user_id;\r\n\t\t\t\t\t\t\t\t\t\tnewData.orderMedications = JSON.stringify(this.state.selectedMedications);\r\n\t\t\t\t\t\t\t\t\t\tnewData.patient = this.state.patient;\r\n\t\t\t\t\t\t\t\t\t\tnewData.date = this.state.date;\r\n\t\t\t\t\t\t\t\t\t\tnewData.note = this.state.note;\r\n\t\t\t\t\t\t\t\t\t\tnewData.pharmacy = this.state.pharmacy;\r\n\t\t\t\t\t\t\t\t\t\tnewData.doctor = this.state.doctor;\r\n\t\t\t\t\t\t\t\t\t\tif(this.state.selectedMedications.length && newData.patient && newData.note && newData.date && newData.pharmacy && newData.doctor){\r\n\t\t\t\t\t\t\t\t\t\t\tuserService.addOrders(newData).then(res => {\r\n\t\t\t\t\t\t\t\t\t\t\t\tconsole.log('res', res);\r\n\t\t\t\t\t\t\t\t\t\t\t\tthis.setState(prevState => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tconst data = [...prevState.data];\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tdata.push(res);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tconst selectedMedications = [];\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tconst isEditMedications = true;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn { ...prevState, data, selectedMedications, isEditMedications };\r\n\t\t\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t\t}else {\r\n\t\t\t\t\t\t\t\t\t\t\talert(\"Bitte füllen Sie die erforderlichen Felder aus.\");\r\n\t\t\t\t\t\t\t\t\t\t}\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t}),\r\n\t\t\t\t\t\t\t\tonRowDelete: oldData =>\r\n\t\t\t\t\t\t\t\t\tnew Promise(resolve => {\r\n\t\t\t\t\t\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\t\t\t\t\t\tresolve();\r\n\t\t\t\t\t\t\t\t\t\t\tconsole.log(';oldData', oldData.id);\r\n\t\t\t\t\t\t\t\t\t\t\tuserService.deleteOrders({ id: oldData.id }).then(res => {\r\n\t\t\t\t\t\t\t\t\t\t\t\tconsole.log('res', res);\r\n\t\t\t\t\t\t\t\t\t\t\t\tthis.setState(prevState => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tconst data = [...prevState.data];\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tdata.splice(data.indexOf(oldData), 1);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn { ...prevState, data };\r\n\t\t\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t\t}, 600);\r\n\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t</Container>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\nexport default Orders;\r\n\r\n\r\n"],"sourceRoot":""}