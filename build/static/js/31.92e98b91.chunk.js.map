{"version":3,"sources":["assets/Images/avatars sync /^/.*$","../node_modules/@material-ui/icons/MoreHoriz.js","routes/Pages/ContactGrid/Components/UpdateContact.js","routes/Pages/ContactGrid/Components/ConfirmationDialog.js","routes/Pages/ContactGrid/Components/OperationButton.js","routes/Pages/ContactGrid/Components/ContactList.js","routes/Pages/ContactGrid/Components/ContactGridItem.js","routes/Pages/ContactGrid/index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","_interopRequireDefault","require","defineProperty","value","default","_react","_default","createElement","d","Updatecontact","state","open","name","designation","address","isValidname","isValiddesignation","isValidaddress","closeDialog","setState","props","onCloseDialog","handleClose","this","getcontactData","data","updatecontact","ID","contactObject","onUpdateContact","Dialog","className","onClose","aria-labelledby","DialogTitle","DialogContent","autoComplete","style","Box","mb","FormControl","fullWidth","required","error","aria-describedby","InputLabel","htmlFor","Input","type","onChange","event","target","FormHelperText","width","display","justifyContent","textAlign","mx","Button","variant","color","onClick","onPressUpdate","React","Component","connect","contactsData","ContactReducer","ConfirmationDialog","isTrue","onConfirm","bind","pt","Typography","DialogActions","p","OperationButton","useState","anchorEl","setAnchorEl","Boolean","IconButton","size","aria-label","aria-controls","aria-haspopup","currentTarget","Menu","keepMounted","MenuItem","key","parentEditMethod","parentMethod","makeStyles","theme","thumb","height","marginBottom","paper","backgroundColor","boxShadow","table","borderRadius","padding","lineHeight","borderBottom","palette","common","white","useStyles","ContactGridItem","classes","contacts","contact","index","Card","CardContent","Avatar","alt","src","image","fontSize","fontWeight","alignItems","Switch","CardActions","disableSpacing","to","ContactGrid","message","favContacts","recentContacts","isUpdated","gridView","handleChange","popupResponse","confirmationDialog","createRef","userService","showInstances","then","res","onShowContacts","current","openDialog","deleteContact","title","IntlMessages","searchBarWrap","bgcolor","px","xs","md","pb","Container","sm","placeholder","endAdornment","InputAdornment","position","UpdateContact","handleClickEdit","ondeleteContact","ref","deleteContactPermanent","withRouter","withStyles","tabsWrap","appWrap","toolbar","marginLeft","marginRight","minHeight","borderColor","breakpoints","down","fill","visibleHidden","visibility","withTheme"],"mappings":"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","file":"static/js/31.92e98b91.chunk.js","sourcesContent":["var map = {\n\t\"./user-1.jpg\": 728,\n\t\"./user-2.jpg\": 729,\n\t\"./user-3.jpg\": 730,\n\t\"./user-4.jpg\": 312,\n\t\"./user-5.jpg\": 731,\n\t\"./user-6.jpg\": 419\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 1582;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M6 10c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm12 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm-6 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"\n}), 'MoreHoriz');\n\nexports.default = _default;","/**\r\n * Form Dialog\r\n */\r\n/* eslint-disable */\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Button, Box } from '@material-ui/core';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport Input from '@material-ui/core/Input';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\n//Actions\r\nimport { onUpdateContact } from \"actions\";\r\n\r\nclass Updatecontact extends React.Component {\r\n\r\n\tstate = {\r\n\t\topen: false,\r\n\t\tname: '',\r\n\t\tdesignation: '',\r\n\t\taddress: '',\r\n\t\tisValidname: false,\r\n\t\tisValiddesignation: false,\r\n\t\tisValidaddress: false\r\n\t};\r\n\t//Define function for close confirmation dialog box \r\n\tcloseDialog = () => {\r\n\t\tthis.setState({ open: false });\r\n\t\tthis.props.onCloseDialog(false);\r\n\t};\r\n\r\n\thandleClose = () => {\r\n\t\tthis.setState({ open: false });\r\n\t\tthis.props.onCloseDialog(true);\r\n\t};\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.setState({ open: true });\r\n\t\tthis.getcontactData();\r\n\t}\r\n\r\n\t// get contact data\r\n\tgetcontactData() {\r\n\t\tconst { data } = this.props;\r\n\t\tthis.setState({\r\n\t\t\tname: data.name,\r\n\t\t\tdesignation: data.designation,\r\n\t\t\taddress: data.address,\r\n\t\t})\r\n\t}\r\n   /**\r\n   * Method to check update validation\r\n   */\r\n\tonPressUpdate() {\r\n\t\tconst { name, designation, address } = this.state;\r\n\t\tthis.setState({\r\n\t\t\tisValidname: false,\r\n\t\t\tisValiddesignation: false,\r\n\t\t\tisValidaddress: false\r\n\t\t})\r\n\t\tif (name !== '' && designation !== '' && address !== '') {\r\n\t\t\tthis.updatecontact();\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif (name === '') {\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tisValidname: true,\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t\tif (designation === '') {\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tisValiddesignation: true,\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t\tif (address === '') {\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tisValidaddress: true,\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t\tif (name === '' && designation === '' && address === '') {\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tisValidname: true,\r\n\t\t\t\t\tisValiddesignation: true,\r\n\t\t\t\t\tisValidaddress: true\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t//update contact info\r\n\tupdatecontact() {\r\n\t\tlet ID = this.props.data.id;\r\n\t\tlet contactObject = {\r\n\t\t\tname: this.state.name,\r\n\t\t\tdesignation: this.state.designation,\r\n\t\t\taddress: this.state.address\r\n\t\t}\r\n\t\tthis.props.onUpdateContact((contactObject), ID);\r\n\t\tthis.props.onCloseDialog(true);\r\n\t\tthis.setState({ open: false });\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { name, designation, address, isValidname, isValiddesignation, isValidaddress } = this.state;\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<Dialog\r\n\t\t\t\t\tclassName=\"contact-dialog\"\r\n\t\t\t\t\topen={this.state.open}\r\n\t\t\t\t\tonClose={this.closeDialog}\r\n\t\t\t\t\taria-labelledby=\"form-dialog-title\"\r\n\t\t\t\t>\r\n\t\t\t\t\t<DialogTitle id=\"form-dialog-title\">Edit Contact</DialogTitle>\r\n\t\t\t\t\t<DialogContent>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<form autoComplete=\"off\">\r\n\t\t\t\t\t\t\t\t<div className=\"row\" style={{ \"marginBottom\": \"20px\" }}>\r\n\t\t\t\t\t\t\t\t\t<Box mb={2}>\r\n\t\t\t\t\t\t\t\t\t\t<FormControl\r\n\t\t\t\t\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\t\t\t\terror={isValidname}\r\n\t\t\t\t\t\t\t\t\t\t\taria-describedby=\"firstsname-text\"\r\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"d-block\"\r\n\t\t\t\t\t\t\t\t\t\t\tstyle={{ \"marginBottom\": \"10px\" }}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t<InputLabel htmlFor=\"name\">Name</InputLabel>\r\n\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\t\t\t\t\t\tid=\"name\"\r\n\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={name ? name : ''}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event) => { this.setState({ name: event.target.value }) }}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t{isValidname &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t<FormHelperText id=\"firstsname-text\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"zmdi zmdi-alert-circle mr-1\"></i>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tThis field should not be empty.\r\n                                    </FormHelperText>\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t\t\t<Box mb={2}>\r\n\t\t\t\t\t\t\t\t\t\t<FormControl\r\n\t\t\t\t\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\t\t\t\terror={isValiddesignation}\r\n\t\t\t\t\t\t\t\t\t\t\taria-describedby=\"designation-text\"\r\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"d-block\"\r\n\t\t\t\t\t\t\t\t\t\t\tstyle={{ \"marginBottom\": \"10px\" }}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t<InputLabel htmlFor=\"designation\">Contact</InputLabel>\r\n\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\t\t\t\t\t\tid=\"designation\"\r\n\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={designation ? designation : ''}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event) => { this.setState({ designation: event.target.value }) }}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t{isValiddesignation &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t<FormHelperText id=\"designation-text\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"zmdi zmdi-alert-circle mr-1\"></i>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tThis field should not be empty.\r\n                                    </FormHelperText>\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t\t\t<Box mb={2}>\r\n\t\t\t\t\t\t\t\t\t\t<FormControl\r\n\t\t\t\t\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\t\t\t\terror={isValidaddress}\r\n\t\t\t\t\t\t\t\t\t\t\taria-describedby=\"address-text\"\r\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"d-block\"\r\n\t\t\t\t\t\t\t\t\t\t\tstyle={{ \"marginBottom\": \"10px\" }}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t<InputLabel htmlFor=\"address\">Address</InputLabel>\r\n\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\t\t\t\t\t\tid=\"address\"\r\n\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={address ? address : ''}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event) => { this.setState({ address: event.target.value }) }}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t{isValidaddress &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t<FormHelperText id=\"address-text\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"zmdi zmdi-alert-circle mr-1\"></i>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tThis field should not be empty.\r\n                                    </FormHelperText>\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"pt-25 text-right\">\r\n\t\t\t\t\t\t\t\t\t<Box mb={2} width=\"100%\" display=\"flex\" justifyContent=\"flex-end\" textAlign=\"center\">\r\n\t\t\t\t\t\t\t\t\t\t<Box mx={2}>\r\n\t\t\t\t\t\t\t\t\t\t\t<Button variant=\"contained\" color=\"secondary\" onClick={this.handleClose} >\r\n\t\t\t\t\t\t\t\t\t\t\t\tCancel\r\n\t\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t\t\t\t<Button variant=\"contained\" color=\"primary\" onClick={() => this.onPressUpdate()}>\r\n\t\t\t\t\t\t\t\t\t\t\tSubmit\r\n\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</form>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</DialogContent>\r\n\t\t\t\t</Dialog>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = ({ ContactReducer }) => {\r\n\tconst { contactsData } = ContactReducer;\r\n\treturn { contactsData };\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n\tonUpdateContact\r\n})(Updatecontact);","/**\r\n * Confirmation dialog component\r\n*/\r\n/* eslint-disable */\r\nimport React from 'react';\r\nimport {Button, Box,Typography, Dialog, DialogActions, DialogContent } from '@material-ui/core';\r\n\r\nclass ConfirmationDialog extends React.Component {\r\n\r\n\tstate = {\r\n\t\topen: false,\r\n\t};\r\n\r\n\t//Define function for open confirmation dialog box\r\n\topenDialog() {\r\n\t\tthis.setState({ open: true });\r\n\t};\r\n\r\n\t//Define function for close confirmation dialog box \r\n\tcloseDialog() {\r\n\t\tthis.setState({ open: false });\r\n\t};\r\n\r\n\t//Define function for close confirmation dialog box and callback for delete item \r\n\tonCloseDialog(isTrue) {\r\n\t\tthis.setState({ open: false });\r\n\t\tthis.props.onConfirm(isTrue)\r\n\t};\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<Dialog\r\n\t\t\t\topen={this.state.open}\r\n\t\t\t\tonClose={this.closeDialog.bind(this)}\r\n\t\t\t\taria-labelledby=\"responsive-dialog-title\"\r\n\t\t\t\tclassName=\"confirmation-dialog\"\r\n\t\t\t>\r\n\t\t\t\t<DialogContent>\r\n\t\t\t\t\t<Box textAlign=\"center\" pt={2}>\r\n\t\t\t\t\t\t<Typography variant=\"h5\">\r\n\t\t\t\t\t\t\tAre you sure you want to delete this contact permanently?\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t</DialogContent>\r\n\t\t\t\t<DialogActions className=\"px-20 pb-20 justify-content-center\">\r\n\t\t\t\t\t<Box mb={2} width=\"100%\" display=\"flex\" justifyContent=\"center\" p={1} textAlign=\"center\">\r\n\t\t\t\t\t\t<Box mx={2}>\r\n\t\t\t\t\t\t\t<Button variant=\"contained\" color=\"primary\" onClick={() => this.onCloseDialog(true)}>\r\n\t\t\t\t\t\t\t\tYes\r\n               \t\t</Button>\r\n\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t<Button variant=\"contained\" color=\"secondary\" onClick={() => this.onCloseDialog(false)} >\r\n\t\t\t\t\t\t\tNo\r\n               </Button>\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t</DialogActions>\r\n\t\t\t</Dialog>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default ConfirmationDialog;","/**\r\n * Operational Menu\r\n*/\r\nimport React from 'react';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\r\n\r\nexport default function OperationButton(props) {\r\n\r\n   const [anchorEl, setAnchorEl] = React.useState(null);\r\n   const open = Boolean(anchorEl);\r\n\r\n   const handleClick = event => {\r\n      setAnchorEl(event.currentTarget);\r\n   };\r\n\r\n   const handleClose = () => {\r\n      setAnchorEl(null);\r\n\t};\r\n\t\r\n   const onDelete = (event) => {\r\n\t\tsetAnchorEl(null);\r\n      props.parentMethod();\r\n   }\r\n   const onEdit = () => {\r\n      setAnchorEl(null);\r\n      props.parentEditMethod();\r\n   }\r\n   return (\r\n      <div>\r\n         <IconButton\r\n\t\t\t\tsize=\"small\"\r\n            aria-label=\"more\"\r\n            aria-controls=\"long-menu\"\r\n            aria-haspopup=\"true\"\r\n            onClick={handleClick}\r\n         >\r\n            <MoreHorizIcon />\r\n         </IconButton>\r\n         <Menu\r\n            id=\"long-menu\"\r\n            anchorEl={anchorEl}\r\n            keepMounted\r\n            open={open}\r\n            onClose={handleClose}\r\n         >\r\n            <MenuItem key={'Edit'} onClick={() => onEdit(props.data)}>\r\n               {'Edit'}\r\n            </MenuItem>\r\n            <MenuItem key={'Delete'} onClick={() => onDelete(props.data)}>\r\n               {'Delete'}\r\n            </MenuItem>\r\n         </Menu>\r\n      </div>\r\n   );\r\n}","import React, { Fragment } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Paper, Box, Typography } from '@material-ui/core';\r\nimport OperationButton from './OperationButton';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport { Link } from 'react-router-dom';\r\nconst useStyles = makeStyles(theme => ({\r\n\tthumb: {\r\n\t\twidth: 100,\r\n\t\theight: 100,\r\n\t\tmarginBottom: 10,\r\n\t},\r\n\tpaper:{\r\n\t\tbackgroundColor:\"transparent\",\r\n\t\tboxShadow:'none',\r\n\t},\r\n\ttable:{\r\n\t\t'& tr':{\r\n\t\t\tmarginBottom:10,\r\n\t\t\tborderRadius:4,\r\n\t\t\theight:'auto',\r\n\t\t\tboxShadow:'0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06)'\r\n\t\t},\r\n\t\t'& .MuiTableHead-root':{\r\n\t\t\tbackgroundColor:\"transparent\",\r\n\t\t},\r\n\t\t'& .MuiTableCell-head, .MuiTableCell-body':{\r\n\t\t\theight:'auto',\r\n\t\t\tpadding:'12px 16px',\r\n\t\t\tlineHeight:1,\r\n\t\t\tborderBottom: 0,\r\n\t\t\tbackgroundColor:theme.palette.common.white,\r\n\t\t}\r\n\t}\r\n}));\r\n\r\nexport default function ContactList(props) {\r\n\tconst [checked, setChecked] = React.useState(false);\r\n\r\n\tconst handleChange = event => {\r\n\t\tsetChecked(event.target.checked);\r\n\t};\r\n\r\n\tconst classes = useStyles();\r\n\tconst { contacts } = props;\r\n\t\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t<TableContainer component={Paper} className={`contact-list-wrap ${classes.paper}`}>\r\n\t\t\t\t<Table className={classes.table} aria-label=\"simple table\">\r\n\t\t\t\t\t<TableHead>\r\n\t\t\t\t\t\t<TableRow>\r\n\t\t\t\t\t\t\t<TableCell>\r\n\t\t\t\t\t\t\t\t<Checkbox\r\n\t\t\t\t\t\t\t\t\tchecked={checked}\r\n\t\t\t\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t\t\t\t\tvalue=\"primary\"\r\n\t\t\t\t\t\t\t\t\tinputProps={{ 'aria-label': 'primary checkbox' }}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t<TableCell>Name</TableCell>\r\n\t\t\t\t\t\t\t<TableCell align=\"left\">Email</TableCell>\r\n\t\t\t\t\t\t\t<TableCell align=\"left\">Designation</TableCell>\r\n\t\t\t\t\t\t\t<TableCell align=\"left\">Address</TableCell>\r\n\t\t\t\t\t\t\t<TableCell align=\"left\">Phone No.</TableCell>\r\n\t\t\t\t\t\t\t<TableCell align=\"left\">Actions</TableCell>\r\n\t\t\t\t\t\t</TableRow>\r\n\t\t\t\t\t</TableHead>\r\n\t\t\t\t\t<TableBody>\r\n\t\t\t\t\t\t{contacts && contacts.map((contact, index) => (\r\n\t\t\t\t\t\t\t<TableRow key={index}>\r\n\t\t\t\t\t\t\t\t<TableCell>\r\n\t\t\t\t\t\t\t\t\t<Checkbox\r\n\t\t\t\t\t\t\t\t\t\tchecked={checked}\r\n\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t\t\t\t\t\tvalue=\"primary\"\r\n\t\t\t\t\t\t\t\t\t\tinputProps={{ 'aria-label': 'primary checkbox' }}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t\t<TableCell align=\"left\">\r\n\t\t\t\t\t\t\t\t\t<Box display=\"inline-flex\" alignItems=\"center\">\r\n\t\t\t\t\t\t\t\t\t\t<img alt=\"Remy Sharp\" style={{ borderRadius: 4 }} height={48} width={48} src={require(`assets/Images/avatars/${contact.image}`)} />\r\n\t\t\t\t\t\t\t\t\t\t<Box px=\"12px\"><Typography variant=\"body2\" color=\"primary\">{contact.name}</Typography></Box>\r\n\t\t\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t\t<TableCell align=\"left\">{contact.email}</TableCell>\r\n\t\t\t\t\t\t\t\t<TableCell align=\"left\">{contact.designation}</TableCell>\r\n\t\t\t\t\t\t\t\t<TableCell align=\"left\">{contact.address}</TableCell>\r\n\t\t\t\t\t\t\t\t<TableCell align=\"left\">{contact.phoneNo}</TableCell>\r\n\t\t\t\t\t\t\t\t<TableCell align=\"left\">\r\n\t\t\t\t\t\t\t\t\t<OperationButton parentEditMethod={() => props.parentEditMethod(contact)} \r\n\t\t\t\t\t\t\t\t\tparentMethod={() => props.parentMethod(contact)} \r\n\t\t\t\t\t\t\t\t\tdata={contact} />\r\n\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t</TableRow>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</TableBody>\r\n\t\t\t\t</Table>\r\n\t\t\t</TableContainer>\r\n\t\t</Fragment>\r\n\t);\r\n}","import React, { Fragment } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Card, CardContent, Switch,CardActions, Icon, Avatar, IconButton, Box, Typography } from '@material-ui/core';\r\nimport OperationButton from './OperationButton';\r\nimport { Link } from 'react-router-dom';\r\nconst useStyles = makeStyles(theme => ({\r\n\tthumb: {\r\n\t\twidth: 100,\r\n\t\theight: 100,\r\n\t\tmarginBottom: 10,\r\n\t}\r\n}));\r\n\r\nexport default function ContactGridItem(props) {\r\n\tconst classes = useStyles();\r\n\tconst { contacts } = props;\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t{contacts && contacts.map((contact, index) => (\r\n\t\t\t\t<div key={index} className=\"contact-grid-item\">\r\n\t\t\t\t\t<Card>\r\n\t\t\t\t\t\t<CardContent>\r\n\t\t\t\t\t\t\t<div className=\"contact-grid-action\">\r\n\t\t\t\t\t\t\t\t<OperationButton parentEditMethod={() => props.parentEditMethod(contact)}\r\n\t\t\t\t\t\t\t\t\tparentMethod={() => props.parentMethod(contact)}\r\n\t\t\t\t\t\t\t\t\tdata={contact} />\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<Avatar alt=\"Remy Sharp\" className={classes.thumb} src={require(`assets/Images/avatars/${contact.image}`)} />\r\n\t\t\t\t\t\t\t<div className=\"contact-grid-content\">\r\n\t\t\t\t\t\t\t\t<Box fontSize=\"subtitle1.fontSize\" fontWeight=\"h6.fontWeight\" mb=\"5px\">Medication name</Box>\r\n\t\t\t\t\t\t\t\t<Typography variant=\"subtitle2\">Ingredients</Typography>\r\n\t\t\t\t\t\t\t\t<Box display=\"flex\" alignItems=\"center\" justifyContent=\"center\">\r\n\t\t\t\t\t\t\t\t\t<Switch\r\n\t\t\t\t\t\t\t\t\t\tsize=\"small\"\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</CardContent>\r\n\t\t\t\t\t\t<CardActions disableSpacing className=\"footer-icon\">\r\n\t\t\t\t\t\t\t<Link to='/app/user-settings'> <IconButton size=\"small\">\r\n\t\t\t\t\t\t\t\tManager\r\n\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t</CardActions>\r\n\t\t\t\t\t</Card>\r\n\t\t\t\t</div>\r\n\t\t\t))};\r\n\t\t</Fragment>\r\n\t);\r\n}","/**\r\n * Contacts tab section\r\n*/\r\nimport React, { Component } from 'react';\r\nimport { withStyles } from '@material-ui/styles';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport SwipeableViews from 'react-swipeable-views';\r\nimport {\r\n\tAppBar, Tabs, Tab, Typography, Button, Icon, IconButton, Box, Input, FormControl, InputAdornment, Container\r\n} from '@material-ui/core';\r\n\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport IntlMessages from 'util/IntlMessages';\r\n\r\n//Components\r\nimport UpdateContact from './Components/UpdateContact';\r\n\r\nimport ConfirmationDialog from './Components/ConfirmationDialog';\r\n\r\n//Global component\r\nimport { SmallTitleBar } from 'components/GlobalComponents';\r\n\r\n// Redux actions\r\nimport { deleteContact , onShowContacts } from \"actions\";\r\nimport ContactList from './Components/ContactList';\r\nimport ContactGridItem from './Components/ContactGridItem';\r\nimport { userService } from '../../../_services';\r\nconst styles = theme => ({\r\n\ttabsWrap: {\r\n\t\tboxShadow: '0px 2px 4px -1px rgba(0,0,0,0.2), 0px 4px 5px 0px rgba(0,0,0,0.14), 0px 1px 10px 0px rgba(0,0,0,0.12)',\r\n\t},\r\n\tappWrap: {\r\n\t\tboxShadow: \"none\",\r\n\t},\r\n\ttoolbar: {\r\n\t\tpadding: '0',\r\n\t\tmarginLeft: -12,\r\n\t\tmarginRight: -12,\r\n\t\t'& button': {\r\n\t\t\tminHeight: 50,\r\n\t\t},\r\n\t\t'& .MuiTab-wrapper': {\r\n\t\t\tfontSize: '1rem',\r\n\t\t},\r\n\t\t'& .Mui-selected': {\r\n\t\t\tbackgroundColor: `rgba(0,0,0,0.1)`,\r\n\t\t}\r\n\t},\r\n\tsearchBarWrap: {\r\n\t\t'& .MuiInput-underline::before': {\r\n\t\t\tborderBottom: `1px solid ${theme.palette.common.white}`,\r\n\t\t},\r\n\t\t'& .MuiInputBase-input::placeholder': {\r\n\t\t\tcolor: theme.palette.common.white,\r\n\t\t},\r\n\t\t'& .MuiInput-underline:hover:not(.Mui-disabled)::before': {\r\n\t\t\tborderColor: theme.palette.common.white,\r\n\t\t},\r\n\t\t'& .MuiInput-underline::after': {\r\n\t\t\tborderBottom: `1px solid ${theme.palette.common.white}`,\r\n\t\t},\r\n\t\t'& .MuiInputBase-root': {\r\n\t\t\twidth: 360,\r\n\t\t\t'& input': {\r\n\t\t\t\tcolor: theme.palette.common.white,\r\n\t\t\t},\r\n\t\t\t[theme.breakpoints.down('xs')]: {\r\n\t\t\t\twidth: '100%',\r\n\t\t\t\tmarginBottom: 20,\r\n\t\t\t},\r\n\t\t},\r\n\t\t'& .MuiSvgIcon-root': {\r\n\t\t\tfill: theme.palette.common.white,\r\n\t\t}\r\n\t},\r\n\tvisibleHidden: {\r\n\t\tvisibility: 'hidden'\r\n\t}\r\n});\r\n\r\nfunction TabPanel(props) {\r\n\tconst { children, value, index, dir, ...other } = props;\r\n\treturn (\r\n\t\t<Typography\r\n\t\t\tcomponent=\"div\"\r\n\t\t\trole=\"tabpanel\"\r\n\t\t\thidden={value !== index}\r\n\t\t\tid={`scrollable-force-tabpanel-${index}`}\r\n\t\t\taria-labelledby={`scrollable-force-tab-${index}`}\r\n\t\t\t{...other}\r\n\t\t\tdir={dir}\r\n\t\t\tclassName=\"pad-12\"\r\n\t\t>\r\n\t\t\t{value === index && <Box pb={4}>{children}</Box>}\r\n\t\t</Typography>\r\n\t);\r\n}\r\n\r\nfunction a11yProps(index) {\r\n\treturn {\r\n\t\tid: `scrollable-force-tab-${index}`,\r\n\t\t'aria-controls': `scrollable-force-tabpanel-${index}`,\r\n\t};\r\n}\r\n\r\nclass ContactGrid extends Component {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.confirmationDialog = React.createRef();\r\n\t}\r\n\r\n\tstate = {\r\n\t\tmessage: '',\r\n\t\tvalue: 0,\r\n\t\tfavContacts: [],\r\n\t\trecentContacts: null,\r\n\t\tdata: null,\r\n\t\tisUpdated: false,\r\n\t\tgridView: true,\r\n\t};\r\n\r\n\tcomponentDidMount() {\r\n\r\n\t\tuserService.showInstances().then(res => {\r\n             \r\n\t\t\tthis.props.onShowContacts(res);\r\n\t\t})\r\n\t\t\r\n\t}\r\n\r\n\t\r\n\r\n\t// // Get favourite contact data\r\n\t// getFavContact() {\r\n\t// \tlet newArray = [];\r\n\t// \tlet data = this.props.contactsData;\r\n\t// \tif (data !== null) {\r\n\t// \t\tfor (let Item of data) {\r\n\t// \t\t\tif (Item.type === 'favourite') {\r\n\t// \t\t\t\tnewArray.push(Item)\r\n\t// \t\t\t}\r\n\t// \t\t}\r\n\t// \t\tthis.setState({\r\n\t// \t\t\tfavContacts: newArray,\r\n\t// \t\t\tisUpdated: false\r\n\t// \t\t})\r\n\t// \t}\r\n\t// }\r\n\r\n\t// // Get recent contact data\r\n\t// getRecentContact() {\r\n\t// \tlet newArray = [];\r\n\t// \tlet data = this.props.contactsData;\r\n\t// \tif (data !== null) {\r\n\t// \t\tfor (let Item of data) {\r\n\t// \t\t\tif (Item.type === 'recently_added') {\r\n\t// \t\t\t\tnewArray.push(Item)\r\n\t// \t\t\t}\r\n\t// \t\t}\r\n\t// \t\tthis.setState({\r\n\t// \t\t\trecentContacts: newArray,\r\n\t// \t\t\tisUpdated: false\r\n\t// \t\t})\r\n\t// \t}\r\n\t// }\r\n\r\n\thandleChange = (event, value) => {\r\n\t\tthis.setState({ value });\r\n\t};\r\n\r\n\tondeleteContact(data) {\r\n\t\tthis.data = data;\r\n\t\tthis.confirmationDialog.current.openDialog();\r\n\t}\r\n\r\n\tdeleteContactPermanent(popupResponse) {\r\n\t\tif (popupResponse) {\r\n\t\t\tthis.props.deleteContact(this.data);\r\n\t\t\tthis.data = \"\"\r\n\t\t}\r\n\t}\r\n\r\n\thandleClickEdit(data) {\r\n\t\tthis.setState({\r\n\t\t\tdata: data,\r\n\t\t\tisUpdated: true\r\n\t\t})\r\n\t}\r\n\r\n\tonCloseDialog = (popupResponse) => {\r\n\t\tthis.setState({\r\n\t\t\tdata: null,\r\n\t\t\tisUpdated: false\r\n\t\t})\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { theme, contactsData, classes } = this.props;\r\n\t\tconst { recentContacts, favContacts, isUpdated, data, message, gridView } = this.state;\r\n\t\treturn (\r\n\t\t\t<div className=\"contact-grid\">\r\n\t\t\t\t<SmallTitleBar title={<IntlMessages id=\"component.contactGrid\" />} />\r\n\t\t\t\t<Box className={`title-contact-block ${classes.searchBarWrap}`} pt={0} bgcolor=\"background.paper\" px={{ xs: '12px', md: 0 }} pb={3} >\r\n\t\t\t\t\t<Container>\r\n\t\t\t\t\t\t<Box textAlign={{ xs: 'center', sm: 'right' }} display={{ xs: 'block', sm: 'flex' }} alignItems=\"center\" justifyContent=\"space-between\">\r\n\t\t\t\t\t\t\t<Button variant=\"outlined\" color=\"default\"><IntlMessages id=\"component.addContact\" /></Button>\r\n\t\t\t\t\t\t\t<Box>\r\n\t\t\t\t\t\t\t\t<FormControl fullWidth >\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\t\tname=\"search\"\r\n\t\t\t\t\t\t\t\t\t\tplaceholder=\"Search Contact\"\r\n\t\t\t\t\t\t\t\t\t\tonChange={(event) => this.setState({ message: event.target.value })}\r\n\t\t\t\t\t\t\t\t\t\tvalue={message}\r\n\t\t\t\t\t\t\t\t\t\tendAdornment={\r\n\t\t\t\t\t\t\t\t\t\t\t<InputAdornment position=\"end\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<SearchIcon />\r\n\t\t\t\t\t\t\t\t\t\t\t</InputAdornment>\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t</Container>\r\n\t\t\t\t</Box>\r\n\r\n\t\t\t\t<Container>\r\n\t\t\t\t\t<Box textAlign={{ xs: 'center', sm: 'right' }} display={{ xs: 'block', sm: 'flex' }} alignItems=\"center\" justifyContent=\"space-between\">\r\n\t\t\t\t\t\t<div className=\"contact-tab-wrap Tab-wrap\">\r\n\t\t\t\t\t\t\t{(isUpdated && data) &&\r\n\t\t\t\t\t\t\t\t<UpdateContact data={data} onCloseDialog={this.onCloseDialog} />\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t<div>\r\n\r\n\t\t\t\t\t\t\t\t<div className=\"contact-grid-wrap\">\r\n\t\t\t\t\t\t\t\t\t<ContactGridItem\r\n\t\t\t\t\t\t\t\t\t\tparentEditMethod={(e) => this.handleClickEdit(e)}\r\n\t\t\t\t\t\t\t\t\t\tparentMethod={(e) => this.ondeleteContact(e)}\r\n\t\t\t\t\t\t\t\t\t\tcontacts={contactsData}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<ConfirmationDialog\r\n\t\t\t\t\t\t\t\tref={this.confirmationDialog}\r\n\t\t\t\t\t\t\t\tonConfirm={(res) => this.deleteContactPermanent(res)}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t</Container>\r\n\t\t\t</div>\r\n\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = ({ ContactReducer }) => {\r\n\tconst { contactsData } = ContactReducer;\r\n\treturn {\r\n\t\tcontactsData\r\n\t};\r\n}\r\nexport default withRouter(connect(mapStateToProps, {\r\n\tdeleteContact,\r\n\tonShowContacts\r\n})(withStyles(styles, { withTheme: true })(ContactGrid)))"],"sourceRoot":""}