{"version":3,"sources":["routes/Tables/Ausgaben/index.js"],"names":["moment","updateLocale","week","dow","carsList","car1","car2","car3","userList","user1","user2","user3","typeList","type1","type2","type3","Ausgaben","props","onChangeReason","event","reasonData","setState","reason","handleChangeDate","date","target","value","handleFromChange","from","selectedData","state","data","filter","element","Date","to","handleToChange","columns","title","field","render","rowData","formate_date","editComponent","now","console","log","className","id","type","defaultValue","InputLabelProps","shrink","onChange","isEditReason","reasonList","find","options","getOptionLabel","option","autoComplete","includeInputInList","renderInput","params","margin","placeholder","lookup","href","link","rowdata","checked","color","handleChange","completed","handleChangeCheckbox","getTime","user","JSON","parse","localStorage","getItem","this","instance_id","userService","showAusgaben","then","res","prevState","forEach","booked","editAusgaben","dateString","split","center","maxWidth","px","xs","lg","pt","mb","container","sm","md","utils","MomentUtils","mr","item","disableToolbar","variant","label","locale","format","name","KeyboardButtonProps","ml","editable","onRowAdd","newData","Promise","resolve","setTimeout","addAusgaben","push","NotificationManager","success","catch","error","message","onRowUpdate","oldData","indexOf","onRowDelete","deleteAusgaben","splice","Component"],"mappings":"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","file":"static/js/8.cc0fa925.chunk.js","sourcesContent":["/**\r\n * Search Table\r\n*/\r\nimport React, { Component } from 'react';\r\nimport MaterialTable from 'material-table';\r\nimport { Grid, Checkbox, TextField, Typography, Container, Box, Switch } from '@material-ui/core';\r\nimport { userService } from '../../../_services';\r\nimport { Link } from 'react-router-dom';\r\n//Components\r\nimport { SmallTitleBar } from 'components/GlobalComponents';\r\nimport IntlMessages from 'util/IntlMessages';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { NotificationManager } from 'react-notifications';\r\n\r\nimport moment from \"moment\";\r\nimport {\r\n\tKeyboardDatePicker,\r\n\tMuiPickersUtilsProvider\r\n} from \"@material-ui/pickers\";\r\n\r\nimport MomentUtils from \"@date-io/moment\";\r\n\r\nmoment.updateLocale(\"en\", {\r\n\tweek: {\r\n\t\tdow: 1\r\n\t}\r\n});\r\nlet carsList = { car1: 'car1', car2: 'car2', car3: 'car3' };\r\nlet userList = { user1: 'user1', user2: 'user2', user3: 'user3' };\r\nlet typeList = { type1: 'type1', type2: 'type2', type3: 'type3' };\r\n\r\nclass Ausgaben extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props)\r\n\t\tthis.state = {\r\n\t\t\tcolumns: [\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: 'Added date', field: 'date', render: rowData => {\r\n\t\t\t\t\t\treturn (<div>\r\n\t\t\t\t\t\t\t{this.formate_date(rowData.date)}\r\n\r\n\t\t\t\t\t\t</div>)\r\n\t\t\t\t\t},\r\n\t\t\t\t\teditComponent: rowData => {\r\n\t\t\t\t\t\tlet now = Date.now();\r\n\t\t\t\t\t\tconsole.log('now', now);\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\tclassName=\"full-width\"\r\n\t\t\t\t\t\t\t\tid=\"datetime-local\"\r\n\t\t\t\t\t\t\t\ttype=\"date\"\r\n\t\t\t\t\t\t\t\tdefaultValue={now}\r\n\t\t\t\t\t\t\t\tInputLabelProps={{\r\n\t\t\t\t\t\t\t\t\tshrink: true,\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tvalue={this.state.date}\r\n\t\t\t\t\t\t\t\tonChange={this.handleChangeDate}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\t{ title: 'Invoice-Nr.', field: 'invoiceNr' },\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: 'Reason', field: 'reason', editComponent: rowData => {\r\n\t\t\t\t\t\tif (rowData.rowData.id) {\r\n\t\t\t\t\t\t\tlet reason = rowData.rowData.reason;\r\n\t\t\t\t\t\t\tif (this.state.isEditReason) {\r\n\t\t\t\t\t\t\t\tlet reasonData = this.state.reasonList.find(element => element.reason == reason);\r\n\t\t\t\t\t\t\t\tthis.setState({ isEditReason: false, reason: reason, reasonData })\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tconsole.log('reasonList', this.state.reasonList);\r\n\t\t\t\t\t\treturn (<Autocomplete\r\n\t\t\t\t\t\t\toptions={this.state.reasonList}\r\n\t\t\t\t\t\t\tgetOptionLabel={(option) => option.reason}\r\n\t\t\t\t\t\t\tvalue={this.state.reasonData}\r\n\t\t\t\t\t\t\tid=\"auto-complete\"\r\n\t\t\t\t\t\t\tautoComplete\r\n\t\t\t\t\t\t\tincludeInputInList\r\n\t\t\t\t\t\t\tonChange={this.onChangeReason}\r\n\t\t\t\t\t\t\trenderInput={(params) => <TextField\r\n\t\t\t\t\t\t\t\tid=\"input-with-icon-textfield\"\r\n\t\t\t\t\t\t\t\t{...params}\r\n\t\t\t\t\t\t\t\tmargin=\"normal\"\r\n\t\t\t\t\t\t\t\tplaceholder=\"Familiendoktor\"\r\n\r\n\t\t\t\t\t\t\t/>}\r\n\t\t\t\t\t\t/>)\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\t{ title: 'Type', field: 'type', lookup: typeList },\r\n\t\t\t\t{ title: 'User', field: 'user', lookup: userList },\r\n\t\t\t\t{ title: 'Car', field: 'car', lookup: carsList },\r\n\t\t\t\t{ title: 'Amount', field: 'amount', type: 'numeric' },\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: 'Link', field: 'link', render: rowData => <div className=\"linkdiv\">\r\n\t\t\t\t\t\t<a  href={rowData.link} target=\"_blank\">{rowData.link}</a>\r\n\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: 'Booked', field: 'booked', render: rowdata => {\r\n\r\n\t\t\t\t\t\treturn (<Checkbox\r\n\t\t\t\t\t\t\tchecked={this.state.checked[rowdata.id]}\r\n\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\tonChange={(event) => this.handleChange(event.target.checked, rowdata)}\r\n\t\t\t\t\t\t/>)\r\n\t\t\t\t\t},\r\n\t\t\t\t\teditComponent: rowdata => {\r\n\t\t\t\t\t\treturn (<Checkbox\r\n\t\t\t\t\t\t\tchecked={this.state.completed}\r\n\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\tonChange={(event) => this.handleChangeCheckbox(event.target.checked, rowdata)}\r\n\t\t\t\t\t\t/>)\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t\treasonList: [\r\n\t\t\t\t{ reason: 'reason1' },\r\n\t\t\t\t{ reason: 'reason2' },\r\n\t\t\t\t{ reason: 'reason3' }\r\n\t\t\t],\r\n\t\t\treasonData: {},\r\n\t\t\tdata: [],\r\n\t\t\tdate: '',\r\n\t\t\tisEditReason: false,\r\n\t\t\tcompleted: false,\r\n\t\t\tchecked: [],\r\n\t\t\treason: '',\r\n\t\t\tfrom: new Date(),\r\n\t\t\tto: new Date(new Date().getTime() + (30 * 24 * 60 * 60 * 1000)),\r\n\t\t\tselectedData : []\r\n\r\n\r\n\t\t};\r\n\r\n\t}\r\n\tonChangeReason = (event, reasonData) => {\r\n\t\tif (reasonData) {\r\n\t\t\tthis.setState({ reason: reasonData.reason, reasonData })\r\n\t\t}\r\n\r\n\t}\r\n\tcomponentWillMount() {\r\n\t\tlet user = JSON.parse(localStorage.getItem('user'));\r\n\t\tthis.instance_id = user.instance_id;\r\n\t\tconsole.log('res', this.instance_id);\r\n\t\tuserService.showAusgaben().then(res => {\r\n          \r\n\t\t\tthis.setState(prevState => {\r\n\t\t\t\tconst data = res;\r\n\t\t\t\treturn { ...prevState, data };\r\n\t\t\t});\r\n\t\t\tlet checked = [];\r\n\t\t\tres.forEach(element => {\r\n\t\t\t\tchecked[element.id] = element.booked;\r\n\t\t\t});\r\n\t\t\tthis.handleFromChange(this.state.from);\r\n          \r\n\t\t})\r\n\r\n\t}\r\n\r\n\thandleChangeDate = (event) => {\r\n\t\tthis.setState({ date: event.target.value });\r\n\t}\r\n\thandleChange(value, data) {\r\n\t\tconsole.log('v alue', value);\r\n\t\tuserService.editAusgaben({ id: data.id, booked: value }).then(res => {\r\n\t\t\tif (res) {\r\n\t\t\t\tthis.setState(prevState => {\r\n\t\t\t\t\tconst checked = [...prevState.checked];\r\n\t\t\t\t\tchecked[data.id] = value;\r\n\t\t\t\t\treturn { ...prevState, checked };\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t})\r\n\r\n\t}\r\n\tformate_date(dateString) {\r\n\t\tlet date;\r\n\t\tif (dateString) {\r\n\t\t\tlet str = dateString.split(\" \");\r\n\t\t\tdate = str[0].split('-');\r\n\t\t\tdate = date[2] + '.' + date[1] + '.' + date[0];\r\n\t\t}\r\n\r\n\t\treturn date;\r\n\t}\r\n\thandleChangeCheckbox(value, data) {\r\n\t\tthis.setState({ completed: value })\r\n\t}\r\n\thandleFromChange = (from) => {\r\n\t   let selectedData = this.state.data.filter(element =>  from <= new Date(element.date) && new Date(element.date) <= this.state.to);\r\n\t   \r\n\t\tthis.setState({ from: from  , selectedData})\r\n\t}\r\n\thandleToChange = (to) => {\r\n\r\n\t\tlet selectedData = this.state.data.filter(element => this.state.from <=  new Date(element.date)  && new Date(element.date) <= to);\r\n\r\n\t\tthis.setState({ to: to , selectedData })\r\n\t}\r\n\trender() {\r\n\r\n\t\treturn (\r\n\t\t\t<div className=\"tables-wrapper search-table-wrap ausgaben\">\r\n\t\t\t\t<SmallTitleBar\r\n\t\t\t\t\ttitle={<IntlMessages id=\"sidebar.ausgaben\" />}\r\n\t\t\t\t\tcenter\r\n\t\t\t\t/>\r\n\t\t\t\t<Container maxWidth=\"lg\">\r\n\t\t\t\t\t<Box px={{ xs: '12px', lg: 0 }} className=\"page-space\">\r\n\t\t\t\t\t\t<Box pt={1} mb={3}>\r\n\t\t\t\t\t\t\t<Grid container sm={12} md={12} lg={12} className=\"datecontainer\">\r\n\t\t\t\t\t\t\t\t<MuiPickersUtilsProvider utils={MomentUtils}>\r\n\t\t\t\t\t\t\t\t\t<Grid mr={3} item sm={4} md={4} lg={4} className=\"justify-around\">\r\n\t\t\t\t\t\t\t\t\t\t<KeyboardDatePicker\r\n\t\t\t\t\t\t\t\t\t\t\tdisableToolbar\r\n\t\t\t\t\t\t\t\t\t\t\tvariant=\"inline\"\r\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"von\"\r\n\t\t\t\t\t\t\t\t\t\t\tlocale=\"ru\"\r\n\t\t\t\t\t\t\t\t\t\t\tformat=\"DD.MM.YYYY\"\r\n\t\t\t\t\t\t\t\t\t\t\tmargin=\"normal\"\r\n\t\t\t\t\t\t\t\t\t\t\tid=\"date-picker-inline\"\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={this.state.from}\r\n\t\t\t\t\t\t\t\t\t\t\tname='from'\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={this.handleFromChange}\r\n\t\t\t\t\t\t\t\t\t\t\tKeyboardButtonProps={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t'aria-label': 'change date',\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t<Grid ml={2} item sm={4} md={4} lg={4} className=\"justify-around\">\r\n\r\n\t\t\t\t\t\t\t\t\t\t<KeyboardDatePicker\r\n\t\t\t\t\t\t\t\t\t\t\tdisableToolbar\r\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"bis\"\r\n\t\t\t\t\t\t\t\t\t\t\tvariant=\"inline\"\r\n\t\t\t\t\t\t\t\t\t\t\tformat=\"DD.MM.YYYY\"\r\n\t\t\t\t\t\t\t\t\t\t\tmargin=\"normal\"\r\n\t\t\t\t\t\t\t\t\t\t\tname='to'\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={this.state.to}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={this.handleToChange}\r\n\t\t\t\t\t\t\t\t\t\t\tKeyboardButtonProps={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t'aria-label': 'change date',\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t</MuiPickersUtilsProvider>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t<MaterialTable\r\n\t\t\t\t\t\t\ttitle={<IntlMessages id=\"sidebar.ausgaben\" />}\r\n\t\t\t\t\t\t\tcolumns={this.state.columns}\r\n\t\t\t\t\t\t\tdata={this.state.selectedData}\r\n\r\n\t\t\t\t\t\t\teditable={{\r\n\t\t\t\t\t\t\t\tonRowAdd: newData =>\r\n\t\t\t\t\t\t\t\t\tnew Promise(resolve => {\r\n\t\t\t\t\t\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\t\t\t\t\t\tresolve();\r\n\t\t\t\t\t\t\t\t\t\t\tconsole.log('newData', newData);\r\n\t\t\t\t\t\t\t\t\t\t\tnewData.date = this.state.date;\r\n\t\t\t\t\t\t\t\t\t\t\tnewData.reason = this.state.reason;\r\n\t\t\t\t\t\t\t\t\t\t\tnewData.booked = this.state.completed;\r\n\t\t\t\t\t\t\t\t\t\t\tconsole.log('this.state', this.state.reason);\r\n\t\t\t\t\t\t\t\t\t\t\tuserService.addAusgaben(newData).then(res => {\r\n\t\t\t\t\t\t\t\t\t\t\t\tconsole.log('res', res);\r\n\t\t\t\t\t\t\t\t\t\t\t\tthis.setState(prevState => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tconst data = [...prevState.data];\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tdata.push(res);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn { ...prevState, data };\r\n\t\t\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t\t\t\tNotificationManager.success(\"Die Daten werden erfolgreich gespeichert.\")\r\n\t\t\t\t\t\t\t\t\t\t\t}).catch(error => {\r\n\t\t\t\t\t\t\t\t\t\t\t\tNotificationManager.error(error.message);\r\n\t\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t\t\tthis.setState({ isEditReason: true })\r\n\r\n\t\t\t\t\t\t\t\t\t\t}, 600);\r\n\t\t\t\t\t\t\t\t\t}),\r\n\t\t\t\t\t\t\t\tonRowUpdate: (newData, oldData) =>\r\n\t\t\t\t\t\t\t\t\tnew Promise(resolve => {\r\n\t\t\t\t\t\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\t\t\t\t\t\tresolve();\r\n\t\t\t\t\t\t\t\t\t\t\tnewData.date = this.state.date;\r\n\t\t\t\t\t\t\t\t\t\t\tnewData.reason = this.state.reason;\r\n\t\t\t\t\t\t\t\t\t\t\tnewData.booked = this.state.completed;\r\n\t\t\t\t\t\t\t\t\t\t\tuserService.editAusgaben(newData).then(res => {\r\n\t\t\t\t\t\t\t\t\t\t\t\tif (res) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tthis.setState(prevState => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst data = [...prevState.data];\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata[data.indexOf(oldData)] = newData;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn { ...prevState, data };\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\tthis.setState({ isEditReason: true })\r\n\t\t\t\t\t\t\t\t\t\t\t\tNotificationManager.success(\"Die Daten werden erfolgreich gespeichert.\")\r\n\t\t\t\t\t\t\t\t\t\t\t}).catch(error => {\r\n\t\t\t\t\t\t\t\t\t\t\t\tNotificationManager.error(error.message);\r\n\t\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t\t}, 600);\r\n\t\t\t\t\t\t\t\t\t}),\r\n\t\t\t\t\t\t\t\tonRowDelete: oldData =>\r\n\t\t\t\t\t\t\t\t\tnew Promise(resolve => {\r\n\t\t\t\t\t\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\t\t\t\t\t\tresolve();\r\n\t\t\t\t\t\t\t\t\t\t\tuserService.deleteAusgaben({ id: oldData.id }).then(res => {\r\n\t\t\t\t\t\t\t\t\t\t\t\tthis.setState(prevState => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tconst data = [...prevState.data];\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tdata.splice(data.indexOf(oldData), 1);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn { ...prevState, data };\r\n\t\t\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t\t}, 600);\r\n\t\t\t\t\t\t\t\t\t}),\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t</Container>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\nexport default Ausgaben;\r\n\r\n\r\n"],"sourceRoot":""}