{"version":3,"sources":["routes/Tables/Medication/index.js"],"names":["ingredientsList","Medication","props","state","columns","title","field","lookup","editComponent","rowData","ordersCount","patientsCount","data","user","JSON","parse","localStorage","getItem","this","instance_id","console","log","userService","showMedications","pagination","then","res","medications","setState","prevState","ingredients","map","ele","className","id","center","maxWidth","px","xs","lg","editable","onRowAdd","newData","Promise","resolve","setTimeout","addMedications","push","onRowUpdate","oldData","editMedications","indexOf","onRowDelete","deleteMedications","splice","Component"],"mappings":"yOAUIA,EAAkB,GAChBC,E,kDACL,WAAYC,GAAQ,IAAD,8BAClB,cAAMA,IACDC,MAAQ,CACZC,QAAS,CACR,CAAEC,MAAO,kBAAmBC,MAAO,kBACnC,CACCD,MAAO,eAAgBC,MAAO,cAAeC,OAAQP,GAEtD,CAAEK,MAAO,aAAcC,MAAO,aAC9B,CACCD,MAAO,oBAAqBC,MAAO,cAAeE,cAAe,SAAAC,GAAO,OAAI,6BAC1EA,EAAQC,eAGX,CACCL,MAAO,sBAAuBC,MAAO,gBAAiBE,cAAe,SAAAC,GAAO,OAAI,6BAC9EA,EAAQE,kBAKZC,KAAM,IArBW,E,iEA2BG,IAAD,OAChBC,EAAOC,KAAKC,MAAMC,aAAaC,QAAQ,SAC3CC,KAAKC,YAAcN,EAAKM,YACxBC,QAAQC,IAAI,MAAOH,KAAKC,aACxBG,IAAYC,gBAAgB,CAAEJ,YAAaD,KAAKC,YAAaK,WAAY,IAAKC,MAAK,SAAAC,GAClFN,QAAQC,IAAI,cAAeK,EAAIC,aAC/B,EAAKC,UAAS,SAAAC,GACb,IAAMjB,EAAOc,EAAIC,YACjB,OAAO,2BAAKE,GAAZ,IAAuBjB,YAExBc,EAAII,YAAYC,KAAI,SAAAC,GACnBhC,EAAgBgC,EAAIF,aAAeE,EAAIF,oB,+BAMhC,IAAD,OAER,OACC,yBAAKG,UAAU,oCACd,kBAAC,IAAD,CACC5B,MAAO,kBAAC,IAAD,CAAc6B,GAAG,uBACxBC,QAAM,IAEP,kBAAC,IAAD,CAAWC,SAAS,MACnB,kBAAC,IAAD,CAAKC,GAAI,CAAEC,GAAI,OAAQC,GAAI,GAAKN,UAAU,cACzC,kBAAC,IAAD,CACC5B,MAAO,kBAAC,IAAD,CAAc6B,GAAG,uBACxB9B,QAASc,KAAKf,MAAMC,QACpBQ,KAAMM,KAAKf,MAAMS,KACjB4B,SAAU,CACTC,SAAU,SAAAC,GAAO,OAChB,IAAIC,SAAQ,SAAAC,GACXC,YAAW,WACVD,IACAxB,QAAQC,IAAI,UAAWqB,GACvBA,EAAQvB,YAAc,EAAKA,YAC3BG,IAAYwB,eAAeJ,GAASjB,MAAK,SAAAC,GACxCN,QAAQC,IAAI,MAAOK,GACnB,EAAKE,UAAS,SAAAC,GACb,IAAMjB,EAAI,YAAOiB,EAAUjB,MAG3B,OAFAA,EAAKmC,KAAKrB,GACVN,QAAQC,IAAI,kBAAmBT,GACxB,2BAAKiB,GAAZ,IAAuBjB,iBAIvB,SAELoC,YAAa,SAACN,EAASO,GAAV,OACZ,IAAIN,SAAQ,SAAAC,GACXC,YAAW,WACVD,IACAxB,QAAQC,IAAI,UAAWqB,EAAQR,IAC/BZ,IAAY4B,gBAAgBR,GAASjB,MAAK,SAAAC,GACrCuB,GACH,EAAKrB,UAAS,SAAAC,GACb,IAAMjB,EAAI,YAAOiB,EAAUjB,MAE3B,OADAA,EAAKA,EAAKuC,QAAQF,IAAYP,EACvB,2BAAKb,GAAZ,IAAuBjB,iBAIxB,SAELwC,YAAa,SAAAH,GAAO,OACnB,IAAIN,SAAQ,SAAAC,GACXC,YAAW,WACVD,IACAxB,QAAQC,IAAI,WAAY4B,EAAQf,IAChCZ,IAAY+B,kBAAkB,CAAEnB,GAAIe,EAAQf,KAAMT,MAAK,SAAAC,GACtDN,QAAQC,IAAI,MAAOK,GACnB,EAAKE,UAAS,SAAAC,GACb,IAAMjB,EAAI,YAAOiB,EAAUjB,MAE3B,OADAA,EAAK0C,OAAO1C,EAAKuC,QAAQF,GAAU,GAC5B,2BAAKpB,GAAZ,IAAuBjB,iBAGvB,mB,GA3GY2C,aAqHVtD","file":"static/js/53.ad2ceb68.chunk.js","sourcesContent":["/**\r\n * Search Table\r\n*/\r\nimport React, { Component } from 'react';\r\nimport MaterialTable from 'material-table';\r\nimport { Container, Box, Switch, FormControl, InputLabel, Select } from '@material-ui/core';\r\nimport { userService } from '../../../_services';\r\n//Components\r\nimport { SmallTitleBar } from 'components/GlobalComponents';\r\nimport IntlMessages from 'util/IntlMessages';\r\nlet ingredientsList = {};\r\nclass Medication extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props)\r\n\t\tthis.state = {\r\n\t\t\tcolumns: [\r\n\t\t\t\t{ title: 'Medication name', field: 'medicationName' },\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: 'Ingredients ', field: 'ingredients', lookup: ingredientsList\r\n\t\t\t\t},\r\n\t\t\t\t{ title: 'Packaging ', field: 'packaging' },\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: 'Relation to order', field: 'ordersCount', editComponent: rowData => <div>\r\n\t\t\t\t\t\t{rowData.ordersCount}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: 'Relation to patient', field: 'patientsCount', editComponent: rowData => <div>\r\n\t\t\t\t\t\t{rowData.patientsCount}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t},\r\n\t\t\t],\r\n\r\n\t\t\tdata: [],\r\n\r\n\t\t};\r\n\r\n\t}\r\n\r\n\tcomponentWillMount() {\r\n\t\tlet user = JSON.parse(localStorage.getItem('user'));\r\n\t\tthis.instance_id = user.instance_id;\r\n\t\tconsole.log('res', this.instance_id);\r\n\t\tuserService.showMedications({ instance_id: this.instance_id, pagination: 1 }).then(res => {\r\n\t\t\tconsole.log('ingredients', res.medications);\r\n\t\t\tthis.setState(prevState => {\r\n\t\t\t\tconst data = res.medications;\r\n\t\t\t\treturn { ...prevState, data };\r\n\t\t\t});\r\n\t\t\tres.ingredients.map(ele => {\r\n\t\t\t\tingredientsList[ele.ingredients] = ele.ingredients;\r\n\t\t\t})\r\n\t\t})\r\n\r\n\t}\r\n\r\n\trender() {\r\n\r\n\t\treturn (\r\n\t\t\t<div className=\"tables-wrapper search-table-wrap\">\r\n\t\t\t\t<SmallTitleBar\r\n\t\t\t\t\ttitle={<IntlMessages id=\"sidebar.medication\" />}\r\n\t\t\t\t\tcenter\r\n\t\t\t\t/>\r\n\t\t\t\t<Container maxWidth=\"lg\">\r\n\t\t\t\t\t<Box px={{ xs: '12px', lg: 0 }} className=\"page-space\">\r\n\t\t\t\t\t\t<MaterialTable\r\n\t\t\t\t\t\t\ttitle={<IntlMessages id=\"sidebar.medication\" />}\r\n\t\t\t\t\t\t\tcolumns={this.state.columns}\r\n\t\t\t\t\t\t\tdata={this.state.data}\r\n\t\t\t\t\t\t\teditable={{\r\n\t\t\t\t\t\t\t\tonRowAdd: newData =>\r\n\t\t\t\t\t\t\t\t\tnew Promise(resolve => {\r\n\t\t\t\t\t\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\t\t\t\t\t\tresolve();\r\n\t\t\t\t\t\t\t\t\t\t\tconsole.log('newData', newData);\r\n\t\t\t\t\t\t\t\t\t\t\tnewData.instance_id = this.instance_id;\r\n\t\t\t\t\t\t\t\t\t\t\tuserService.addMedications(newData).then(res => {\r\n\t\t\t\t\t\t\t\t\t\t\t\tconsole.log('res', res);\r\n\t\t\t\t\t\t\t\t\t\t\t\tthis.setState(prevState => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tconst data = [...prevState.data];\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tdata.push(res);\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log('ingredients-res', data);\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn { ...prevState, data };\r\n\t\t\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t\t\t\t}, 600);\r\n\t\t\t\t\t\t\t\t\t}),\r\n\t\t\t\t\t\t\t\tonRowUpdate: (newData, oldData) =>\r\n\t\t\t\t\t\t\t\t\tnew Promise(resolve => {\r\n\t\t\t\t\t\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\t\t\t\t\t\tresolve();\r\n\t\t\t\t\t\t\t\t\t\t\tconsole.log('newdata', newData.id);\r\n\t\t\t\t\t\t\t\t\t\t\tuserService.editMedications(newData).then(res => {\r\n\t\t\t\t\t\t\t\t\t\t\t\tif (oldData) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tthis.setState(prevState => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst data = [...prevState.data];\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata[data.indexOf(oldData)] = newData;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn { ...prevState, data };\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t\t}, 600);\r\n\t\t\t\t\t\t\t\t\t}),\r\n\t\t\t\t\t\t\t\tonRowDelete: oldData =>\r\n\t\t\t\t\t\t\t\t\tnew Promise(resolve => {\r\n\t\t\t\t\t\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\t\t\t\t\t\tresolve();\r\n\t\t\t\t\t\t\t\t\t\t\tconsole.log(';oldData', oldData.id);\r\n\t\t\t\t\t\t\t\t\t\t\tuserService.deleteMedications({ id: oldData.id }).then(res => {\r\n\t\t\t\t\t\t\t\t\t\t\t\tconsole.log('res', res);\r\n\t\t\t\t\t\t\t\t\t\t\t\tthis.setState(prevState => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tconst data = [...prevState.data];\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tdata.splice(data.indexOf(oldData), 1);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn { ...prevState, data };\r\n\t\t\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t\t}, 600);\r\n\t\t\t\t\t\t\t\t\t}),\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t</Container>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\nexport default Medication;\r\n\r\n\r\n"],"sourceRoot":""}