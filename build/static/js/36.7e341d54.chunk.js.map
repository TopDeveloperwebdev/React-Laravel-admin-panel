{"version":3,"sources":["../node_modules/@material-ui/icons/FilterList.js","routes/Tables/manageOrders/index.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","_react","_default","createElement","d","descendingComparator","a","b","orderBy","headCells","id","disablePadding","label","EnhancedTableHead","props","classes","onSelectAllClick","order","numSelected","rowCount","onRequestSort","padding","indeterminate","checked","onChange","inputProps","map","headCell","key","align","numeric","sortDirection","active","direction","onClick","property","event","className","visuallyHidden","useToolbarStyles","makeStyles","theme","root","paddingLeft","spacing","paddingRight","highlight","palette","type","color","secondary","main","backgroundColor","lighten","light","text","primary","dark","title","flex","EnhancedTableToolbar","clsx","variant","component","autoFocus","fontSize","mr","aria-label","useStyles","width","paper","marginBottom","table","minWidth","border","clip","height","margin","overflow","position","top","EnhancedTable","React","useState","setOrder","setOrderBy","selected","setSelected","page","setPage","dense","setDense","rowsPerPage","setRowsPerPage","rows","setRows","useEffect","user","JSON","parse","localStorage","getItem","instance_id","user_id","userService","showOrders","pagination","then","res","length","orders","emptyRows","Math","min","center","maxWidth","px","xs","lg","aria-labelledby","size","target","newSelecteds","n","name","array","comparator","stabilizedThis","el","index","sort","stableSort","getComparator","slice","row","isItemSelected","indexOf","labelId","hover","selectedIndex","newSelected","concat","handleClick","role","aria-checked","tabIndex","scope","to","orderId","orderMedications","ele","pharmacy","doctor","patient","date","style","colSpan","rowsPerPageOptions","count","onChangePage","newPage","onChangeRowsPerPage","parseInt","control"],"mappings":"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","file":"static/js/36.7e341d54.chunk.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M10 18h4v-2h-4v2zM3 6v2h18V6H3zm3 7h12v-2H6v2z\"\n}), 'FilterList');\n\nexports.default = _default;","import React, { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport FilterListIcon from '@material-ui/icons/FilterList';\r\nimport { SmallTitleBar } from 'components/GlobalComponents';\r\nimport IntlMessages from 'util/IntlMessages';\r\nimport { Container, Box, Button } from '@material-ui/core';\r\nimport { userService } from '../../../_services';\r\nimport { Link } from 'react-router-dom';\r\n// let rows = [\r\n// \t{id : '', orderMedications: 'Cupcake', pharmacy: '', doctor: '', patient: '', date: '' },\r\n// \t{id : '', orderMedications: 'Cupcake', pharmacy: '', doctor: '', patient: '', date: '' },,\r\n// \t{id : '', orderMedications: 'Cupcake', pharmacy: '', doctor: '', patient: '', date: '' },,\r\n// \t{id : '', orderMedications: 'Cupcake', pharmacy: '', doctor: '', patient: '', date: '' },\r\n\r\n// ];\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n\tif (b[orderBy] < a[orderBy]) {\r\n\t\treturn -1;\r\n\t}\r\n\tif (b[orderBy] > a[orderBy]) {\r\n\t\treturn 1;\r\n\t}\r\n\treturn 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n\treturn order === 'desc'\r\n\t\t? (a, b) => descendingComparator(a, b, orderBy)\r\n\t\t: (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n\tconst stabilizedThis = array.map((el, index) => [el, index]);\r\n\tstabilizedThis.sort((a, b) => {\r\n\t\tconst order = comparator(a[0], b[0]);\r\n\t\tif (order !== 0) return order;\r\n\t\treturn a[1] - b[1];\r\n\t});\r\n\treturn stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n\t{ id: 'orderId', disablePadding: true, label: 'Order ID' },\r\n\t{ id: 'orderMedications', disablePadding: false, label: 'Medications' },\r\n\t{ id: 'pharmacy', disablePadding: false, label: 'Pharmacy' },\r\n\t{ id: 'doctor', disablePadding: false, label: 'Doctor' },\r\n\t{ id: 'patient', disablePadding: false, label: 'Patient' },\r\n\t{ id: 'date', disablePadding: false, label: 'Due Date' },\t\r\n\t{ id: 'status', disablePadding: false, label: 'Status' },\r\n];\r\n\r\nfunction EnhancedTableHead(props) {\r\n\tconst { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\r\n\tconst createSortHandler = (property) => (event) => {\r\n\t\tonRequestSort(event, property);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<TableHead>\r\n\t\t\t<TableRow>\r\n\t\t\t\t<TableCell padding=\"checkbox\">\r\n\t\t\t\t\t<Checkbox\r\n\t\t\t\t\t\tindeterminate={numSelected > 0 && numSelected < rowCount}\r\n\t\t\t\t\t\tchecked={rowCount > 0 && numSelected === rowCount}\r\n\t\t\t\t\t\tonChange={onSelectAllClick}\r\n\t\t\t\t\t\tinputProps={{ 'aria-label': 'select all desserts' }}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</TableCell>\r\n\t\t\t\t{headCells.map((headCell) => (\r\n\t\t\t\t\t<TableCell\r\n\t\t\t\t\t\tkey={headCell.id}\r\n\t\t\t\t\t\talign={headCell.numeric ? 'right' : 'left'}\r\n\t\t\t\t\t\tpadding={headCell.disablePadding ? 'none' : 'default'}\r\n\t\t\t\t\t\tsortDirection={orderBy === headCell.id ? order : false}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<TableSortLabel\r\n\t\t\t\t\t\t\tactive={orderBy === headCell.id}\r\n\t\t\t\t\t\t\tdirection={orderBy === headCell.id ? order : 'asc'}\r\n\t\t\t\t\t\t\tonClick={createSortHandler(headCell.id)}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{headCell.label}\r\n\t\t\t\t\t\t\t{orderBy === headCell.id ? (\r\n\t\t\t\t\t\t\t\t<span className={classes.visuallyHidden}>\r\n\t\t\t\t\t\t\t\t\t{order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t) : null}\r\n\t\t\t\t\t\t</TableSortLabel>\r\n\t\t\t\t\t</TableCell>\r\n\t\t\t\t))}\r\n\t\t\t</TableRow>\r\n\t\t</TableHead>\r\n\t);\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n\tclasses: PropTypes.object.isRequired,\r\n\tnumSelected: PropTypes.number.isRequired,\r\n\tonRequestSort: PropTypes.func.isRequired,\r\n\tonSelectAllClick: PropTypes.func.isRequired,\r\n\torder: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n\torderBy: PropTypes.string.isRequired,\r\n\trowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useToolbarStyles = makeStyles((theme) => ({\r\n\troot: {\r\n\t\tpaddingLeft: theme.spacing(2),\r\n\t\tpaddingRight: theme.spacing(1),\r\n\t},\r\n\thighlight:\r\n\t\ttheme.palette.type === 'light'\r\n\t\t\t? {\r\n\t\t\t\tcolor: theme.palette.secondary.main,\r\n\t\t\t\tbackgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n\t\t\t}\r\n\t\t\t: {\r\n\t\t\t\tcolor: theme.palette.text.primary,\r\n\t\t\t\tbackgroundColor: theme.palette.secondary.dark,\r\n\t\t\t},\r\n\ttitle: {\r\n\t\tflex: '1 1 100%',\r\n\t},\r\n}));\r\n\r\nconst EnhancedTableToolbar = (props) => {\r\n\tconst classes = useToolbarStyles();\r\n\tconst { numSelected } = props;\r\n\r\n\treturn (\r\n\t\t<Toolbar\r\n\t\t\tclassName={clsx(classes.root, {\r\n\t\t\t\t[classes.highlight]: numSelected > 0,\r\n\t\t\t})}\r\n\t\t>\r\n\t\t\t{numSelected > 0 ? (\r\n\t\t\t\t<Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\" component=\"div\">\r\n\t\t\t\t\t{numSelected} selected\r\n\t\t\t\t</Typography>\r\n\t\t\t) : (\r\n\t\t\t\t\t<Typography className={classes.title} variant=\"h6\" id=\"tableTitle\" component=\"div\">\r\n\t\t\t\t\t\tNutrition\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t)}\r\n\r\n\t\t\t{numSelected > 0 ? (\r\n\t\t\t\t<Tooltip title=\"Delete\">\r\n\t\t\t\t\t<Button variant=\"outlined\" className=\"primary-bg-btn\" color=\"primary\" autoFocus >\r\n\t\t\t\t\t\t<Box component=\"span\" fontSize=\"18px\" mr={1} className=\"material-icons\">send</Box>\r\n\t\t\t\t\t\t\t\tSend\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t</Tooltip>\r\n\t\t\t) : (\r\n\t\t\t\t\t<Tooltip title=\"Filter list\">\r\n\t\t\t\t\t\t<IconButton aria-label=\"filter list\">\r\n\t\t\t\t\t\t\t<FilterListIcon />\r\n\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t</Tooltip>\r\n\t\t\t\t)}\r\n\t\t</Toolbar>\r\n\t);\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n\tnumSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\troot: {\r\n\t\twidth: '100%',\r\n\t},\r\n\tpaper: {\r\n\t\twidth: '100%',\r\n\t\tmarginBottom: theme.spacing(2),\r\n\t},\r\n\ttable: {\r\n\t\tminWidth: 750,\r\n\t},\r\n\tvisuallyHidden: {\r\n\t\tborder: 0,\r\n\t\tclip: 'rect(0 0 0 0)',\r\n\t\theight: 1,\r\n\t\tmargin: -1,\r\n\t\toverflow: 'hidden',\r\n\t\tpadding: 0,\r\n\t\tposition: 'absolute',\r\n\t\ttop: 20,\r\n\t\twidth: 1,\r\n\t},\r\n}));\r\n\r\nexport default function EnhancedTable() {\r\n\tconst classes = useStyles();\r\n\tconst [order, setOrder] = React.useState('asc');\r\n\tconst [orderBy, setOrderBy] = React.useState('calories');\r\n\tconst [selected, setSelected] = React.useState([]);\r\n\tconst [page, setPage] = React.useState(0);\r\n\tconst [dense, setDense] = React.useState(false);\r\n\tconst [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\tconst [rows, setRows] = React.useState([]);\r\n\r\n\tconst handleRequestSort = (event, property) => {\r\n\t\tconst isAsc = orderBy === property && order === 'asc';\r\n\t\tsetOrder(isAsc ? 'desc' : 'asc');\r\n\t\tsetOrderBy(property);\r\n\t};\r\n\tuseEffect(() => {\r\n\t\tlet user = JSON.parse(localStorage.getItem('user'));\r\n\t\tlet instance_id = user.instance_id;\r\n\t\tlet user_id = user.id;\r\n\r\n\t\tuserService.showOrders({ instance_id: instance_id, pagination: 1, user_id: user_id }).then(res => {\r\n\r\n\r\n\t\t\tif (!rows.length && res.orders.length) setRows(res.orders)\r\n\r\n\t\t})\r\n\r\n\t});\r\n\tconst handleSelectAllClick = (event) => {\r\n\t\tif (event.target.checked) {\r\n\t\t\tconst newSelecteds = rows.map((n) => n.name);\r\n\t\t\tsetSelected(newSelecteds);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tsetSelected([]);\r\n\t};\r\n\r\n\tconst handleClick = (event, name) => {\r\n\t\tconst selectedIndex = selected.indexOf(name);\r\n\t\tlet newSelected = [];\r\n\r\n\t\tif (selectedIndex === -1) {\r\n\t\t\tnewSelected = newSelected.concat(selected, name);\r\n\t\t} else if (selectedIndex === 0) {\r\n\t\t\tnewSelected = newSelected.concat(selected.slice(1));\r\n\t\t} else if (selectedIndex === selected.length - 1) {\r\n\t\t\tnewSelected = newSelected.concat(selected.slice(0, -1));\r\n\t\t} else if (selectedIndex > 0) {\r\n\t\t\tnewSelected = newSelected.concat(\r\n\t\t\t\tselected.slice(0, selectedIndex),\r\n\t\t\t\tselected.slice(selectedIndex + 1),\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\tsetSelected(newSelected);\r\n\t};\r\n\r\n\tconst handleChangePage = (event, newPage) => {\r\n\t\tsetPage(newPage);\r\n\t};\r\n\r\n\tconst handleChangeRowsPerPage = (event) => {\r\n\t\tsetRowsPerPage(parseInt(event.target.value, 10));\r\n\t\tsetPage(0);\r\n\t};\r\n\r\n\tconst handleChangeDense = (event) => {\r\n\t\tsetDense(event.target.checked);\r\n\t};\r\n\r\n\tconst isSelected = (name) => selected.indexOf(name) !== -1;\r\n\r\n\tconst emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n\r\n\treturn (\r\n\t\t<div className=\"tables-wrapper search-table-wrap\">\r\n\t\t\t<SmallTitleBar\r\n\t\t\t\ttitle={<IntlMessages id=\"sidebar.order\" />}\r\n\t\t\t\tcenter\r\n\t\t\t/>\r\n\t\t\t<Container maxWidth=\"lg\" >\r\n\t\t\t\t<Box px={{ xs: '12px', lg: 0 }} className=\"page-space\">\r\n\t\t\t\t\t<div className={classes.root}>\r\n\t\t\t\t\t\t<Paper className={classes.paper}>\r\n\t\t\t\t\t\t\t<EnhancedTableToolbar numSelected={selected.length} />\r\n\t\t\t\t\t\t\t<TableContainer>\r\n\t\t\t\t\t\t\t\t<Table\r\n\t\t\t\t\t\t\t\t\tclassName={classes.table}\r\n\t\t\t\t\t\t\t\t\taria-labelledby=\"tableTitle\"\r\n\t\t\t\t\t\t\t\t\tsize={dense ? 'small' : 'medium'}\r\n\t\t\t\t\t\t\t\t\taria-label=\"enhanced table\"\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<EnhancedTableHead\r\n\t\t\t\t\t\t\t\t\t\tclasses={classes}\r\n\t\t\t\t\t\t\t\t\t\tnumSelected={selected.length}\r\n\t\t\t\t\t\t\t\t\t\torder={order}\r\n\t\t\t\t\t\t\t\t\t\torderBy={orderBy}\r\n\t\t\t\t\t\t\t\t\t\tonSelectAllClick={handleSelectAllClick}\r\n\t\t\t\t\t\t\t\t\t\tonRequestSort={handleRequestSort}\r\n\t\t\t\t\t\t\t\t\t\trowCount={rows.length}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<TableBody>\r\n\t\t\t\t\t\t\t\t\t\t{stableSort(rows, getComparator(order, orderBy))\r\n\t\t\t\t\t\t\t\t\t\t\t.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n\t\t\t\t\t\t\t\t\t\t\t.map((row, index) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\tconst isItemSelected = isSelected(row.id);\r\n\t\t\t\t\t\t\t\t\t\t\t\tconst labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<TableRow\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thover\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={(event) => handleClick(event, row.id)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\trole=\"checkbox\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\taria-checked={isItemSelected}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttabIndex={-1}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={index}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tselected={isItemSelected}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<TableCell padding=\"checkbox\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Checkbox\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tchecked={isItemSelected}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tinputProps={{ 'aria-labelledby': labelId }}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Link to={`/order-detail/${row.orderId}`}>{row.orderId}</Link>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<TableCell align=\"right\">{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trow.orderMedications && JSON.parse(row.orderMedications).map((ele, index) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn (<div key={index}>{ele}</div>)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}</TableCell>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<TableCell align=\"right\">{row.pharmacy}</TableCell>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<TableCell align=\"right\">{row.doctor}</TableCell>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<TableCell align=\"right\">{row.patient}</TableCell>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<TableCell align=\"right\">{row.date}</TableCell>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<TableCell align=\"right\">Not sent</TableCell>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</TableRow>\r\n\t\t\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t\t{emptyRows > 0 && (\r\n\t\t\t\t\t\t\t\t\t\t\t<TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<TableCell colSpan={6} />\r\n\t\t\t\t\t\t\t\t\t\t\t</TableRow>\r\n\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t</TableBody>\r\n\t\t\t\t\t\t\t\t</Table>\r\n\t\t\t\t\t\t\t</TableContainer>\r\n\t\t\t\t\t\t\t<TablePagination\r\n\t\t\t\t\t\t\t\trowsPerPageOptions={[5, 10, 25]}\r\n\t\t\t\t\t\t\t\tcomponent=\"div\"\r\n\t\t\t\t\t\t\t\tcount={rows.length}\r\n\t\t\t\t\t\t\t\trowsPerPage={rowsPerPage}\r\n\t\t\t\t\t\t\t\tpage={page}\r\n\t\t\t\t\t\t\t\tonChangePage={handleChangePage}\r\n\t\t\t\t\t\t\t\tonChangeRowsPerPage={handleChangeRowsPerPage}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Paper>\r\n\t\t\t\t\t\t<FormControlLabel\r\n\t\t\t\t\t\t\tcontrol={<Switch checked={dense} onChange={handleChangeDense} />}\r\n\t\t\t\t\t\t\tlabel=\"Dense padding\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Box>\r\n\t\t\t</Container>\r\n\t\t</div>\r\n\t);\r\n}\r\n"],"sourceRoot":""}