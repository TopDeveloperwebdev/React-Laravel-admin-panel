{"version":3,"sources":["routes/Tables/Orders/index.js"],"names":["Orders","props","onChange","event","setState","selectedMedications","target","value","handleChangePatients","patient_id","patient","state","patients","filter","a","id","pharmacy","doctor","familyDoctor","handleChangeNote","note","handleChangeDate","date","columns","title","field","render","rowData","to","orderId","editComponent","filtering","JSON","parse","orderMedications","map","index","key","console","log","isEditMedications","data","medications","handleChangeIdToName","labelId","className","res","firstName","customFilterAndSearch","term","patientName","toLowerCase","indexOf","style","marginBottom","placeholder","InputProps","readOnly","formate_date","now","Date","type","defaultValue","InputLabelProps","shrink","label","multiline","rows","variant","rowdata","checked","color","handleChange","completed","handleChangeCheckbox","lookup","1","0","userService","editOrders","status","then","prevState","this","dateString","split","length","lastName","defaultUrl","user","localStorage","getItem","instance_id","user_id","showOrders","pagination","ele","medicationName","orders","forEach","element","EditableData","onRowAdd","newData","Promise","resolve","stringify","addOrders","push","NotificationManager","success","catch","error","message","warning","onRowDelete","oldData","setTimeout","deleteOrders","splice","center","maxWidth","px","xs","lg","options","search","editable","Component"],"mappings":"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","file":"static/js/66.06be8a59.chunk.js","sourcesContent":["/**\r\n * Search Table\r\n*/\r\nimport React, { Component } from 'react';\r\nimport MaterialTable from 'material-table';\r\nimport { Checkbox, Box, Grid, Button, Switch, Container, InputLabel, FormHelperText, NativeSelect, TextField, FormControl, Select, MenuItem } from '@material-ui/core';\r\nimport { userService } from '../../../_services';\r\nimport { NotificationManager } from 'react-notifications';\r\n//Components\r\nimport { SmallTitleBar } from 'components/GlobalComponents';\r\nimport IntlMessages from 'util/IntlMessages';\r\nimport { MultiSelect } from '@progress/kendo-react-dropdowns';\r\nimport { Link } from 'react-router-dom';\r\n\r\nlet statusList = { YES: \"YES\", NO: \"NO\" };\r\nclass Orders extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props)\r\n\t\tthis.state = {\r\n\t\t\tcolumns: [\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: 'Bestell-Nr.', field: 'orderId', render: rowData => <div>\r\n\t\t\t\t\t\t<Link to={`/order-detail/${rowData.orderId}`} target=\"_blank\">{rowData.orderId}</Link>\r\n\r\n\t\t\t\t\t</div>,\r\n\t\t\t\t\teditComponent: rowData => <div>\r\n\t\t\t\t\t\t{rowData.id}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t, filtering: false\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\r\n\t\t\t\t\ttitle: 'Medikamente*', field: 'orderMedications', render: rowData => {\r\n\t\t\t\t\t\tlet selectedMedications = JSON.parse(rowData.orderMedications);\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tselectedMedications.map((value, index) => {\r\n\t\t\t\t\t\t\t\t\t\treturn (<div key={index}>{value}</div>)\r\n\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t)\r\n\r\n\t\t\t\t\t},\r\n\t\t\t\t\teditComponent: rowData => {\r\n\t\t\t\t\t\tif (rowData.rowData.id) {\r\n\t\t\t\t\t\t\tconsole.log('rowData', rowData);\r\n\t\t\t\t\t\t\tlet selectedMedications = JSON.parse(rowData.rowData.orderMedications);\r\n\t\t\t\t\t\t\tif (!selectedMedications) {\r\n\t\t\t\t\t\t\t\tselectedMedications = [];\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif (this.state.isEditMedications) {\r\n\t\t\t\t\t\t\t\tthis.setState({ selectedMedications: selectedMedications, isEditMedications: false })\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<MultiSelect\r\n\t\t\t\t\t\t\t\tdata={this.state.medications}\r\n\t\t\t\t\t\t\t\tonChange={this.onChange}\r\n\t\t\t\t\t\t\t\tvalue={this.state.selectedMedications}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t)\r\n\r\n\t\t\t\t\t},\r\n\t\t\t\t\tfiltering: false\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: 'Patient*', field: 'patient', render: rowData => {\r\n\t\t\t\t\t\treturn (<div>\r\n\t\t\t\t\t\t\t{this.handleChangeIdToName(rowData.patient)}\r\n\t\t\t\t\t\t</div>)\r\n\t\t\t\t\t},\r\n\r\n\t\t\t\t\teditComponent: rowData => {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\tlabelId=\"demo-simple-select-label\"\r\n\t\t\t\t\t\t\t\tid=\"demo-simple-select\"\r\n\t\t\t\t\t\t\t\tclassName=\"full-width\"\r\n\t\t\t\t\t\t\t\tvalue={this.state.patient}\r\n\t\t\t\t\t\t\t\tonChange={this.handleChangePatients}\r\n\t\t\t\t\t\t\t>{\r\n\t\t\t\t\t\t\t\t\tthis.state.patients.map((res, index) => {\r\n\t\t\t\t\t\t\t\t\t\treturn (<MenuItem key={index} value={res.id}>{res.firstName}</MenuItem>)\r\n\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t</Select>)\r\n\t\t\t\t\t},\r\n\t\t\t\t\tcustomFilterAndSearch: (term, rowData) => {\r\n\t\t\t\t\t\tlet patientName = this.handleChangeIdToName(rowData.patient);\r\n\t\t\t\t\t\tpatientName = patientName.toLowerCase();\r\n\t\t\t\t\t\treturn patientName.indexOf(term.toLowerCase()) > -1;\r\n\t\t\t\t\t},\r\n\t\t\t\t\tfiltering: false\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: 'Apotheke*', field: 'pharmacy', render: rowData => {\r\n\t\t\t\t\t\treturn (<div>\r\n\t\t\t\t\t\t\t{rowData.pharmacy}\r\n\t\t\t\t\t\t</div>)\r\n\t\t\t\t\t},\r\n\t\t\t\t\teditComponent: rowData => {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\tid=\"pharmacy\"\r\n\t\t\t\t\t\t\t\tstyle={{ marginBottom: 8 }}\r\n\t\t\t\t\t\t\t\tplaceholder=\"pharmacy\"\r\n\t\t\t\t\t\t\t\tvalue={this.state.pharmacy}\r\n\t\t\t\t\t\t\t\tInputProps={{\r\n\t\t\t\t\t\t\t\t\treadOnly: true,\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>)\r\n\t\t\t\t\t},\r\n\t\t\t\t\tfiltering: false\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: 'Hausarzt*', field: 'doctor', render: rowData => {\r\n\t\t\t\t\t\treturn (<div>\r\n\t\t\t\t\t\t\t{rowData.doctor}\r\n\t\t\t\t\t\t</div>)\r\n\t\t\t\t\t},\r\n\t\t\t\t\teditComponent: rowData => {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\tid=\"doctor\"\r\n\t\t\t\t\t\t\t\tstyle={{ marginBottom: 8 }}\r\n\t\t\t\t\t\t\t\tplaceholder=\"doctor\"\r\n\t\t\t\t\t\t\t\tvalue={this.state.doctor}\r\n\t\t\t\t\t\t\t\tInputProps={{\r\n\t\t\t\t\t\t\t\t\treadOnly: true,\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>)\r\n\t\t\t\t\t},\r\n\t\t\t\t\tfiltering: false\r\n\t\t\t\t},\r\n\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: 'Fällig*', field: 'date', render: rowData => {\r\n\t\t\t\t\t\treturn (<div>\r\n\t\t\t\t\t\t\t{this.formate_date(rowData.date)}\r\n\r\n\t\t\t\t\t\t</div>)\r\n\t\t\t\t\t},\r\n\t\t\t\t\teditComponent: rowData => {\r\n\r\n\t\t\t\t\t\tlet now = Date.now();\r\n\t\t\t\t\t\tconsole.log('now', now);\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\tclassName=\"full-width\"\r\n\t\t\t\t\t\t\t\tid=\"datetime-local\"\r\n\t\t\t\t\t\t\t\ttype=\"date\"\r\n\t\t\t\t\t\t\t\tdefaultValue={now}\r\n\t\t\t\t\t\t\t\tInputLabelProps={{\r\n\t\t\t\t\t\t\t\t\tshrink: true,\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tvalue={this.state.date}\r\n\t\t\t\t\t\t\t\tonChange={this.handleChangeDate}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t},\r\n\t\t\t\t\tfiltering: false\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: 'Notiz', field: 'note', render: rowData => {\r\n\t\t\t\t\t\treturn (<div>\r\n\t\t\t\t\t\t\t{rowData.note}\r\n\t\t\t\t\t\t</div>)\r\n\t\t\t\t\t},\r\n\t\t\t\t\teditComponent: rowData => {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\tclassName=\"full-width\"\r\n\t\t\t\t\t\t\t\tid=\"outlined-multiline-static\"\r\n\t\t\t\t\t\t\t\tlabel=\"Add Note\"\r\n\t\t\t\t\t\t\t\tmultiline\r\n\t\t\t\t\t\t\t\trows={4}\r\n\t\t\t\t\t\t\t\tdefaultValue=\"Default Value\"\r\n\t\t\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\t\t\tvalue={this.state.note}\r\n\t\t\t\t\t\t\t\tonChange={this.handleChangeNote}\r\n\t\t\t\t\t\t\t/>)\r\n\t\t\t\t\t},\r\n\t\t\t\t\tfiltering: false\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: 'Geliefert (JA, NEIN)', field: 'status', render: rowdata => {\r\n\r\n\t\t\t\t\t\treturn (<Checkbox\r\n\t\t\t\t\t\t\tchecked={this.state.checked[rowdata.id]}\r\n\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\tonChange={(event) => this.handleChange(event.target.checked, rowdata)}\r\n\t\t\t\t\t\t/>)\r\n\t\t\t\t\t},\r\n\t\t\t\t\teditComponent: rowdata => {\r\n\t\t\t\t\t\treturn (<Checkbox\r\n\t\t\t\t\t\t\tchecked={this.state.completed}\r\n\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\tonChange={(event) => this.handleChangeCheckbox(event.target.checked, rowdata)}\r\n\t\t\t\t\t\t/>)\r\n\t\t\t\t\t},\r\n\t\t\t\t\tlookup: { 1: 'JA', 0: 'NEIN' },\r\n\t\t\t\t}\r\n\t\t\t],\r\n\r\n\t\t\tpharmacy: '',\r\n\t\t\tpatient: '',\r\n\t\t\tdoctor: '',\r\n\t\t\tnote: '',\r\n\t\t\tdata: [],\r\n\t\t\tselectedMedications: [],\r\n\t\t\tmedications: [],\r\n\t\t\tisEditMedications: true,\r\n\t\t\tpatients: [],\r\n\t\t\tcompleted: false,\r\n\t\t\tchecked: [],\r\n\t\t\tdate : ''\r\n\t\t};\r\n\r\n\t}\r\n\thandleChange(value, data) {\r\n\t\tconsole.log('v alue', value);\r\n\t\tuserService.editOrders({ id: data.id, status: value }).then(res => {\r\n\t\t\tif (res) {\r\n\t\t\t\tthis.setState(prevState => {\r\n\t\t\t\t\tconst checked = [...prevState.checked];\r\n\t\t\t\t\tchecked[data.id] = value;\r\n\t\t\t\t\treturn { ...prevState, checked };\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t}\r\n\thandleChangeCheckbox(value, data) {\r\n\t\tthis.setState({ completed: value })\r\n\t}\r\n\r\n\tonChange = (event) => {\r\n\t\tthis.setState({\r\n\t\t\tselectedMedications: [...event.target.value]\r\n\t\t});\r\n\t}\r\n\tformate_date(dateString) {\r\n\t\tlet date;\r\n\t\tif (dateString) {\r\n\t\t\tlet str = dateString.split(\" \");\r\n\t\t\tdate = str[0].split('-');\r\n\t\t\tdate = date[2] + '.' + date[1] + '.' + date[0];\r\n\t\t}\r\n\r\n\t\treturn date;\r\n\t}\r\n\thandleChangeIdToName(id) {\r\n\t\tlet patient = this.state.patients.filter((a) => a.id == id);\r\n\t\tlet patientName = '';\r\n\t\tif (patient.length) patientName = patient[0].firstName + ' ' + patient[0].lastName;\r\n\t\treturn patientName;\r\n\t}\r\n\r\n\thandleChangePatients = (event) => {\r\n\t\tlet patient_id = event.target.value;\r\n\t\tlet patient = this.state.patients.filter((a) => a.id == patient_id);\r\n\t\tlet pharmacy = patient[0].pharmacy;\r\n\t\tlet doctor = patient[0].familyDoctor;\r\n\t\tthis.setState({ patient: event.target.value, pharmacy: pharmacy, doctor: doctor });\r\n\r\n\r\n\t}\r\n\thandleChangeNote = (event) => {\r\n\t\tthis.setState({ note: event.target.value });\r\n\t}\r\n\thandleChangeDate = (event) => {\r\n\t\tthis.setState({ date: event.target.value });\r\n\t}\r\n\r\n\r\n\tcomponentWillMount() {\r\n\t\tthis.defaultUrl = \"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcSTbZrzTIuXAe01k5wgrhWGzPRPRliQygmBCA&usqp=CAU\";\r\n\t\tlet user = JSON.parse(localStorage.getItem('user'));\r\n\t\tthis.instance_id = user.instance_id;\r\n\t\tthis.user_id = user.id;\r\n\r\n\r\n\t\tconsole.log('res-1', this.user_id);\r\n\t\tuserService.showOrders({ instance_id: this.instance_id, pagination: 1 }).then(res => {\r\n\t\t\tlet medications = res.medications.map(ele => {\r\n\t\t\t\treturn ele.medicationName;\r\n\t\t\t});\r\n\t\t\tlet patients = res.patients;\r\n\r\n\t\t\tconsole.log('res', res.orders);\r\n\r\n\t\t\tlet checked = [];\r\n\t\t\tres.orders.forEach(element => {\r\n\t\t\t\tchecked[element.id] = element.status;\r\n\t\t\t});\r\n\r\n\r\n\t\t\tthis.setState({\r\n\t\t\t\tmedications, medications,\r\n\t\t\t\tdata: res.orders,\r\n\t\t\t\tpatients: patients,\r\n\t\t\t\tchecked: checked\r\n\t\t\t})\r\n\t\t})\r\n\r\n\t}\r\n\r\n\trender() {\r\n\t\tlet EditableData = this.instance_id ? {\r\n\t\t\tonRowAdd: newData =>\r\n\t\t\t\tnew Promise(resolve => {\r\n\t\t\t\t\tresolve();\r\n\r\n\t\t\t\t\tnewData.user_id = this.user_id;\r\n\t\t\t\t\tnewData.instance_id = this.instance_id;\r\n\t\t\t\t\tnewData.orderMedications = JSON.stringify(this.state.selectedMedications);\r\n\t\t\t\t\tnewData.patient = this.state.patient;\r\n\t\t\t\t\tnewData.date = this.state.date;\r\n\t\t\t\t\tnewData.note = this.state.note;\r\n\t\t\t\t\tnewData.pharmacy = this.state.pharmacy;\r\n\t\t\t\t\tnewData.doctor = this.state.doctor;\r\n\t\t\t\t\tnewData.status = this.state.completed;\r\n\t\t\t\t\tif (this.state.selectedMedications.length && newData.patient && newData.date && newData.pharmacy && newData.doctor) {\r\n\t\t\t\t\t\tuserService.addOrders(newData).then(res => {\r\n\t\t\t\t\t\t\tconsole.log('res', res);\r\n\t\t\t\t\t\t\tthis.setState(prevState => {\r\n\t\t\t\t\t\t\t\tconst data = [...prevState.data];\r\n\t\t\t\t\t\t\t\tdata.push(res);\r\n\t\t\t\t\t\t\t\tconst selectedMedications = [];\r\n\t\t\t\t\t\t\t\tconst isEditMedications = true;\r\n\t\t\t\t\t\t\t\treturn { ...prevState, data, selectedMedications, isEditMedications };\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\tNotificationManager.success(\"Die Daten werden erfolgreich gespeichert.\")\r\n\t\t\t\t\t\t}).catch(error => {\r\n\t\t\t\t\t\t\tNotificationManager.error(error.message);\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tNotificationManager.warning(\"Bitte füllen Sie die erforderlichen Felder aus.\");\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}),\r\n\r\n\t\t\tonRowDelete: oldData =>\r\n\t\t\t\tnew Promise(resolve => {\r\n\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\tresolve();\r\n\t\t\t\t\t\tconsole.log(';oldData', oldData.id);\r\n\t\t\t\t\t\tuserService.deleteOrders({ id: oldData.id }).then(res => {\r\n\t\t\t\t\t\t\tconsole.log('res', res);\r\n\t\t\t\t\t\t\tthis.setState(prevState => {\r\n\t\t\t\t\t\t\t\tconst data = [...prevState.data];\r\n\t\t\t\t\t\t\t\tdata.splice(data.indexOf(oldData), 1);\r\n\t\t\t\t\t\t\t\treturn { ...prevState, data };\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\tNotificationManager.success(\"Die Daten werden erfolgreich gelöscht.\")\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}, 600);\r\n\t\t\t\t})\r\n\t\t} : {\r\n\t\t\t\tonRowDelete: oldData =>\r\n\t\t\t\t\tnew Promise(resolve => {\r\n\t\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\t\tresolve();\r\n\t\t\t\t\t\t\tconsole.log(';oldData', oldData.id);\r\n\t\t\t\t\t\t\tuserService.deleteOrders({ id: oldData.id }).then(res => {\r\n\t\t\t\t\t\t\t\tconsole.log('res', res);\r\n\t\t\t\t\t\t\t\tthis.setState(prevState => {\r\n\t\t\t\t\t\t\t\t\tconst data = [...prevState.data];\r\n\t\t\t\t\t\t\t\t\tdata.splice(data.indexOf(oldData), 1);\r\n\t\t\t\t\t\t\t\t\treturn { ...prevState, data };\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\tNotificationManager.success(\"Die Daten werden erfolgreich gelöscht.\")\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}, 600);\r\n\t\t\t\t\t})\r\n\t\t\t};\r\n\r\n\t\treturn (\r\n\t\t\t<div className=\"tables-wrapper search-table-wrap order-page\">\r\n\t\t\t\t<SmallTitleBar\r\n\t\t\t\t\ttitle={<IntlMessages id=\"sidebar.order\" />}\r\n\t\t\t\t\tcenter\r\n\t\t\t\t/>\r\n\t\t\t\t<Container maxWidth=\"lg\">\r\n\t\t\t\t\t<Box px={{ xs: '12px', lg: 0 }} className=\"page-space\">\r\n\t\t\t\t\t\t<MaterialTable\r\n\t\t\t\t\t\t\ttitle={<IntlMessages id=\"sidebar.order\" />}\r\n\t\t\t\t\t\t\tcolumns={this.state.columns}\r\n\t\t\t\t\t\t\tdata={this.state.data}\r\n\t\t\t\t\t\t\toptions={{\r\n\t\t\t\t\t\t\t\tsearch: true,\r\n\t\t\t\t\t\t\t\tfiltering: true\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\teditable={EditableData}\r\n\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t</Container>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\nexport default Orders;\r\n\r\n\r\n"],"sourceRoot":""}