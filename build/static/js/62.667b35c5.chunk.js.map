{"version":3,"sources":["routes/Tables/Users/index.js"],"names":["rolesList","instancesList","Users","props","state","columns","title","field","editComponent","rowData","id","lookup","render","size","color","checked","status","console","log","isEdit","setState","onChange","e","target","data","instance_id","user","JSON","parse","localStorage","getItem","this","colums","userService","showUsers","pagination","then","res","roles","map","ele","role","instances","instanceName","prevState","users","className","center","maxWidth","px","xs","lg","editable","onRowAdd","newData","Promise","resolve","setTimeout","addUsers","push","onRowUpdate","oldData","editUsers","indexOf","onRowDelete","deleteUsers","splice","Component"],"mappings":"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","file":"static/js/62.667b35c5.chunk.js","sourcesContent":["/**\r\n * Search Table\r\n*/\r\nimport React, { Component } from 'react';\r\nimport MaterialTable from 'material-table';\r\nimport { Container, Box, Switch } from '@material-ui/core';\r\nimport { userService } from '../../../_services';\r\n//Components\r\nimport { SmallTitleBar } from 'components/GlobalComponents';\r\nimport IntlMessages from 'util/IntlMessages';\r\nlet rolesList = {};\r\nlet instancesList = {};\r\nclass Users extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props)\r\n\t\tthis.state = {\r\n\r\n\t\t\tcolumns: [\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: 'ID', field: 'id', editComponent: rowData => <div>\r\n\t\t\t\t\t\t{rowData.id}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t},\r\n\t\t\t\t{ title: 'Instance', field: 'instance_id', lookup: instancesList },\r\n\t\t\t\t{ title: 'User Name', field: 'name' },\r\n\t\t\t\t{ title: 'Email', field: 'email' },\r\n\t\t\t\t{ title: 'Password', field: 'password' },\r\n\t\t\t\t{ title: 'Role', field: 'role', lookup: rolesList },\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: 'Status', field: 'status', render: rowData => {\r\n\t\t\t\t\t\treturn (<Switch\r\n\t\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\tchecked={rowData.status ? true : false}\r\n\t\t\t\t\t\t/>)\r\n\r\n\t\t\t\t\t},\r\n\t\t\t\t\teditComponent: rowData => {\r\n\t\t\t\t\t\tconsole.log('rowData', rowData);\r\n\t\t\t\t\t\tif (this.state.isEdit && rowData.rowData.id) {\r\n\t\t\t\t\t\t\tthis.setState({ status: rowData.rowData.status ? true : false, isEdit: false });\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn (<Switch\r\n\t\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\tchecked={this.state.status}\r\n\t\t\t\t\t\t\tonChange={e => this.setState({ status: e.target.checked })}\r\n\t\t\t\t\t\t/>)\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t\tdata: [],\r\n\t\t\tstatus: true,\r\n\t\t\tisEdit: true,\r\n\t\t\tinstance_id: 0\r\n\r\n\t\t};\r\n\r\n\t}\r\n\r\n\tcomponentWillMount() {\r\n\t\tlet user = JSON.parse(localStorage.getItem('user'));\r\n\t\tthis.instance_id = user.instance_id;\r\n\t\t// this.setState({instance_id : this.instance_id});\r\n\t\tif (this.instance_id) {\r\n\r\n\t\t\tlet colums = [\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: 'ID', field: 'id', editComponent: rowData => <div>\r\n\t\t\t\t\t\t{rowData.id}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t},\r\n\t\t\t\t{ title: 'User Name', field: 'name' },\r\n\t\t\t\t{ title: 'Email', field: 'email' },\r\n\t\t\t\t{ title: 'Password', field: 'password' },\r\n\t\t\t\t{ title: 'Role', field: 'role', lookup: rolesList },\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: 'Status', field: 'status', render: rowData => {\r\n\t\t\t\t\t\treturn (<Switch\r\n\t\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\tchecked={rowData.status ? true : false}\r\n\t\t\t\t\t\t/>)\r\n\r\n\t\t\t\t\t},\r\n\t\t\t\t\teditComponent: rowData => {\r\n\t\t\t\t\t\tconsole.log('rowData', rowData);\r\n\t\t\t\t\t\tif (this.state.isEdit && rowData.rowData.id) {\r\n\t\t\t\t\t\t\tthis.setState({ status: rowData.rowData.status ? true : false, isEdit: false });\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn (<Switch\r\n\t\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\tchecked={this.state.status}\r\n\t\t\t\t\t\t\tonChange={e => this.setState({ status: e.target.checked })}\r\n\t\t\t\t\t\t/>)\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t];\r\n\r\n\t\t\tthis.setState({ columns: [...colums] });\r\n\r\n\t\t}\r\n\r\n\t\tuserService.showUsers({ instance_id: this.instance_id, pagination: 1 }).then(res => {\r\n\t\t\tres.roles.map(ele => {\r\n\t\t\t\trolesList[ele.role] = ele.role;\r\n\t\t\t})\r\n\t\t\tres.instances.map(ele => {\r\n\t\t\t\tinstancesList[ele.id] = ele.instanceName;\r\n\t\t\t})\r\n\r\n\t\t\tthis.setState(prevState => {\r\n\t\t\t\tconst data = res.users;\r\n\t\t\t\treturn { ...prevState, data };\r\n\r\n\t\t\t});\r\n\r\n\t\t})\r\n\r\n\t}\r\n\r\n\trender() {\r\n\r\n\t\treturn (\r\n\t\t\t<div className=\"tables-wrapper search-table-wrap\">\r\n\t\t\t\t<SmallTitleBar\r\n\t\t\t\t\ttitle={<IntlMessages id=\"sidebar.users\" />}\r\n\t\t\t\t\tcenter\r\n\t\t\t\t/>\r\n\t\t\t\t<Container maxWidth=\"lg\">\r\n\t\t\t\t\t<Box px={{ xs: '12px', lg: 0 }} className=\"page-space\">\r\n\t\t\t\t\t\t<MaterialTable\r\n\t\t\t\t\t\t\ttitle={<IntlMessages id=\"sidebar.users\" />}\r\n\t\t\t\t\t\t\tcolumns={this.state.columns}\r\n\t\t\t\t\t\t\tdata={this.state.data}\r\n\t\t\t\t\t\t\teditable={{\r\n\t\t\t\t\t\t\t\tonRowAdd: newData =>\r\n\t\t\t\t\t\t\t\t\tnew Promise(resolve => {\r\n\t\t\t\t\t\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\t\t\t\t\t\tresolve();\r\n\t\t\t\t\t\t\t\t\t\t\tconsole.log('newData', newData);\r\n\r\n\t\t\t\t\t\t\t\t\t\t\tnewData.status = this.state.status ? 1 : 0;\r\n\t\t\t\t\t\t\t\t\t\t\tif (this.instance_id) {\r\n\t\t\t\t\t\t\t\t\t\t\t\tnewData.instance_id = this.instance_id;\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\tuserService.addUsers(newData).then(res => {\r\n\t\t\t\t\t\t\t\t\t\t\t\tconsole.log('res', res);\r\n\t\t\t\t\t\t\t\t\t\t\t\tthis.setState(prevState => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tconst data = [...prevState.data];\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tdata.push(res);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tconst status = true;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn { ...prevState, data, status };\r\n\t\t\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t\t\t\t}, 600);\r\n\t\t\t\t\t\t\t\t\t}),\r\n\t\t\t\t\t\t\t\tonRowUpdate: (newData, oldData) =>\r\n\t\t\t\t\t\t\t\t\tnew Promise(resolve => {\r\n\t\t\t\t\t\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\t\t\t\t\t\tresolve();\r\n\t\t\t\t\t\t\t\t\t\t\tconsole.log('newdata', newData.id);\r\n\t\t\t\t\t\t\t\t\t\t\tnewData.status = this.state.status ? 1 : 0;\r\n\t\t\t\t\t\t\t\t\t\t\tuserService.editUsers(newData).then(res => {\r\n\t\t\t\t\t\t\t\t\t\t\t\tif (oldData) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tthis.setState(prevState => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst data = [...prevState.data];\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata[data.indexOf(oldData)] = newData;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst status = true;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst isEdit = true;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn { ...prevState, data, status, isEdit };\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t\t}, 600);\r\n\t\t\t\t\t\t\t\t\t}),\r\n\t\t\t\t\t\t\t\tonRowDelete: oldData =>\r\n\t\t\t\t\t\t\t\t\tnew Promise(resolve => {\r\n\t\t\t\t\t\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\t\t\t\t\t\tresolve();\r\n\t\t\t\t\t\t\t\t\t\t\tconsole.log(';oldData', oldData.id);\r\n\t\t\t\t\t\t\t\t\t\t\tuserService.deleteUsers({ id: oldData.id }).then(res => {\r\n\t\t\t\t\t\t\t\t\t\t\t\tconsole.log('res', res);\r\n\t\t\t\t\t\t\t\t\t\t\t\tthis.setState(prevState => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tconst data = [...prevState.data];\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tdata.splice(data.indexOf(oldData), 1);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn { ...prevState, data };\r\n\t\t\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t\t}, 600);\r\n\t\t\t\t\t\t\t\t\t}),\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t</Container>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\nexport default Users;\r\n\r\n\r\n"],"sourceRoot":""}